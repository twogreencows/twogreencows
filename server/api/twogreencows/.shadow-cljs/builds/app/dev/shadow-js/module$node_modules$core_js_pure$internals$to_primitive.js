["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js-pure/internals/to-primitive.js"],"~:js","shadow$provide.module$node_modules$core_js_pure$internals$to_primitive=function(global,require,module,exports){var isObject=require(\"module$node_modules$core_js_pure$internals$is_object\");module.exports=function(input,PREFERRED_STRING){if(!isObject(input))return input;var fn,val;if(PREFERRED_STRING&&\"function\"==typeof(fn=input.toString)&&!isObject(val=fn.call(input))||\"function\"==typeof(fn=input.valueOf)&&!isObject(val=fn.call(input))||!PREFERRED_STRING&&\"function\"==typeof(fn=input.toString)&&!isObject(val=\nfn.call(input)))return val;throw TypeError(\"Can't convert object to primitive value\");}}","~:source","shadow$provide[\"module$node_modules$core_js_pure$internals$to_primitive\"] = function(global,require,module,exports) {\nvar isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$core_js_pure$internals$is_object"]],"~:properties",["^5",[]],"~:compiled-at",1626505495527,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js_pure$internals$to_primitive.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpH,IAAIC,SAAWH,OAAA,CAAQ,sDAAR,CAMfC,OAAOC,CAAAA,OAAP,CAAiBE,QAAS,CAACC,KAAD,CAAQC,gBAAR,CAA0B,CAClD,GAAI,CAACH,QAAA,CAASE,KAAT,CAAL,CAAsB,MAAOA,MADqB,KAE9CE,EAF8C,CAE1CC,GAGR,IAFIF,gBAEJ,EAFwD,UAExD,EAFwB,OAAQC,EAAR,CAAaF,KAAMI,CAAAA,QAAnB,CAExB,EAFsE,CAACN,QAAA,CAASK,GAAT,CAAeD,EAAGG,CAAAA,IAAH,CAAQL,KAAR,CAAf,CAEvE,EADmC,UACnC,EADI,OAAQE,EAAR,CAAaF,KAAMM,CAAAA,OAAnB,CACJ,EADiD,CAACR,QAAA,CAASK,GAAT,CAAeD,EAAGG,CAAAA,IAAH,CAAQL,KAAR,CAAf,CAClD,EAAI,CAACC,gBAAL,EAAyD,UAAzD,EAAyB,OAAQC,EAAR,CAAaF,KAAMI,CAAAA,QAAnB,CAAzB,EAAuE,CAACN,QAAA,CAASK,GAAT;AAAeD,EAAGG,CAAAA,IAAH,CAAQL,KAAR,CAAf,CAAxE,CAAwG,MAAOG,IAC/G,MAAMI,UAAA,CAAU,yCAAV,CAAN,CANkD,CAPgE;\",\n\"sources\":[\"node_modules/core-js-pure/internals/to-primitive.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$core_js_pure$internals$to_primitive\\\"] = function(global,require,module,exports) {\\nvar isObject = require('../internals/is-object');\\n\\n// `ToPrimitive` abstract operation\\n// https://tc39.es/ecma262/#sec-toprimitive\\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\\n// and the second argument - flag - preferred type is a string\\nmodule.exports = function (input, PREFERRED_STRING) {\\n  if (!isObject(input)) return input;\\n  var fn, val;\\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\\n  throw TypeError(\\\"Can't convert object to primitive value\\\");\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isObject\",\"module.exports\",\"input\",\"PREFERRED_STRING\",\"fn\",\"val\",\"toString\",\"call\",\"valueOf\",\"TypeError\"]\n}\n"]