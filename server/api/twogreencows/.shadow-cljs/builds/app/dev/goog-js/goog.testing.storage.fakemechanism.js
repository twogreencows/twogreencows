["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/testing/storage/fakemechanism.js"],"~:js","goog.provide(\"goog.testing.storage.FakeMechanism\");\ngoog.setTestOnly(\"goog.testing.storage.FakeMechanism\");\ngoog.require(\"goog.storage.mechanism.IterableMechanism\");\ngoog.require(\"goog.structs.Map\");\ngoog.testing.storage.FakeMechanism = function() {\n  this.storage_ = new goog.structs.Map;\n};\ngoog.inherits(goog.testing.storage.FakeMechanism, goog.storage.mechanism.IterableMechanism);\ngoog.testing.storage.FakeMechanism.prototype.set = function(key, value) {\n  this.storage_.set(key, value);\n};\ngoog.testing.storage.FakeMechanism.prototype.get = function(key) {\n  return this.storage_.get(key, null);\n};\ngoog.testing.storage.FakeMechanism.prototype.remove = function(key) {\n  this.storage_.remove(key);\n};\ngoog.testing.storage.FakeMechanism.prototype.__iterator__ = function(opt_keys) {\n  return this.storage_.__iterator__(opt_keys);\n};\n","~:source","// Copyright 2012 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Provides a fake storage mechanism for testing.\n * @author chrishenry@google.com (Chris Henry)\n */\n\ngoog.provide('goog.testing.storage.FakeMechanism');\ngoog.setTestOnly('goog.testing.storage.FakeMechanism');\n\ngoog.require('goog.storage.mechanism.IterableMechanism');\ngoog.require('goog.structs.Map');\n\n\n\n/**\n * Creates a fake iterable mechanism.\n *\n * @constructor\n * @extends {goog.storage.mechanism.IterableMechanism}\n * @final\n */\ngoog.testing.storage.FakeMechanism = function() {\n  /**\n   * @type {goog.structs.Map}\n   * @private\n   */\n  this.storage_ = new goog.structs.Map();\n};\ngoog.inherits(\n    goog.testing.storage.FakeMechanism,\n    goog.storage.mechanism.IterableMechanism);\n\n\n/** @override */\ngoog.testing.storage.FakeMechanism.prototype.set = function(key, value) {\n  this.storage_.set(key, value);\n};\n\n\n/** @override */\ngoog.testing.storage.FakeMechanism.prototype.get = function(key) {\n  return /** @type {?string} */ (\n      this.storage_.get(key, null /* default value */));\n};\n\n\n/** @override */\ngoog.testing.storage.FakeMechanism.prototype.remove = function(key) {\n  this.storage_.remove(key);\n};\n\n\n/** @override */\ngoog.testing.storage.FakeMechanism.prototype.__iterator__ = function(opt_keys) {\n  return this.storage_.__iterator__(opt_keys);\n};\n","~:compiled-at",1626505467300,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.testing.storage.fakemechanism.js\",\n\"lineCount\":21,\n\"mappings\":\"AAmBAA,IAAKC,CAAAA,OAAL,CAAa,oCAAb,CAAA;AACAD,IAAKE,CAAAA,WAAL,CAAiB,oCAAjB,CAAA;AAEAF,IAAKG,CAAAA,OAAL,CAAa,0CAAb,CAAA;AACAH,IAAKG,CAAAA,OAAL,CAAa,kBAAb,CAAA;AAWAH,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAArB,GAAqCC,QAAQ,EAAG;AAK9C,MAAKC,CAAAA,QAAL,GAAgB,IAAIR,IAAKS,CAAAA,OAAQC,CAAAA,GAAjC;AAL8C,CAAhD;AAOAV,IAAKW,CAAAA,QAAL,CACIX,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aADzB,EAEIN,IAAKK,CAAAA,OAAQO,CAAAA,SAAUC,CAAAA,iBAF3B,CAAA;AAMAb,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAAcQ,CAAAA,SAAUC,CAAAA,GAA7C,GAAmDC,QAAQ,CAACC,GAAD,EAAMC,KAAN,CAAa;AACtE,MAAKV,CAAAA,QAASO,CAAAA,GAAd,CAAkBE,GAAlB,EAAuBC,KAAvB,CAAA;AADsE,CAAxE;AAMAlB,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAAcQ,CAAAA,SAAUK,CAAAA,GAA7C,GAAmDC,QAAQ,CAACH,GAAD,CAAM;AAC/D,SACI,IAAKT,CAAAA,QAASW,CAAAA,GAAd,CAAkBF,GAAlB,EAAuB,IAAvB,CADJ;AAD+D,CAAjE;AAOAjB,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAAcQ,CAAAA,SAAUO,CAAAA,MAA7C,GAAsDC,QAAQ,CAACL,GAAD,CAAM;AAClE,MAAKT,CAAAA,QAASa,CAAAA,MAAd,CAAqBJ,GAArB,CAAA;AADkE,CAApE;AAMAjB,IAAKI,CAAAA,OAAQC,CAAAA,OAAQC,CAAAA,aAAcQ,CAAAA,SAAUS,CAAAA,YAA7C,GAA4DC,QAAQ,CAACC,QAAD,CAAW;AAC7E,SAAO,IAAKjB,CAAAA,QAASe,CAAAA,YAAd,CAA2BE,QAA3B,CAAP;AAD6E,CAA/E;;\",\n\"sources\":[\"goog/testing/storage/fakemechanism.js\"],\n\"sourcesContent\":[\"// Copyright 2012 The Closure Library Authors. All Rights Reserved.\\n//\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n// you may not use this file except in compliance with the License.\\n// You may obtain a copy of the License at\\n//\\n//      http://www.apache.org/licenses/LICENSE-2.0\\n//\\n// Unless required by applicable law or agreed to in writing, software\\n// distributed under the License is distributed on an \\\"AS-IS\\\" BASIS,\\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n// See the License for the specific language governing permissions and\\n// limitations under the License.\\n\\n/**\\n * @fileoverview Provides a fake storage mechanism for testing.\\n * @author chrishenry@google.com (Chris Henry)\\n */\\n\\ngoog.provide('goog.testing.storage.FakeMechanism');\\ngoog.setTestOnly('goog.testing.storage.FakeMechanism');\\n\\ngoog.require('goog.storage.mechanism.IterableMechanism');\\ngoog.require('goog.structs.Map');\\n\\n\\n\\n/**\\n * Creates a fake iterable mechanism.\\n *\\n * @constructor\\n * @extends {goog.storage.mechanism.IterableMechanism}\\n * @final\\n */\\ngoog.testing.storage.FakeMechanism = function() {\\n  /**\\n   * @type {goog.structs.Map}\\n   * @private\\n   */\\n  this.storage_ = new goog.structs.Map();\\n};\\ngoog.inherits(\\n    goog.testing.storage.FakeMechanism,\\n    goog.storage.mechanism.IterableMechanism);\\n\\n\\n/** @override */\\ngoog.testing.storage.FakeMechanism.prototype.set = function(key, value) {\\n  this.storage_.set(key, value);\\n};\\n\\n\\n/** @override */\\ngoog.testing.storage.FakeMechanism.prototype.get = function(key) {\\n  return /** @type {?string} */ (\\n      this.storage_.get(key, null /* default value */));\\n};\\n\\n\\n/** @override */\\ngoog.testing.storage.FakeMechanism.prototype.remove = function(key) {\\n  this.storage_.remove(key);\\n};\\n\\n\\n/** @override */\\ngoog.testing.storage.FakeMechanism.prototype.__iterator__ = function(opt_keys) {\\n  return this.storage_.__iterator__(opt_keys);\\n};\\n\"],\n\"names\":[\"goog\",\"provide\",\"setTestOnly\",\"require\",\"testing\",\"storage\",\"FakeMechanism\",\"goog.testing.storage.FakeMechanism\",\"storage_\",\"structs\",\"Map\",\"inherits\",\"mechanism\",\"IterableMechanism\",\"prototype\",\"set\",\"goog.testing.storage.FakeMechanism.prototype.set\",\"key\",\"value\",\"get\",\"goog.testing.storage.FakeMechanism.prototype.get\",\"remove\",\"goog.testing.storage.FakeMechanism.prototype.remove\",\"__iterator__\",\"goog.testing.storage.FakeMechanism.prototype.__iterator__\",\"opt_keys\"]\n}\n"]