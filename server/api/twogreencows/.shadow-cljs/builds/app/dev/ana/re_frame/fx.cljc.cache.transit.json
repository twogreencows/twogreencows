["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed, other than that\n *   `:db` is guaranteed to be executed first.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__82962 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__82963 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__82963);\n\ntry{try{var effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5753__auto___83051 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5753__auto___83051)){\nvar new_db_83052 = temp__5753__auto___83051;\nvar fexpr__82965_83053 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__82965_83053.cljs$core$IFn$_invoke$arity$1 ? fexpr__82965_83053.cljs$core$IFn$_invoke$arity$1(new_db_83052) : fexpr__82965_83053.call(null,new_db_83052));\n} else {\n}\n\nvar seq__82966 = cljs.core.seq(effects_without_db);\nvar chunk__82967 = null;\nvar count__82968 = (0);\nvar i__82969 = (0);\nwhile(true){\nif((i__82969 < count__82968)){\nvar vec__82976 = chunk__82967.cljs$core$IIndexed$_nth$arity$2(null,i__82969);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82976,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82976,(1),null);\nvar temp__5751__auto___83054 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___83054)){\nvar effect_fn_83055 = temp__5751__auto___83054;\n(effect_fn_83055.cljs$core$IFn$_invoke$arity$1 ? effect_fn_83055.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_83055.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__83058 = seq__82966;\nvar G__83059 = chunk__82967;\nvar G__83060 = count__82968;\nvar G__83061 = (i__82969 + (1));\nseq__82966 = G__83058;\nchunk__82967 = G__83059;\ncount__82968 = G__83060;\ni__82969 = G__83061;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__82966);\nif(temp__5753__auto__){\nvar seq__82966__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__82966__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__82966__$1);\nvar G__83062 = cljs.core.chunk_rest(seq__82966__$1);\nvar G__83063 = c__4591__auto__;\nvar G__83064 = cljs.core.count(c__4591__auto__);\nvar G__83065 = (0);\nseq__82966 = G__83062;\nchunk__82967 = G__83063;\ncount__82968 = G__83064;\ni__82969 = G__83065;\ncontinue;\n} else {\nvar vec__82979 = cljs.core.first(seq__82966__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82979,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82979,(1),null);\nvar temp__5751__auto___83066 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___83066)){\nvar effect_fn_83067 = temp__5751__auto___83066;\n(effect_fn_83067.cljs$core$IFn$_invoke$arity$1 ? effect_fn_83067.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_83067.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__83068 = cljs.core.next(seq__82966__$1);\nvar G__83069 = null;\nvar G__83070 = (0);\nvar G__83071 = (0);\nseq__82966 = G__83068;\nchunk__82967 = G__83069;\ncount__82968 = G__83070;\ni__82969 = G__83071;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__82628__auto___83072 = re_frame.interop.now();\nvar duration__82629__auto___83073 = (end__82628__auto___83072 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__82629__auto___83073,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__82628__auto___83072);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__82962);\n}} else {\nvar effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5753__auto___83074 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5753__auto___83074)){\nvar new_db_83075 = temp__5753__auto___83074;\nvar fexpr__82982_83076 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__82982_83076.cljs$core$IFn$_invoke$arity$1 ? fexpr__82982_83076.cljs$core$IFn$_invoke$arity$1(new_db_83075) : fexpr__82982_83076.call(null,new_db_83075));\n} else {\n}\n\nvar seq__82983 = cljs.core.seq(effects_without_db);\nvar chunk__82984 = null;\nvar count__82985 = (0);\nvar i__82986 = (0);\nwhile(true){\nif((i__82986 < count__82985)){\nvar vec__82993 = chunk__82984.cljs$core$IIndexed$_nth$arity$2(null,i__82986);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82993,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82993,(1),null);\nvar temp__5751__auto___83077 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___83077)){\nvar effect_fn_83078 = temp__5751__auto___83077;\n(effect_fn_83078.cljs$core$IFn$_invoke$arity$1 ? effect_fn_83078.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_83078.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__83079 = seq__82983;\nvar G__83080 = chunk__82984;\nvar G__83081 = count__82985;\nvar G__83082 = (i__82986 + (1));\nseq__82983 = G__83079;\nchunk__82984 = G__83080;\ncount__82985 = G__83081;\ni__82986 = G__83082;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__82983);\nif(temp__5753__auto__){\nvar seq__82983__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__82983__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__82983__$1);\nvar G__83083 = cljs.core.chunk_rest(seq__82983__$1);\nvar G__83084 = c__4591__auto__;\nvar G__83085 = cljs.core.count(c__4591__auto__);\nvar G__83086 = (0);\nseq__82983 = G__83083;\nchunk__82984 = G__83084;\ncount__82985 = G__83085;\ni__82986 = G__83086;\ncontinue;\n} else {\nvar vec__82996 = cljs.core.first(seq__82983__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82996,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82996,(1),null);\nvar temp__5751__auto___83087 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___83087)){\nvar effect_fn_83088 = temp__5751__auto___83087;\n(effect_fn_83088.cljs$core$IFn$_invoke$arity$1 ? effect_fn_83088.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_83088.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__83089 = cljs.core.next(seq__82983__$1);\nvar G__83090 = null;\nvar G__83091 = (0);\nvar G__83092 = (0);\nseq__82983 = G__83089;\nchunk__82984 = G__83090;\ncount__82985 = G__83091;\ni__82986 = G__83092;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.dispatch_later = (function re_frame$fx$dispatch_later(p__83000){\nvar map__83001 = p__83000;\nvar map__83001__$1 = cljs.core.__destructure_map(map__83001);\nvar effect = map__83001__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__83001__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__83001__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nreturn re_frame.interop.set_timeout_BANG_((function (){\nreturn re_frame.router.dispatch(dispatch);\n}),ms);\n}\n});\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nif(cljs.core.map_QMARK_(value)){\nreturn re_frame.fx.dispatch_later(value);\n} else {\nvar seq__83003 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__83004 = null;\nvar count__83005 = (0);\nvar i__83006 = (0);\nwhile(true){\nif((i__83006 < count__83005)){\nvar effect = chunk__83004.cljs$core$IIndexed$_nth$arity$2(null,i__83006);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__83094 = seq__83003;\nvar G__83095 = chunk__83004;\nvar G__83096 = count__83005;\nvar G__83097 = (i__83006 + (1));\nseq__83003 = G__83094;\nchunk__83004 = G__83095;\ncount__83005 = G__83096;\ni__83006 = G__83097;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__83003);\nif(temp__5753__auto__){\nvar seq__83003__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__83003__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__83003__$1);\nvar G__83098 = cljs.core.chunk_rest(seq__83003__$1);\nvar G__83099 = c__4591__auto__;\nvar G__83100 = cljs.core.count(c__4591__auto__);\nvar G__83101 = (0);\nseq__83003 = G__83098;\nchunk__83004 = G__83099;\ncount__83005 = G__83100;\ni__83006 = G__83101;\ncontinue;\n} else {\nvar effect = cljs.core.first(seq__83003__$1);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__83102 = cljs.core.next(seq__83003__$1);\nvar G__83103 = null;\nvar G__83104 = (0);\nvar G__83105 = (0);\nseq__83003 = G__83102;\nchunk__83004 = G__83103;\ncount__83005 = G__83104;\ni__83006 = G__83105;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),(function (seq_of_effects){\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect expects a seq, but was given \",cljs.core.type(seq_of_effects)], 0));\n} else {\nvar seq__83013 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\nvar chunk__83014 = null;\nvar count__83015 = (0);\nvar i__83016 = (0);\nwhile(true){\nif((i__83016 < count__83015)){\nvar vec__83029 = chunk__83014.cljs$core$IIndexed$_nth$arity$2(null,i__83016);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__83029,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__83029,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5751__auto___83106 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___83106)){\nvar effect_fn_83107 = temp__5751__auto___83106;\n(effect_fn_83107.cljs$core$IFn$_invoke$arity$1 ? effect_fn_83107.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_83107.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__83108 = seq__83013;\nvar G__83109 = chunk__83014;\nvar G__83110 = count__83015;\nvar G__83111 = (i__83016 + (1));\nseq__83013 = G__83108;\nchunk__83014 = G__83109;\ncount__83015 = G__83110;\ni__83016 = G__83111;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__83013);\nif(temp__5753__auto__){\nvar seq__83013__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__83013__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__83013__$1);\nvar G__83112 = cljs.core.chunk_rest(seq__83013__$1);\nvar G__83113 = c__4591__auto__;\nvar G__83114 = cljs.core.count(c__4591__auto__);\nvar G__83115 = (0);\nseq__83013 = G__83112;\nchunk__83014 = G__83113;\ncount__83015 = G__83114;\ni__83016 = G__83115;\ncontinue;\n} else {\nvar vec__83035 = cljs.core.first(seq__83013__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__83035,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__83035,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5751__auto___83116 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5751__auto___83116)){\nvar effect_fn_83117 = temp__5751__auto___83116;\n(effect_fn_83117.cljs$core$IFn$_invoke$arity$1 ? effect_fn_83117.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_83117.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__83118 = cljs.core.next(seq__83013__$1);\nvar G__83119 = null;\nvar G__83120 = (0);\nvar G__83121 = (0);\nseq__83013 = G__83118;\nchunk__83014 = G__83119;\ncount__83015 = G__83120;\ni__83016 = G__83121;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__83040 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__83041 = null;\nvar count__83042 = (0);\nvar i__83043 = (0);\nwhile(true){\nif((i__83043 < count__83042)){\nvar event = chunk__83041.cljs$core$IIndexed$_nth$arity$2(null,i__83043);\nre_frame.router.dispatch(event);\n\n\nvar G__83122 = seq__83040;\nvar G__83123 = chunk__83041;\nvar G__83124 = count__83042;\nvar G__83125 = (i__83043 + (1));\nseq__83040 = G__83122;\nchunk__83041 = G__83123;\ncount__83042 = G__83124;\ni__83043 = G__83125;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__83040);\nif(temp__5753__auto__){\nvar seq__83040__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__83040__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__83040__$1);\nvar G__83126 = cljs.core.chunk_rest(seq__83040__$1);\nvar G__83127 = c__4591__auto__;\nvar G__83128 = cljs.core.count(c__4591__auto__);\nvar G__83129 = (0);\nseq__83040 = G__83126;\nchunk__83041 = G__83127;\ncount__83042 = G__83128;\ni__83043 = G__83129;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__83040__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__83130 = cljs.core.next(seq__83040__$1);\nvar G__83131 = null;\nvar G__83132 = (0);\nvar G__83133 = (0);\nseq__83040 = G__83130;\nchunk__83041 = G__83131;\ncount__83042 = G__83132;\ni__83043 = G__83133;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__83046 = cljs.core.seq(value);\nvar chunk__83047 = null;\nvar count__83048 = (0);\nvar i__83049 = (0);\nwhile(true){\nif((i__83049 < count__83048)){\nvar event = chunk__83047.cljs$core$IIndexed$_nth$arity$2(null,i__83049);\nclear_event(event);\n\n\nvar G__83137 = seq__83046;\nvar G__83138 = chunk__83047;\nvar G__83139 = count__83048;\nvar G__83140 = (i__83049 + (1));\nseq__83046 = G__83137;\nchunk__83047 = G__83138;\ncount__83048 = G__83139;\ni__83049 = G__83140;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__83046);\nif(temp__5753__auto__){\nvar seq__83046__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__83046__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__83046__$1);\nvar G__83141 = cljs.core.chunk_rest(seq__83046__$1);\nvar G__83142 = c__4591__auto__;\nvar G__83143 = cljs.core.count(c__4591__auto__);\nvar G__83144 = (0);\nseq__83046 = G__83141;\nchunk__83047 = G__83142;\ncount__83048 = G__83143;\ni__83049 = G__83144;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__83046__$1);\nclear_event(event);\n\n\nvar G__83145 = cljs.core.next(seq__83046__$1);\nvar G__83146 = null;\nvar G__83147 = (0);\nvar G__83148 = (0);\nseq__83046 = G__83145;\nchunk__83047 = G__83146;\ncount__83048 = G__83147;\ni__83049 = G__83148;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^Q","~$re-frame.interceptor","^R","~$re-frame.events","^S","~$re-frame.trace","^T","~$re-frame.registrar","^U","~$cljs.core","^V","~$goog","^W","~$router","~$re-frame.router","^Y","^Y","~$trace","^T","~$events","^S","~$re-frame.loggers","^10","~$re-frame.db","^11"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$app-db","^11","~$->interceptor","^R","~$set-timeout!","^Q","~$get-handler","^U","~$clear-handlers","^U","~$register-handler","^U","~$console","^10"],"~:require-macros",["^ ","^T","^T","^Z","^T","^V","^V"],"~:form",["~#list",["~$ns","^L",["^1>",["^13",["^Y","~:as","^X"],["^11","~:refer",["^15"]],["^R","^1A",["^16"]],["^Q","^1A",["^17"]],["^S","^1@","^["],["^U","^1A",["^18","^19","^1:"]],["^10","^1A",["^1;"]],["^T","^1@","^Z","~:include-macros",true]]]]],"~:flags",["^ ","^13",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^Y","^11","^R","^Q","^S","^U","^10","^T"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1626505520345,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (let [effects            (:effects context)\n                     effects-without-db (dissoc effects :db)]\n                 ;; :db effect is guaranteed to be handled before all other effects.\n                 (when-let [new-db (:db effects)]\n                   ((get-handler kind :db false) new-db))\n                 (doseq [[effect-key effect-value] effects-without-db]\n                   (if-let [effect-fn (get-handler kind effect-key false)]\n                     (effect-fn effect-value)\n                     (console :warn \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\"))))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(defn dispatch-later\n  [{:keys [ms dispatch] :as effect}]\n  (if (or (empty? dispatch) (not (number? ms)))\n    (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n    (set-timeout! #(router/dispatch dispatch) ms)))\n\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (if (map? value)\n      (dispatch-later value)\n      (doseq [effect (remove nil? value)]\n        (dispatch-later effect)))))\n\n;; :fx\n;;\n;; Handle one or more effects. Expects a collection of vectors (tuples) of the\n;; form [effect-key effect-value]. `nil` entries in the collection are ignored\n;; so effects can be added conditionally.\n;;\n;; usage:\n;;\n;; {:fx [[:dispatch [:event-id \"param\"]]\n;;       nil\n;;       [:http-xhrio {:method :post\n;;                     ...}]]}\n;;\n\n(reg-fx\n  :fx\n  (fn [seq-of-effects]\n    (if-not (sequential? seq-of-effects)\n      (console :error \"re-frame: \\\":fx\\\" effect expects a seq, but was given \" (type seq-of-effects))\n      (doseq [[effect-key effect-value] (remove nil? seq-of-effects)]\n        (when (= :db effect-key)\n          (console :warn \"re-frame: \\\":fx\\\" effect should not contain a :db effect\"))\n        (if-let [effect-fn (get-handler kind effect-key false)]\n          (effect-fn effect-value)\n          (console :warn \"re-frame: in \\\":fx\\\" effect found \" effect-key \" which has no associated handler. Ignoring.\"))))))\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__82962","re-frame.trace/*current-trace*","*current-trace*-temp-val__82963","re-frame.trace/start-trace","end__82628__auto__","re-frame.interop/now","duration__82629__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","effects","effects-without-db","cljs.core.dissoc","temp__5753__auto__","new-db","fexpr__82965","fexpr__82982","re_frame.registrar.get_handler","seq__82966","cljs.core/seq","chunk__82967","count__82968","i__82969","vec__82976","cljs.core.nth","cljs.core/chunked-seq?","c__4591__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__82979","cljs.core/first","cljs.core/next","seq__82983","chunk__82984","count__82985","i__82986","vec__82993","vec__82996","effect-key","effect-value","temp__5751__auto__","effect-fn","re_frame.loggers.console","p__83000","map__83001","cljs.core/--destructure-map","cljs.core.get","re-frame.fx/dispatch-later","ms","dispatch","effect","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","value","cljs.core/map?","seq__83003","chunk__83004","count__83005","i__83006","cljs.core.remove","cljs.core/nil?","seq-of-effects","cljs.core/sequential?","cljs.core/type","seq__83013","chunk__83014","count__83015","i__83016","vec__83029","vec__83035","cljs.core._EQ_","cljs.core/vector?","seq__83040","chunk__83041","count__83042","i__83043","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__83046","chunk__83047","count__83048","i__83049","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^J",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$cljs.core/=","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.fx/dispatch-later","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1G","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^W","^V","~$reagent.debug","~$reagent.impl.util"]]],["^1G","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.dom.HtmlElement"]]],["^1G","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.labs.userAgent.util","~$goog.string"]]],["^1G","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.array","~$goog.asserts"]]],["^1G","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1G","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2Q","~$goog.object","~$goog.string.internal"]]],["^1G","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2X"]]],["^1G","re_frame/loggers.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","~$clojure.set"]]],["^1G","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T"]]],["^1G","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","~$clojure.string","~$clojure.walk","^2W","^2N"]]],["^1G","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2Q","~$goog.reflect","^2R"]]],["^1G","re_frame/router.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^S","^Q","^10","^T"]]],["^1G","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2U","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1G","re_frame/registrar.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Q","^10","~$re-frame.settings"]]],["^1G","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2V"]]],["^1G","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^2O","^2N","~$reagent.impl.batching","^33","^2W"]]],["^1G","re_frame/interop.cljs"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","~$goog.async.nextTick","~$goog.events","~$reagent.core","~$reagent.ratom"]]],["^1G","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.disposable.IDisposable"]]],["^1G","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","42b9e7b7183490d3c1def6c7e906fed1824435eb","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1G","shadow/js.js"],["cf0f0b0b78819e6f54388955752d9242b3eae701","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","reagent/impl/template.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^?","^34","^2O","~$reagent.impl.component","^3?","~$reagent.impl.input","~$reagent.impl.protocols","^3C","^2N","^2W"]]],["^1G","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T"]]],"~:SHADOW-TIMESTAMP",[1621409642000,1621409642000,1620991109000],["^3E","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","42b9e7b7183490d3c1def6c7e906fed1824435eb","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^3F","~$module$node_modules$object_assign$index"]]],["^1G","re_frame/events.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^11","~$re-frame.utils","^Q","^U","^10","^R","^T"]]],["^1G","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","^39"]]],["^1G","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.events.ListenableKey"]]],["^1G","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","~$goog.html.trustedtypes","^2[","^30","^31","^32"]]],["^1G","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","~$goog.events.Listener","^2W"]]],["^1G","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","~$goog.html.SafeUrl","^31","^32","^2X"]]],["^1G","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3R","^2Z","~$goog.html.uncheckedconversions","^31","^2X"]]],["^1G","reagent/impl/component.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^2W","^?","^2O","^3?","^3K","^3C","^2N"]]],["^1G","clojure/walk.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V"]]],["^1G","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1G","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","~$goog.dom.TagName","~$goog.dom.tags","^3V","^3W","~$goog.html.SafeStyleSheet","^3R","^2Z","^3P","^2[","^30","^36","^2W","^31","^32","^2X"]]],["^1G","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2W"]]],["^1G","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2Q","^2R"]]],["^1G","re_frame/settings.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Q","^10"]]],["^1G","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3[","~$goog.dom.safe","^3U","^3X","~$goog.math.Coordinate","~$goog.math.Size","^2W","^2R","~$goog.string.Unicode","^2V"]]],["^1G","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.debug.Error","^43"]]],["^1G","reagent/impl/protocols.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V"]]],["^1G","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","^2R","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^3E","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","42b9e7b7183490d3c1def6c7e906fed1824435eb","519ffd5a4c91b67302cc9947b794966d629860cd","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^3F"]]],["^1G","re_frame/db.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Q"]]],["^1G","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",[]]],["^1G","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2W"]]],["^1G","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^2R","~$goog.string.StringBuffer"]]],["^3E","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","42b9e7b7183490d3c1def6c7e906fed1824435eb","6093d43b27c84de58b9ce55e3a930469339c9e54","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^3F","^3M"]]],["^1G","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T"]]],["^1G","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^44","^3X","^31","^2X"]]],["^1G","re_frame/interceptor.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^10","^Q","^T","^33"]]],["^1G","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2X"]]],["^1G","reagent/core.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^?","~$reagent.impl.template","^3I","^2O","^3?","^3K","^3C","^2N"]]],["^1G","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","~$goog.debug.errorcontext","^2V"]]],["^1G","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.math"]]],["^1G","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","^3T","^4A"]]],["^1G","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^3:","~$goog.dom","^3[","^44","^3T","^3U","^2Z","^36","^37","^31"]]],["^1G","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","^3U","^3V","^3W","^41","^3R","^2Z","^31","^2X"]]],["^1G","re_frame/utils.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^10"]]],["^1G","re_frame/fx.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Y","^11","^R","^Q","^S","^U","^10","^T"]]],["^1G","reagent/impl/input.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^3I","^3?","^3K"]]],["^1G","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.Disposable","~$goog.events.EventId"]]],["^1G","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.math.Long","~$goog.math.Integer","^2R","^2W","^2S","~$goog.Uri","^4>"]]],["^1G","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","^3P","^31","^32"]]],["^1G","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V"]]],["^1G","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","^3W","^2W","^31","^32","^2X"]]],["^1G","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.debug","^2U","~$goog.events.Event","~$goog.events.EventType","^39","^2V"]]],["^1G","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^39"]]],["^1G","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2V"]]],["^1G","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V"]]],["^1G","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","^2R"]]],["^1G","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","^32"]]],["^1G","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^4D"]]],["^1G","re_frame/trace.cljc"],["b153aa5637718f7ef415049480b003bb00fd359b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Q","^10","^3T"]]]]],"~:clj-info",["^ ","jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1620986767000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/core.clj",1620893898000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1620893898000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1615061596000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596475466000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1620893898000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/re-frame/re-frame/1.2.0/re-frame-1.2.0.jar!/re_frame/trace.cljc",1620893892000,"jar:file:/Users/lcerveau/.m2/repository/re-frame/re-frame/1.2.0/re-frame-1.2.0.jar!/re_frame/interop.clj",1620893892000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1620893898000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1620991109000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W","^X","^Y","^Y","^Y","^Z","^T","^[","^S","^10","^10","^11","^11"],"^12",["^J",["^13"]],"~:shadow/js-access-global",["^J",["Error"]],"^14",["^ ","^15","^11","^16","^R","^17","^Q","^18","^U","^19","^U","^1:","^U","^1;","^10"],"~:defs",["^ ","~$kind",["^ ","^K","^1S","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1>",["~$quote",["^1>",[["~$id","~$handler"]]]]]],"^K","^1U","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1>",[["^5L","^5M"]]],"~:protocol-impl",null,"~:arglists-meta",["^1>",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^5J",["^1>",["^5K",["^1>",[["^5L","^5M"]]]]]],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",24,"^8",6,"^9",24,"^:",11],"^K","^1W","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",24,"^9",24,"^5F","~$cljs.core/IMap","~:doc","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first."],"~$dispatch-later",["^ ","^5I",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",79,"^8",7,"^9",79,"^:",21,"^5J",["^1>",["^5K",["^1>",[[["^ ","~:keys",["~$ms","~$dispatch"],"^1@","~$effect"]]]]]]],"^K","^23","^6","re_frame/fx.cljc","^:",21,"^5N",["^1>",[["~$p__83000"]]],"^5O",null,"^5P",["^1>",[null,null]],"^8",1,"^5Q",false,"^7",79,"^5R",["^J",["^5S","~$js"]],"^9",79,"^5T",1,"^5U",true,"^5J",["^1>",["^5K",["^1>",[[["^ ","^5Z",["^5[","^60"],"^1@","^61"]]]]]]]],"^1<",["^ ","^T","^T","^Z","^T","^V","^V"],"~:cljs.analyzer/constants",["^ ","^12",["^J",["~:db","~:warn","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^6D","^6?","^67","^6=","^6E","^6>","^68","^6:","^6B","^6@","^65","^66","^6C","^6<","^6A","^6F","^69","^6;"]],"^1C",["^ ","^13",["^J",[]]],"^1D",["^ "],"^1E",["^W","^V","^Y","^11","^R","^Q","^S","^U","^10","^T"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^2I",[["^6J","~:static-fns"],true,["^6J","~:shadow-tweaks"],null,["^6J","~:source-map-inline"],null,["^6J","~:elide-asserts"],false,["^6J","~:optimize-constants"],null,["^6J","^1J"],null,["^6J","~:external-config"],null,["^6J","~:tooling-config"],null,["^6J","~:emit-constants"],null,["^6J","~:load-tests"],null,["^6J","~:form-size-threshold"],null,["^6J","~:data-readers"],null,["^6J","~:infer-externs"],"~:auto",["^6J","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6J","~:fn-invoke-direct"],null,["^6J","~:source-map"],"/dev/null"]]]