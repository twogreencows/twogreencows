["^ ","~:output",["^ ","~:js","goog.provide('taoensso.sente');\nif(cljs.core.vector_QMARK_(taoensso.encore.encore_version)){\ntaoensso.encore.assert_min_encore_version(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(105),(0)], null));\n} else {\ntaoensso.encore.assert_min_encore_version(2.105);\n}\n/**\n * Useful for identifying client/server mismatch\n */\ntaoensso.sente.sente_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(11),(0)], null);\ntaoensso.sente.node_target_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\");\nif((typeof taoensso !== 'undefined') && (typeof taoensso.sente !== 'undefined') && (typeof taoensso.sente.debug_mode_QMARK__ !== 'undefined')){\n} else {\ntaoensso.sente.debug_mode_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\n}\ntaoensso.sente.expected = (function taoensso$sente$expected(expected,x){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),expected,new cljs.core.Keyword(null,\"actual\",\"actual\",107306363),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type(x),new cljs.core.Keyword(null,\"value\",\"value\",305978217),x], null)], null);\n});\n/**\n * Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n *   returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\n */\ntaoensso.sente.validate_event = (function taoensso$sente$validate_event(x){\nif((!(cljs.core.vector_QMARK_(x)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-type\",\"wrong-type\",929556915),taoensso.sente.expected(new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),x)], null);\n} else {\nif(cljs.core.not((function (){var G__96134 = cljs.core.count(x);\nvar fexpr__96133 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null);\nreturn (fexpr__96133.cljs$core$IFn$_invoke$arity$1 ? fexpr__96133.cljs$core$IFn$_invoke$arity$1(G__96134) : fexpr__96133.call(null,G__96134));\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-length\",\"wrong-length\",1367572281),taoensso.sente.expected(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),x)], null);\n} else {\nvar vec__96142 = x;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96142,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96142,(1),null);\nif((!((ev_id instanceof cljs.core.Keyword)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-id-type\",\"wrong-id-type\",-1213601689),taoensso.sente.expected(new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),ev_id)], null);\n} else {\nif(cljs.core.not(cljs.core.namespace(ev_id))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"unnamespaced-id\",\"unnamespaced-id\",1976189772),taoensso.sente.expected(new cljs.core.Keyword(null,\"namespaced-keyword\",\"namespaced-keyword\",131372895),ev_id)], null);\n} else {\nreturn null;\n\n}\n}\n\n}\n}\n});\n/**\n * Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n *   throws a validation exception.\n */\ntaoensso.sente.assert_event = (function taoensso$sente$assert_event(x){\nvar temp__5753__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar errs = temp__5753__auto__;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid event\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),x,new cljs.core.Keyword(null,\"errors\",\"errors\",-908790718),errs], null));\n} else {\nreturn null;\n}\n});\n/**\n * Valid [ev-id ?ev-data] form?\n */\ntaoensso.sente.event_QMARK_ = (function taoensso$sente$event_QMARK_(x){\nreturn (taoensso.sente.validate_event(x) == null);\n});\ntaoensso.sente.as_event = (function taoensso$sente$as_event(x){\nvar temp__5751__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar errs = temp__5751__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-event\",\"chsk/bad-event\",-565206930),x], null);\n} else {\nreturn x;\n}\n});\ntaoensso.sente.client_event_msg_QMARK_ = (function taoensso$sente$client_event_msg_QMARK_(x){\nif(cljs.core.map_QMARK_(x)){\nif(taoensso.encore.ks_GT__EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x)){\nvar map__96152 = x;\nvar map__96152__$1 = cljs.core.__destructure_map(map__96152);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96152__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96152__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96152__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96152__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(state)) && (taoensso.sente.event_QMARK_(event)));\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ntaoensso.sente.server_event_msg_QMARK_ = (function taoensso$sente$server_event_msg_QMARK_(x){\nif(cljs.core.map_QMARK_(x)){\nif(taoensso.encore.ks_GT__EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),null,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),null,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787),null,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x)){\nvar map__96161 = x;\nvar map__96161__$1 = cljs.core.__destructure_map(map__96161);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96161__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96161__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar connected_uids = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96161__$1,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231));\nvar send_buffers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96161__$1,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787));\nvar ring_req = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96161__$1,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96161__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96161__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96161__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(connected_uids)) && (taoensso.encore.atom_QMARK_(send_buffers)) && (cljs.core.map_QMARK_(ring_req)) && (taoensso.encore.nblank_str_QMARK_(client_id)) && (taoensso.sente.event_QMARK_(event)) && ((((_QMARK_reply_fn == null)) || (cljs.core.ifn_QMARK_(_QMARK_reply_fn)))));\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n/**\n * All server `event-msg`s go through this\n */\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = (function taoensso$sente$put_server_event_msg_GT_ch_recv_BANG_(ch_recv,p__96163){\nvar map__96164 = p__96163;\nvar map__96164__$1 = cljs.core.__destructure_map(map__96164);\nvar ev_msg = map__96164__$1;\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96164__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96164__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nvar vec__96165 = taoensso.sente.as_event(event);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96165,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96165,(1),null);\nvar valid_event = vec__96165;\nvar ev_msg_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),valid_event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null)], 0));\nif((!(taoensso.sente.server_event_msg_QMARK_(ev_msg_STAR_)))){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,194,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad ev-msg: %s\",ev_msg], null);\n}),null)),null,1043996904);\n} else {\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(ch_recv,ev_msg_STAR_);\n}\n});\ntaoensso.sente.cb_error_QMARK_ = (function taoensso$sente$cb_error_QMARK_(cb_reply_clj){\nvar fexpr__96168 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264),null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439),null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489),null], null), null);\nreturn (fexpr__96168.cljs$core$IFn$_invoke$arity$1 ? fexpr__96168.cljs$core$IFn$_invoke$arity$1(cb_reply_clj) : fexpr__96168.call(null,cb_reply_clj));\n});\ntaoensso.sente.cb_success_QMARK_ = (function taoensso$sente$cb_success_QMARK_(cb_reply_clj){\nreturn cljs.core.not(taoensso.sente.cb_error_QMARK_(cb_reply_clj));\n});\n/**\n * prefixed-pstr->[clj ?cb-uuid]\n */\ntaoensso.sente.unpack = (function taoensso$sente$unpack(packer,prefixed_pstr){\nif(typeof prefixed_pstr === 'string'){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",208,\"(string? prefixed-pstr)\",prefixed_pstr,null,null);\n}\n\nvar wrapped_QMARK_ = taoensso.encore.str_starts_with_QMARK_(prefixed_pstr,\"+\");\nvar pstr = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(prefixed_pstr,(1));\nvar clj = (function (){try{return taoensso.sente.interfaces.unpack(packer,pstr);\n}catch (e96172){var t = e96172;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,215,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad package: %s (%s)\",pstr,t], null);\n}),null)),null,625765821);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-package\",\"chsk/bad-package\",501893679),pstr], null);\n}})();\nvar vec__96169 = ((wrapped_QMARK_)?clj:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,null], null));\nvar clj__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96169,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96169,(1),null);\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),_QMARK_cb_uuid))?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):_QMARK_cb_uuid);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,221,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unpacking: %s -> %s\",prefixed_pstr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null)], null);\n}),null)),null,-1560244832);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null);\n});\n/**\n * clj->prefixed-pstr\n */\ntaoensso.sente.pack = (function taoensso$sente$pack(var_args){\nvar G__96174 = arguments.length;\nswitch (G__96174) {\ncase 2:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2 = (function (packer,clj){\nvar pstr = [\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,228,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (unwrapped): %s -> %s\",clj,pstr], null);\n}),null)),null,826181720);\n\nreturn pstr;\n}));\n\n(taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3 = (function (packer,clj,_QMARK_cb_uuid){\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_cb_uuid,new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321)))?(0):_QMARK_cb_uuid);\nvar wrapped_clj = (cljs.core.truth_(_QMARK_cb_uuid__$1)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,_QMARK_cb_uuid__$1], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null));\nvar pstr = [\"+\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,wrapped_clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,237,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (wrapped): %s -> %s\",wrapped_clj,pstr], null);\n}),null)),null,-1145765985);\n\nreturn pstr;\n}));\n\n(taoensso.sente.pack.cljs$lang$maxFixedArity = 3);\n\n\n/**\n* @constructor\n * @implements {taoensso.sente.interfaces.IPacker}\n*/\ntaoensso.sente.EdnPacker = (function (){\n});\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = (function (_,x){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(x);\n}));\n\n(taoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = (function (_,s){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(s);\n}));\n\n(taoensso.sente.EdnPacker.getBasis = (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(taoensso.sente.EdnPacker.cljs$lang$type = true);\n\n(taoensso.sente.EdnPacker.cljs$lang$ctorStr = \"taoensso.sente/EdnPacker\");\n\n(taoensso.sente.EdnPacker.cljs$lang$ctorPrWriter = (function (this__4404__auto__,writer__4405__auto__,opt__4406__auto__){\nreturn cljs.core._write(writer__4405__auto__,\"taoensso.sente/EdnPacker\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/EdnPacker.\n */\ntaoensso.sente.__GT_EdnPacker = (function taoensso$sente$__GT_EdnPacker(){\nreturn (new taoensso.sente.EdnPacker());\n});\n\ntaoensso.sente.default_edn_packer = (new taoensso.sente.EdnPacker());\ntaoensso.sente.coerce_packer = (function taoensso$sente$coerce_packer(x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885))){\nreturn taoensso.sente.default_edn_packer;\n} else {\nvar e = (function (){try{if((function (p1__96179_SHARP_){\nif((!((p1__96179_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__96179_SHARP_.taoensso$sente$interfaces$IPacker$)))){\nreturn true;\n} else {\nif((!p1__96179_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__96179_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__96179_SHARP_);\n}\n})(x)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e96180){if((e96180 instanceof Error)){\nvar e = e96180;\nreturn e;\n} else {\nthrow e96180;\n\n}\n}})();\nif((e == null)){\nreturn x;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",250,\"((fn* [p1__96179#] (satisfies? interfaces/IPacker p1__96179#)) x)\",x,e,null);\n}\n}\n});\ntaoensso.sente.next_idx_BANG_ = (taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0 ? taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0() : taoensso.encore.idx_fn.call(null));\n\n\ntaoensso.sente.bad_origin_QMARK_ = (function taoensso$sente$bad_origin_QMARK_(allowed_origins,p__96188){\nvar map__96189 = p__96188;\nvar map__96189__$1 = cljs.core.__destructure_map(map__96189);\nvar ring_req = map__96189__$1;\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96189__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(allowed_origins,new cljs.core.Keyword(null,\"all\",\"all\",892129742))){\nreturn false;\n} else {\nvar origin = cljs.core.get.cljs$core$IFn$_invoke$arity$2(headers,\"origin\");\nvar referer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(headers,\"referer\",\"\");\nif(cljs.core.contains_QMARK_(cljs.core.set(allowed_origins),origin)){\nreturn false;\n} else {\nif(cljs.core.truth_(taoensso.encore.rsome((function (p1__96187_SHARP_){\nreturn clojure.string.starts_with_QMARK_(referer,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__96187_SHARP_),\"/\"].join(''));\n}),allowed_origins))){\nreturn false;\n} else {\nreturn true;\n\n}\n}\n}\n});\n/**\n * Takes a web server adapter[1] and returns a map with keys:\n * \n *  :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n *  :send-fn                     ; (fn [user-id ev] for server>user push.\n *  :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n *  :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n * \n *  :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n *  :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n * \n *   Security options:\n * \n *  :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n * \n *  :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n *                     ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n * \n *  :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n *                     ; must return truthy, otherwise connection requests will be\n *                     ; rejected with (unauthorized-fn <ring-req>) response.\n *                     ;\n *                     ; May check Authroization HTTP header, etc.\n * \n *   Other common options:\n * \n *  :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n *  :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n *  :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n *  :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n *  :send-buf-ms-ajax  ; [2]\n *  :send-buf-ms-ws    ; [2]\n *  :packer            ; :edn (default), or an IPacker implementation.\n * \n *   [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n *         `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n *    You must have the necessary web-server dependency in your project.clj and\n *    the necessary entry in your namespace's `ns` form.\n * \n *   [2] Optimization to allow transparent batching of rapidly-triggered\n *    server>user pushes. This is esp. important for Ajax clients which use a\n *    (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n *    after send call (larger values => larger batch windows).\n */\ntaoensso.sente.make_channel_socket_server_BANG_ = (function taoensso$sente$make_channel_socket_server_BANG_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___97624 = arguments.length;\nvar i__4772__auto___97625 = (0);\nwhile(true){\nif((i__4772__auto___97625 < len__4771__auto___97624)){\nargs__4777__auto__.push((arguments[i__4772__auto___97625]));\n\nvar G__97626 = (i__4772__auto___97625 + (1));\ni__4772__auto___97625 = G__97626;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((1) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((1)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4778__auto__);\n});\n\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (web_server_ch_adapter,p__96193){\nvar vec__96194 = p__96193;\nvar map__96197 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96194,(0),null);\nvar map__96197__$1 = cljs.core.__destructure_map(map__96197);\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(25)], 0)));\nvar send_buf_ms_ws = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"send-buf-ms-ws\",\"send-buf-ms-ws\",-1149586238),(30));\nvar allowed_origins = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"allowed-origins\",\"allowed-origins\",1477851683),new cljs.core.Keyword(null,\"all\",\"all\",892129742));\nvar lp_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar csrf_token_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"csrf-token-fn\",\"csrf-token-fn\",-1846298394),(function (ring_req){\nvar or__4160__auto__ = new cljs.core.Keyword(null,\"anti-forgery-token\",\"anti-forgery-token\",806990841).cljs$core$IFn$_invoke$arity$1(ring_req);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nvar or__4160__auto____$2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(\"ring.middleware.anti-forgery\",\"anti-forgery-token\",\"ring.middleware.anti-forgery/anti-forgery-token\",571563484)], null));\nif(cljs.core.truth_(or__4160__auto____$2)){\nreturn or__4160__auto____$2;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),\"__anti-forgery-token\"], null));\n}\n}\n}\n}));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar unauthorized_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"unauthorized-fn\",\"unauthorized-fn\",-2032603957),(function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(401),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Unauthorized request\"], null);\n}));\nvar send_buf_ms_ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"send-buf-ms-ajax\",\"send-buf-ms-ajax\",1546129037),(100));\nvar bad_origin_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"bad-origin-fn\",\"bad-origin-fn\",1385595727),(function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Unauthorized origin\"], null);\n}));\nvar handshake_data_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"handshake-data-fn\",\"handshake-data-fn\",2011983089),(function (ring_req){\nreturn null;\n}));\nvar user_id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"user-id-fn\",\"user-id-fn\",-1532150029),(function (ring_req){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400)], null));\n}));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((1000)));\nvar authorized_QMARK__fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96197__$1,new cljs.core.Keyword(null,\"authorized?-fn\",\"authorized?-fn\",-1334669261));\nvar bad_csrf_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__96197__$1,new cljs.core.Keyword(null,\"bad-csrf-fn\",\"bad-csrf-fn\",16619032),(function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Bad CSRF token\"], null);\n}));\nvar e_97627 = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ajax)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e96198){if((e96198 instanceof Error)){\nvar e_97627 = e96198;\nreturn e_97627;\n} else {\nthrow e96198;\n\n}\n}})();\nif((e_97627 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",371,\"(enc/pos-int? send-buf-ms-ajax)\",send_buf_ms_ajax,e_97627,null);\n}\n\nvar e_97628 = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ws)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e96199){if((e96199 instanceof Error)){\nvar e_97628 = e96199;\nreturn e_97628;\n} else {\nthrow e96199;\n\n}\n}})();\nif((e_97628 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",371,\"(enc/pos-int? send-buf-ms-ws)\",send_buf_ms_ws,e_97628,null);\n}\n\n\nvar e_97629 = (function (){try{if((function (p1__96190_SHARP_){\nif((!((p1__96190_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__96190_SHARP_.taoensso$sente$interfaces$IServerChanAdapter$)))){\nreturn true;\n} else {\nif((!p1__96190_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__96190_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__96190_SHARP_);\n}\n})(web_server_ch_adapter)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e96200){if((e96200 instanceof Error)){\nvar e_97629 = e96200;\nreturn e_97629;\n} else {\nthrow e96200;\n\n}\n}})();\nif((e_97629 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",372,\"((fn* [p1__96190#] (satisfies? interfaces/IServerChanAdapter p1__96190#)) web-server-ch-adapter)\",web_server_ch_adapter,e_97629,null);\n}\n\nvar max_ms_97630 = taoensso.sente.default_client_side_ajax_timeout_ms;\nif((lp_timeout_ms >= max_ms_97630)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\":lp-timeout-ms must be < \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(max_ms_97630)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),lp_timeout_ms,new cljs.core.Keyword(null,\"default-client-side-ajax-timeout-ms\",\"default-client-side-ajax-timeout-ms\",1149929762),max_ms_97630], null));\n} else {\n}\n\nvar allowed_origins__$1 = (cljs.core.truth_((function (x){\nvar or__4160__auto__ = cljs.core.set_QMARK_(x);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nvar fexpr__96205 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"all\",\"all\",892129742),null], null), null);\nreturn (fexpr__96205.cljs$core$IFn$_invoke$arity$1 ? fexpr__96205.cljs$core$IFn$_invoke$arity$1(x) : fexpr__96205.call(null,x));\n}\n})(allowed_origins))?allowed_origins:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",381,\"([:or set? #{:all}] allowed-origins)\",allowed_origins,null,null));\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar ch_recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(recv_buf_or_n);\nvar user_id_fn__$1 = (function (ring_req,client_id){\nvar or__4160__auto__ = (function (){var G__96208 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ring_req,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id);\nreturn (user_id_fn.cljs$core$IFn$_invoke$arity$1 ? user_id_fn.cljs$core$IFn$_invoke$arity$1(G__96208) : user_id_fn.call(null,G__96208));\n})();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486);\n}\n});\nvar conns_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar send_buffers_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar connected_uids_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.PersistentHashSet.EMPTY], null));\nvar upd_conn_BANG_ = (function() {\nvar G__97631 = null;\nvar G__97631__3 = (function (conn_type,uid,client_id){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\nvar vec__96211 = _QMARK_v;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96211,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96211,(1),null);\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),_QMARK_sch], null));\n}));\n});\nvar G__97631__4 = (function (conn_type,uid,client_id,new__QMARK_sch){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),(function (_QMARK_v){\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new__QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),new__QMARK_sch], null));\n}));\n});\nG__97631 = function(conn_type,uid,client_id,new__QMARK_sch){\nswitch(arguments.length){\ncase 3:\nreturn G__97631__3.call(this,conn_type,uid,client_id);\ncase 4:\nreturn G__97631__4.call(this,conn_type,uid,client_id,new__QMARK_sch);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__97631.cljs$core$IFn$_invoke$arity$3 = G__97631__3;\nG__97631.cljs$core$IFn$_invoke$arity$4 = G__97631__4;\nreturn G__97631;\n})()\n;\nvar connect_uid_BANG_ = (function (conn_type,uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e96219){if((e96219 instanceof Error)){\nvar e = e96219;\nreturn e;\n} else {\nthrow e96219;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",417,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_connected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__96220){\nvar map__96221 = p__96220;\nvar map__96221__$1 = cljs.core.__destructure_map(map__96221);\nvar old_m = map__96221__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96221__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96221__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96221__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar new_m = (function (){var G__96222 = conn_type;\nvar G__96222__$1 = (((G__96222 instanceof cljs.core.Keyword))?G__96222.fqn:null);\nswitch (G__96222__$1) {\ncase \"ws\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),ajax__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ncase \"ajax\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),ws,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__96222__$1)].join('')));\n\n}\n})();\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif((((!(cljs.core.contains_QMARK_(old_any,uid)))) && (cljs.core.contains_QMARK_(new_any,uid)))){\nreturn new cljs.core.Keyword(null,\"newly-connected\",\"newly-connected\",-2029862681);\n} else {\nreturn null;\n}\n})());\n}));\nreturn newly_connected_QMARK_;\n});\nvar upd_connected_uid_BANG_ = (function (uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e96224){if((e96224 instanceof Error)){\nvar e = e96224;\nreturn e;\n} else {\nthrow e96224;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",434,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_disconnected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,(function (p__96226){\nvar map__96227 = p__96226;\nvar map__96227__$1 = cljs.core.__destructure_map(map__96227);\nvar old_m = map__96227__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96227__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96227__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96227__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar conns_SINGLEQUOTE_ = cljs.core.deref(conns_);\nvar any_ws_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_ajax_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_clients_QMARK_ = ((any_ws_clients_QMARK_) || (any_ajax_clients_QMARK_));\nvar new_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),((any_ws_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ws,uid)),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),((any_ajax_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid)),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),((any_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(any,uid))], null);\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif(((cljs.core.contains_QMARK_(old_any,uid)) && ((!(cljs.core.contains_QMARK_(new_any,uid)))))){\nreturn new cljs.core.Keyword(null,\"newly-disconnected\",\"newly-disconnected\",-1586164962);\n} else {\nreturn null;\n}\n})());\n}));\nreturn newly_disconnected_QMARK_;\n});\nvar send_fn = (function() { \nvar G__97633__delegate = function (user_id,ev,p__96233){\nvar vec__96234 = p__96233;\nvar map__96237 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96234,(0),null);\nvar map__96237__$1 = cljs.core.__destructure_map(map__96237);\nvar opts = map__96237__$1;\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__96237__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar uid_97634 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(user_id,new cljs.core.Keyword(\"sente\",\"all-users-without-uid\",\"sente/all-users-without-uid\",-42979578)))?new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486):user_id);\nvar __97635 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,460,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (->uid %s) %s\",uid_97634,ev], null);\n}),null)),null,1178741914);\nvar __97636__$1 = (cljs.core.truth_(uid_97634)?null:(function(){throw (new Error([\"Assert failed: \",[\"Support for sending to `nil` user-ids has been REMOVED. \",\"Please send to `:sente/all-users-without-uid` instead.\"].join(''),\"\\n\",\"uid\"].join('')))})());\nvar __97637__$2 = taoensso.sente.assert_event(ev);\nvar ev_uuid_97638 = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\nvar flush_buffer_BANG__97639 = (function (conn_type){\nvar temp__5753__auto__ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type], null),(function (m){\nvar vec__96241 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_97634);\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96241,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96241,(1),null);\nif(cljs.core.contains_QMARK_(ev_uuids,ev_uuid_97638)){\nreturn taoensso.encore.swapped(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,uid_97634),cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_97634));\n} else {\nreturn taoensso.encore.swapped(m,null);\n}\n}));\nif(cljs.core.truth_(temp__5753__auto__)){\nvar pulled = temp__5753__auto__;\nvar vec__96244 = pulled;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96244,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96244,(1),null);\nif(cljs.core.vector_QMARK_(buffered_evs)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",488,\"(vector? buffered-evs)\",buffered_evs,null,null);\n}\n\nif(cljs.core.set_QMARK_(ev_uuids)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",489,\"(set? ev-uuids)\",ev_uuids,null,null);\n}\n\nvar buffered_evs_ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,buffered_evs);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,492,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"buffered-evs-ppstr: %s\",buffered_evs_ppstr], null);\n}),null)),null,-982962976);\n\nvar G__96247 = conn_type;\nvar G__96247__$1 = (((G__96247 instanceof cljs.core.Keyword))?G__96247.fqn:null);\nswitch (G__96247__$1) {\ncase \"ws\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4 ? taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4(conns_,uid_97634,buffered_evs_ppstr,upd_conn_BANG_) : taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null,conns_,uid_97634,buffered_evs_ppstr,upd_conn_BANG_));\n\nbreak;\ncase \"ajax\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,uid_97634,buffered_evs_ppstr) : taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null,conns_,uid_97634,buffered_evs_ppstr));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__96247__$1)].join('')));\n\n}\n} else {\nreturn null;\n}\n});\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ev,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"close\",\"chsk/close\",1840295819)], null))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,501,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk closing (client may reconnect): %s\",uid_97634], null);\n}),null)),null,-1316313900);\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__97639(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__97639(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\n}\n\nvar seq__96248_97641 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid_97634], null))));\nvar chunk__96249_97642 = null;\nvar count__96250_97643 = (0);\nvar i__96251_97644 = (0);\nwhile(true){\nif((i__96251_97644 < count__96250_97643)){\nvar vec__96261_97645 = chunk__96249_97642.cljs$core$IIndexed$_nth$arity$2(null,i__96251_97644);\nvar _QMARK_sch_97646 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96261_97645,(0),null);\nvar _udt_97647 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96261_97645,(1),null);\nvar temp__5753__auto___97648 = _QMARK_sch_97646;\nif(cljs.core.truth_(temp__5753__auto___97648)){\nvar sch_97649 = temp__5753__auto___97648;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_97649);\n} else {\n}\n\n\nvar G__97650 = seq__96248_97641;\nvar G__97651 = chunk__96249_97642;\nvar G__97652 = count__96250_97643;\nvar G__97653 = (i__96251_97644 + (1));\nseq__96248_97641 = G__97650;\nchunk__96249_97642 = G__97651;\ncount__96250_97643 = G__97652;\ni__96251_97644 = G__97653;\ncontinue;\n} else {\nvar temp__5753__auto___97654 = cljs.core.seq(seq__96248_97641);\nif(temp__5753__auto___97654){\nvar seq__96248_97655__$1 = temp__5753__auto___97654;\nif(cljs.core.chunked_seq_QMARK_(seq__96248_97655__$1)){\nvar c__4591__auto___97656 = cljs.core.chunk_first(seq__96248_97655__$1);\nvar G__97657 = cljs.core.chunk_rest(seq__96248_97655__$1);\nvar G__97658 = c__4591__auto___97656;\nvar G__97659 = cljs.core.count(c__4591__auto___97656);\nvar G__97660 = (0);\nseq__96248_97641 = G__97657;\nchunk__96249_97642 = G__97658;\ncount__96250_97643 = G__97659;\ni__96251_97644 = G__97660;\ncontinue;\n} else {\nvar vec__96264_97661 = cljs.core.first(seq__96248_97655__$1);\nvar _QMARK_sch_97662 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96264_97661,(0),null);\nvar _udt_97663 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96264_97661,(1),null);\nvar temp__5753__auto___97664__$1 = _QMARK_sch_97662;\nif(cljs.core.truth_(temp__5753__auto___97664__$1)){\nvar sch_97665 = temp__5753__auto___97664__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_97665);\n} else {\n}\n\n\nvar G__97666 = cljs.core.next(seq__96248_97655__$1);\nvar G__97667 = null;\nvar G__97668 = (0);\nvar G__97669 = (0);\nseq__96248_97641 = G__97666;\nchunk__96249_97642 = G__97667;\ncount__96250_97643 = G__97668;\ni__96251_97644 = G__97669;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__96271_97670 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid_97634], null))));\nvar chunk__96272_97671 = null;\nvar count__96273_97672 = (0);\nvar i__96274_97673 = (0);\nwhile(true){\nif((i__96274_97673 < count__96273_97672)){\nvar vec__96285_97674 = chunk__96272_97671.cljs$core$IIndexed$_nth$arity$2(null,i__96274_97673);\nvar _QMARK_sch_97675 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96285_97674,(0),null);\nvar _udt_97676 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96285_97674,(1),null);\nvar temp__5753__auto___97677 = _QMARK_sch_97675;\nif(cljs.core.truth_(temp__5753__auto___97677)){\nvar sch_97678 = temp__5753__auto___97677;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_97678);\n} else {\n}\n\n\nvar G__97679 = seq__96271_97670;\nvar G__97680 = chunk__96272_97671;\nvar G__97681 = count__96273_97672;\nvar G__97682 = (i__96274_97673 + (1));\nseq__96271_97670 = G__97679;\nchunk__96272_97671 = G__97680;\ncount__96273_97672 = G__97681;\ni__96274_97673 = G__97682;\ncontinue;\n} else {\nvar temp__5753__auto___97683 = cljs.core.seq(seq__96271_97670);\nif(temp__5753__auto___97683){\nvar seq__96271_97684__$1 = temp__5753__auto___97683;\nif(cljs.core.chunked_seq_QMARK_(seq__96271_97684__$1)){\nvar c__4591__auto___97685 = cljs.core.chunk_first(seq__96271_97684__$1);\nvar G__97686 = cljs.core.chunk_rest(seq__96271_97684__$1);\nvar G__97687 = c__4591__auto___97685;\nvar G__97688 = cljs.core.count(c__4591__auto___97685);\nvar G__97689 = (0);\nseq__96271_97670 = G__97686;\nchunk__96272_97671 = G__97687;\ncount__96273_97672 = G__97688;\ni__96274_97673 = G__97689;\ncontinue;\n} else {\nvar vec__96288_97690 = cljs.core.first(seq__96271_97684__$1);\nvar _QMARK_sch_97691 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96288_97690,(0),null);\nvar _udt_97692 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96288_97690,(1),null);\nvar temp__5753__auto___97693__$1 = _QMARK_sch_97691;\nif(cljs.core.truth_(temp__5753__auto___97693__$1)){\nvar sch_97694 = temp__5753__auto___97693__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_97694);\n} else {\n}\n\n\nvar G__97695 = cljs.core.next(seq__96271_97684__$1);\nvar G__97696 = null;\nvar G__97697 = (0);\nvar G__97698 = (0);\nseq__96271_97670 = G__97695;\nchunk__96272_97671 = G__97696;\ncount__96273_97672 = G__97697;\ni__96274_97673 = G__97698;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\nvar seq__96291_97699 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)], null));\nvar chunk__96292_97700 = null;\nvar count__96293_97701 = (0);\nvar i__96294_97702 = (0);\nwhile(true){\nif((i__96294_97702 < count__96293_97701)){\nvar conn_type_97703 = chunk__96292_97700.cljs$core$IIndexed$_nth$arity$2(null,i__96294_97702);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_97703,uid_97634], null),((function (seq__96291_97699,chunk__96292_97700,count__96293_97701,i__96294_97702,conn_type_97703,uid_97634,__97635,__97636__$1,__97637__$2,ev_uuid_97638,flush_buffer_BANG__97639,vec__96234,map__96237,map__96237__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__96194,map__96197,map__96197__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_97638])], null);\n} else {\nvar vec__96308 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96308,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96308,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_97638)], null);\n}\n});})(seq__96291_97699,chunk__96292_97700,count__96293_97701,i__96294_97702,conn_type_97703,uid_97634,__97635,__97636__$1,__97637__$2,ev_uuid_97638,flush_buffer_BANG__97639,vec__96234,map__96237,map__96237__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__96194,map__96197,map__96197__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn))\n);\n\n\nvar G__97704 = seq__96291_97699;\nvar G__97705 = chunk__96292_97700;\nvar G__97706 = count__96293_97701;\nvar G__97707 = (i__96294_97702 + (1));\nseq__96291_97699 = G__97704;\nchunk__96292_97700 = G__97705;\ncount__96293_97701 = G__97706;\ni__96294_97702 = G__97707;\ncontinue;\n} else {\nvar temp__5753__auto___97708 = cljs.core.seq(seq__96291_97699);\nif(temp__5753__auto___97708){\nvar seq__96291_97709__$1 = temp__5753__auto___97708;\nif(cljs.core.chunked_seq_QMARK_(seq__96291_97709__$1)){\nvar c__4591__auto___97710 = cljs.core.chunk_first(seq__96291_97709__$1);\nvar G__97711 = cljs.core.chunk_rest(seq__96291_97709__$1);\nvar G__97712 = c__4591__auto___97710;\nvar G__97713 = cljs.core.count(c__4591__auto___97710);\nvar G__97714 = (0);\nseq__96291_97699 = G__97711;\nchunk__96292_97700 = G__97712;\ncount__96293_97701 = G__97713;\ni__96294_97702 = G__97714;\ncontinue;\n} else {\nvar conn_type_97715 = cljs.core.first(seq__96291_97709__$1);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_97715,uid_97634], null),((function (seq__96291_97699,chunk__96292_97700,count__96293_97701,i__96294_97702,conn_type_97715,seq__96291_97709__$1,temp__5753__auto___97708,uid_97634,__97635,__97636__$1,__97637__$2,ev_uuid_97638,flush_buffer_BANG__97639,vec__96234,map__96237,map__96237__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__96194,map__96197,map__96197__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_97638])], null);\n} else {\nvar vec__96312 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96312,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96312,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_97638)], null);\n}\n});})(seq__96291_97699,chunk__96292_97700,count__96293_97701,i__96294_97702,conn_type_97715,seq__96291_97709__$1,temp__5753__auto___97708,uid_97634,__97635,__97636__$1,__97637__$2,ev_uuid_97638,flush_buffer_BANG__97639,vec__96234,map__96237,map__96237__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__96194,map__96197,map__96197__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,unauthorized_fn,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,authorized_QMARK__fn,bad_csrf_fn))\n);\n\n\nvar G__97716 = cljs.core.next(seq__96291_97709__$1);\nvar G__97717 = null;\nvar G__97718 = (0);\nvar G__97719 = (0);\nseq__96291_97699 = G__97716;\nchunk__96292_97700 = G__97717;\ncount__96293_97701 = G__97718;\ni__96294_97702 = G__97719;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__97639(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__97639(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\nvar ws_timeout_97720 = cljs.core.async.timeout(send_buf_ms_ws);\nvar ajax_timeout_97721 = cljs.core.async.timeout(send_buf_ms_ajax);\nvar c__90682__auto___97722 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_96320){\nvar state_val_96321 = (state_96320[(1)]);\nif((state_val_96321 === (1))){\nvar state_96320__$1 = state_96320;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_96320__$1,(2),ws_timeout_97720);\n} else {\nif((state_val_96321 === (2))){\nvar inst_96317 = (state_96320[(2)]);\nvar inst_96318 = flush_buffer_BANG__97639(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar state_96320__$1 = (function (){var statearr_96322 = state_96320;\n(statearr_96322[(7)] = inst_96317);\n\nreturn statearr_96322;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_96320__$1,inst_96318);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__90612__auto__ = null;\nvar taoensso$sente$state_machine__90612__auto____0 = (function (){\nvar statearr_96323 = [null,null,null,null,null,null,null,null];\n(statearr_96323[(0)] = taoensso$sente$state_machine__90612__auto__);\n\n(statearr_96323[(1)] = (1));\n\nreturn statearr_96323;\n});\nvar taoensso$sente$state_machine__90612__auto____1 = (function (state_96320){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_96320);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e96324){var ex__90615__auto__ = e96324;\nvar statearr_96325_97723 = state_96320;\n(statearr_96325_97723[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_96320[(4)]))){\nvar statearr_96326_97724 = state_96320;\n(statearr_96326_97724[(1)] = cljs.core.first((state_96320[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97725 = state_96320;\nstate_96320 = G__97725;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__90612__auto__ = function(state_96320){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__90612__auto____1.call(this,state_96320);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__90612__auto____0;\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__90612__auto____1;\nreturn taoensso$sente$state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_96327 = f__90683__auto__();\n(statearr_96327[(6)] = c__90682__auto___97722);\n\nreturn statearr_96327;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\n\nvar c__90682__auto___97726 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_96333){\nvar state_val_96334 = (state_96333[(1)]);\nif((state_val_96334 === (1))){\nvar state_96333__$1 = state_96333;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_96333__$1,(2),ajax_timeout_97721);\n} else {\nif((state_val_96334 === (2))){\nvar inst_96330 = (state_96333[(2)]);\nvar inst_96331 = flush_buffer_BANG__97639(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar state_96333__$1 = (function (){var statearr_96335 = state_96333;\n(statearr_96335[(7)] = inst_96330);\n\nreturn statearr_96335;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_96333__$1,inst_96331);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__90612__auto__ = null;\nvar taoensso$sente$state_machine__90612__auto____0 = (function (){\nvar statearr_96336 = [null,null,null,null,null,null,null,null];\n(statearr_96336[(0)] = taoensso$sente$state_machine__90612__auto__);\n\n(statearr_96336[(1)] = (1));\n\nreturn statearr_96336;\n});\nvar taoensso$sente$state_machine__90612__auto____1 = (function (state_96333){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_96333);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e96337){var ex__90615__auto__ = e96337;\nvar statearr_96338_97727 = state_96333;\n(statearr_96338_97727[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_96333[(4)]))){\nvar statearr_96340_97728 = state_96333;\n(statearr_96340_97728[(1)] = cljs.core.first((state_96333[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97729 = state_96333;\nstate_96333 = G__97729;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__90612__auto__ = function(state_96333){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__90612__auto____1.call(this,state_96333);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__90612__auto____0;\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__90612__auto____1;\nreturn taoensso$sente$state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_96343 = f__90683__auto__();\n(statearr_96343[(6)] = c__90682__auto___97726);\n\nreturn statearr_96343;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\n}\n}\n\nreturn null;\n};\nvar G__97633 = function (user_id,ev,var_args){\nvar p__96233 = null;\nif (arguments.length > 2) {\nvar G__97730__i = 0, G__97730__a = new Array(arguments.length -  2);\nwhile (G__97730__i < G__97730__a.length) {G__97730__a[G__97730__i] = arguments[G__97730__i + 2]; ++G__97730__i;}\n  p__96233 = new cljs.core.IndexedSeq(G__97730__a,0,null);\n} \nreturn G__97633__delegate.call(this,user_id,ev,p__96233);};\nG__97633.cljs$lang$maxFixedArity = 2;\nG__97633.cljs$lang$applyTo = (function (arglist__97731){\nvar user_id = cljs.core.first(arglist__97731);\narglist__97731 = cljs.core.next(arglist__97731);\nvar ev = cljs.core.first(arglist__97731);\nvar p__96233 = cljs.core.rest(arglist__97731);\nreturn G__97633__delegate(user_id,ev,p__96233);\n});\nG__97633.cljs$core$IFn$_invoke$arity$variadic = G__97633__delegate;\nreturn G__97633;\n})()\n;\nvar bad_csrf_QMARK_ = (function (ring_req){\nif((csrf_token_fn == null)){\nreturn false;\n} else {\nvar temp__5751__auto__ = (csrf_token_fn.cljs$core$IFn$_invoke$arity$1 ? csrf_token_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : csrf_token_fn.call(null,ring_req));\nif(cljs.core.truth_(temp__5751__auto__)){\nvar reference_csrf_token = temp__5751__auto__;\nvar csrf_token_from_client = (function (){var or__4160__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-csrf-token\"], null));\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-xsrf-token\"], null));\n}\n}\n})();\nreturn cljs.core.not(taoensso.encore.const_str_EQ_(reference_csrf_token,csrf_token_from_client));\n} else {\nreturn true;\n}\n}\n});\nvar unauthorized_QMARK_ = (function (ring_req){\nif((authorized_QMARK__fn == null)){\nreturn false;\n} else {\nreturn cljs.core.not((authorized_QMARK__fn.cljs$core$IFn$_invoke$arity$0 ? authorized_QMARK__fn.cljs$core$IFn$_invoke$arity$0() : authorized_QMARK__fn.call(null)));\n}\n});\nvar possible_rejection_resp = (function (ring_req){\nif(bad_csrf_QMARK_(ring_req)){\nreturn (bad_csrf_fn.cljs$core$IFn$_invoke$arity$1 ? bad_csrf_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_csrf_fn.call(null,ring_req));\n} else {\nif(taoensso.sente.bad_origin_QMARK_(allowed_origins__$1,ring_req)){\nreturn (bad_origin_fn.cljs$core$IFn$_invoke$arity$1 ? bad_origin_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_origin_fn.call(null,ring_req));\n} else {\nif(unauthorized_QMARK_(ring_req)){\nreturn (unauthorized_fn.cljs$core$IFn$_invoke$arity$1 ? unauthorized_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : unauthorized_fn.call(null,ring_req));\n} else {\nreturn null;\n\n}\n}\n}\n});\nvar ev_msg_const = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787),send_buffers_], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"send-buffers\",\"send-buffers\",-1788003787),send_buffers_,new cljs.core.Keyword(null,\"ajax-post-fn\",\"ajax-post-fn\",1830071264),(function (ring_req){\nvar b2__35594__auto__ = possible_rejection_resp(ring_req);\nif(cljs.core.truth_(b2__35594__auto__)){\nvar resp = b2__35594__auto__;\nreturn resp;\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\nif(cljs.core.not(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: (not websocket?)\"));\n}\n\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar ppstr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar vec__96348 = taoensso.sente.unpack(packer__$1,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96348,(0),null);\nvar has_cb_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96348,(1),null);\nvar reply_fn = (function (){var replied_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nreturn (function (resp_clj){\nif(cljs.core.compare_and_set_BANG_(replied_QMARK__,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,615,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ajax post reply): %s\",resp_clj], null);\n}),null)),null,208647053);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,resp_clj));\n} else {\nreturn null;\n}\n});\n})();\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),clj,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),user_id_fn__$1(ring_req,client_id),new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),(cljs.core.truth_(has_cb_QMARK_)?reply_fn:null)], null)], 0)));\n\nif(cljs.core.truth_(has_cb_QMARK_)){\nvar temp__5753__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ms = temp__5753__auto__;\nvar c__90682__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_96356){\nvar state_val_96357 = (state_96356[(1)]);\nif((state_val_96357 === (1))){\nvar inst_96351 = cljs.core.async.timeout(ms);\nvar state_96356__$1 = state_96356;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_96356__$1,(2),inst_96351);\n} else {\nif((state_val_96357 === (2))){\nvar inst_96353 = (state_96356[(2)]);\nvar inst_96354 = reply_fn(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar state_96356__$1 = (function (){var statearr_96364 = state_96356;\n(statearr_96364[(7)] = inst_96353);\n\nreturn statearr_96364;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_96356__$1,inst_96354);\n} else {\nreturn null;\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__90612__auto__ = null;\nvar taoensso$sente$state_machine__90612__auto____0 = (function (){\nvar statearr_96373 = [null,null,null,null,null,null,null,null];\n(statearr_96373[(0)] = taoensso$sente$state_machine__90612__auto__);\n\n(statearr_96373[(1)] = (1));\n\nreturn statearr_96373;\n});\nvar taoensso$sente$state_machine__90612__auto____1 = (function (state_96356){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_96356);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e96377){var ex__90615__auto__ = e96377;\nvar statearr_96379_97732 = state_96356;\n(statearr_96379_97732[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_96356[(4)]))){\nvar statearr_96381_97733 = state_96356;\n(statearr_96381_97733[(1)] = cljs.core.first((state_96356[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97734 = state_96356;\nstate_96356 = G__97734;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__90612__auto__ = function(state_96356){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__90612__auto____1.call(this,state_96356);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__90612__auto____0;\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__90612__auto____1;\nreturn taoensso$sente$state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_96387 = f__90683__auto__();\n(statearr_96387[(6)] = c__90682__auto__);\n\nreturn statearr_96387;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\nreturn c__90682__auto__;\n} else {\nreturn null;\n}\n} else {\nreturn reply_fn(new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337));\n}\n})], null));\n}\n}),new cljs.core.Keyword(null,\"ajax-get-or-ws-handshake-fn\",\"ajax-get-or-ws-handshake-fn\",-1210409233),(function (ring_req){\nvar sch_uuid = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar uid = user_id_fn__$1(ring_req,client_id);\nvar receive_event_msg_BANG_ = (function() {\nvar taoensso$sente$self = null;\nvar taoensso$sente$self__1 = (function (event){\nreturn taoensso$sente$self.cljs$core$IFn$_invoke$arity$2(event,null);\n});\nvar taoensso$sente$self__2 = (function (event,_QMARK_reply_fn){\nreturn taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),uid], null)], 0)));\n});\ntaoensso$sente$self = function(event,_QMARK_reply_fn){\nswitch(arguments.length){\ncase 1:\nreturn taoensso$sente$self__1.call(this,event);\ncase 2:\nreturn taoensso$sente$self__2.call(this,event,_QMARK_reply_fn);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$self__1;\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$2 = taoensso$sente$self__2;\nreturn taoensso$sente$self;\n})()\n;\nvar send_handshake_BANG_ = (function (server_ch,websocket_QMARK_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,659,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-handshake!\"], null);\n}),null)),null,-1600908817);\n\nvar _QMARK_handshake_data = (handshake_data_fn.cljs$core$IFn$_invoke$arity$1 ? handshake_data_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : handshake_data_fn.call(null,ring_req));\nvar handshake_ev = (((_QMARK_handshake_data == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null], null)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null,_QMARK_handshake_data], null)], null));\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,handshake_ev));\n});\nif(clojure.string.blank_QMARK_(client_id)){\nvar err_msg = \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\";\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,672,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[err_msg,\": %s\"].join(''),ring_req], null);\n}),null)),null,1729243753);\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(err_msg,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req], null));\n} else {\nvar b2__35594__auto__ = possible_rejection_resp(ring_req);\nif(cljs.core.truth_(b2__35594__auto__)){\nvar resp = b2__35594__auto__;\nreturn resp;\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),(function (server_ch,websocket_QMARK_){\nif(cljs.core.truth_(websocket_QMARK_)){\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,683,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New WebSocket channel: %s (%s)\",uid,sch_uuid], null);\n}),null)),null,-1867625014);\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid))){\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nsend_handshake_BANG_(server_ch,websocket_QMARK_);\n\nvar temp__5753__auto__ = ws_kalive_ms;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ms = temp__5753__auto__;\nvar c__90682__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_96449){\nvar state_val_96450 = (state_96449[(1)]);\nif((state_val_96450 === (7))){\nvar inst_96445 = (state_96449[(2)]);\nvar state_96449__$1 = state_96449;\nvar statearr_96453_97735 = state_96449__$1;\n(statearr_96453_97735[(2)] = inst_96445);\n\n(statearr_96453_97735[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (1))){\nvar inst_96404 = udt_open;\nvar inst_96405 = inst_96404;\nvar state_96449__$1 = (function (){var statearr_96454 = state_96449;\n(statearr_96454[(7)] = inst_96405);\n\nreturn statearr_96454;\n})();\nvar statearr_96455_97736 = state_96449__$1;\n(statearr_96455_97736[(2)] = null);\n\n(statearr_96455_97736[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (4))){\nvar inst_96416 = (state_96449[(8)]);\nvar inst_96410 = (state_96449[(2)]);\nvar inst_96412 = cljs.core.deref(conns_);\nvar inst_96413 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_96414 = [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id];\nvar inst_96415 = (new cljs.core.PersistentVector(null,3,(5),inst_96413,inst_96414,null));\nvar inst_96416__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_96412,inst_96415);\nvar state_96449__$1 = (function (){var statearr_96458 = state_96449;\n(statearr_96458[(9)] = inst_96410);\n\n(statearr_96458[(8)] = inst_96416__$1);\n\nreturn statearr_96458;\n})();\nif(cljs.core.truth_(inst_96416__$1)){\nvar statearr_96459_97737 = state_96449__$1;\n(statearr_96459_97737[(1)] = (5));\n\n} else {\nvar statearr_96460_97738 = state_96449__$1;\n(statearr_96460_97738[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (13))){\nvar inst_96427 = (state_96449[(10)]);\nvar inst_96437 = (state_96449[(2)]);\nvar inst_96405 = inst_96427;\nvar state_96449__$1 = (function (){var statearr_96462 = state_96449;\n(statearr_96462[(11)] = inst_96437);\n\n(statearr_96462[(7)] = inst_96405);\n\nreturn statearr_96462;\n})();\nvar statearr_96463_97739 = state_96449__$1;\n(statearr_96463_97739[(2)] = null);\n\n(statearr_96463_97739[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (6))){\nvar state_96449__$1 = state_96449;\nvar statearr_96464_97740 = state_96449__$1;\n(statearr_96464_97740[(2)] = null);\n\n(statearr_96464_97740[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (3))){\nvar inst_96447 = (state_96449[(2)]);\nvar state_96449__$1 = state_96449;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_96449__$1,inst_96447);\n} else {\nif((state_val_96450 === (12))){\nvar state_96449__$1 = state_96449;\nvar statearr_96465_97741 = state_96449__$1;\n(statearr_96465_97741[(2)] = null);\n\n(statearr_96465_97741[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (2))){\nvar inst_96408 = cljs.core.async.timeout(ms);\nvar state_96449__$1 = state_96449;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_96449__$1,(4),inst_96408);\n} else {\nif((state_val_96450 === (11))){\nvar inst_96433 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304));\nvar inst_96434 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_96433);\nvar state_96449__$1 = state_96449;\nvar statearr_96468_97742 = state_96449__$1;\n(statearr_96468_97742[(2)] = inst_96434);\n\n(statearr_96468_97742[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (9))){\nvar state_96449__$1 = state_96449;\nvar statearr_96469_97743 = state_96449__$1;\n(statearr_96469_97743[(2)] = null);\n\n(statearr_96469_97743[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (5))){\nvar inst_96416 = (state_96449[(8)]);\nvar inst_96425 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_96416,(0),null);\nvar inst_96427 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_96416,(1),null);\nvar inst_96428 = taoensso.sente.interfaces.sch_open_QMARK_(server_ch);\nvar state_96449__$1 = (function (){var statearr_96471 = state_96449;\n(statearr_96471[(12)] = inst_96425);\n\n(statearr_96471[(10)] = inst_96427);\n\nreturn statearr_96471;\n})();\nif(cljs.core.truth_(inst_96428)){\nvar statearr_96472_97744 = state_96449__$1;\n(statearr_96472_97744[(1)] = (8));\n\n} else {\nvar statearr_96473_97745 = state_96449__$1;\n(statearr_96473_97745[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (10))){\nvar inst_96442 = (state_96449[(2)]);\nvar state_96449__$1 = state_96449;\nvar statearr_96474_97746 = state_96449__$1;\n(statearr_96474_97746[(2)] = inst_96442);\n\n(statearr_96474_97746[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96450 === (8))){\nvar inst_96405 = (state_96449[(7)]);\nvar inst_96427 = (state_96449[(10)]);\nvar inst_96431 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_96427,inst_96405);\nvar state_96449__$1 = state_96449;\nif(inst_96431){\nvar statearr_96475_97747 = state_96449__$1;\n(statearr_96475_97747[(1)] = (11));\n\n} else {\nvar statearr_96476_97748 = state_96449__$1;\n(statearr_96476_97748[(1)] = (12));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__90612__auto__ = null;\nvar taoensso$sente$state_machine__90612__auto____0 = (function (){\nvar statearr_96477 = [null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_96477[(0)] = taoensso$sente$state_machine__90612__auto__);\n\n(statearr_96477[(1)] = (1));\n\nreturn statearr_96477;\n});\nvar taoensso$sente$state_machine__90612__auto____1 = (function (state_96449){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_96449);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e96478){var ex__90615__auto__ = e96478;\nvar statearr_96479_97749 = state_96449;\n(statearr_96479_97749[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_96449[(4)]))){\nvar statearr_96480_97750 = state_96449;\n(statearr_96480_97750[(1)] = cljs.core.first((state_96449[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97751 = state_96449;\nstate_96449 = G__97751;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__90612__auto__ = function(state_96449){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__90612__auto____1.call(this,state_96449);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__90612__auto____0;\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__90612__auto____1;\nreturn taoensso$sente$state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_96481 = f__90683__auto__();\n(statearr_96481[(6)] = c__90682__auto__);\n\nreturn statearr_96481;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\nreturn c__90682__auto__;\n} else {\nreturn null;\n}\n} else {\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,712,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New Ajax handshake/poll: %s (%s)\",uid,sch_uuid], null);\n}),null)),null,-799364376);\nvar updated_conn = upd_conn_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar handshake_QMARK_ = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"init?\",\"init?\",438181499).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093).cljs$core$IFn$_invoke$arity$1(params);\n}\n})();\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid))){\nreceive_event_msg_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nif(cljs.core.truth_(handshake_QMARK_)){\nreturn send_handshake_BANG_(server_ch,websocket_QMARK_);\n} else {\nvar temp__5753__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ms = temp__5753__auto__;\nvar c__90682__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_96509){\nvar state_val_96510 = (state_96509[(1)]);\nif((state_val_96510 === (1))){\nvar inst_96484 = cljs.core.async.timeout(ms);\nvar state_96509__$1 = state_96509;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_96509__$1,(2),inst_96484);\n} else {\nif((state_val_96510 === (2))){\nvar inst_96491 = (state_96509[(7)]);\nvar inst_96486 = (state_96509[(2)]);\nvar inst_96487 = cljs.core.deref(conns_);\nvar inst_96488 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_96489 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id];\nvar inst_96490 = (new cljs.core.PersistentVector(null,3,(5),inst_96488,inst_96489,null));\nvar inst_96491__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_96487,inst_96490);\nvar state_96509__$1 = (function (){var statearr_96518 = state_96509;\n(statearr_96518[(8)] = inst_96486);\n\n(statearr_96518[(7)] = inst_96491__$1);\n\nreturn statearr_96518;\n})();\nif(cljs.core.truth_(inst_96491__$1)){\nvar statearr_96519_97752 = state_96509__$1;\n(statearr_96519_97752[(1)] = (3));\n\n} else {\nvar statearr_96520_97753 = state_96509__$1;\n(statearr_96520_97753[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96510 === (3))){\nvar inst_96491 = (state_96509[(7)]);\nvar inst_96496 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_96491,(0),null);\nvar inst_96497 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_96491,(1),null);\nvar inst_96498 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_96497,udt_open);\nvar state_96509__$1 = (function (){var statearr_96522 = state_96509;\n(statearr_96522[(9)] = inst_96496);\n\nreturn statearr_96522;\n})();\nif(inst_96498){\nvar statearr_96526_97754 = state_96509__$1;\n(statearr_96526_97754[(1)] = (6));\n\n} else {\nvar statearr_96527_97755 = state_96509__$1;\n(statearr_96527_97755[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96510 === (4))){\nvar state_96509__$1 = state_96509;\nvar statearr_96528_97756 = state_96509__$1;\n(statearr_96528_97756[(2)] = null);\n\n(statearr_96528_97756[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96510 === (5))){\nvar inst_96507 = (state_96509[(2)]);\nvar state_96509__$1 = state_96509;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_96509__$1,inst_96507);\n} else {\nif((state_val_96510 === (6))){\nvar inst_96500 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar inst_96501 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_96500);\nvar state_96509__$1 = state_96509;\nvar statearr_96529_97757 = state_96509__$1;\n(statearr_96529_97757[(2)] = inst_96501);\n\n(statearr_96529_97757[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96510 === (7))){\nvar state_96509__$1 = state_96509;\nvar statearr_96530_97758 = state_96509__$1;\n(statearr_96530_97758[(2)] = null);\n\n(statearr_96530_97758[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96510 === (8))){\nvar inst_96504 = (state_96509[(2)]);\nvar state_96509__$1 = state_96509;\nvar statearr_96534_97759 = state_96509__$1;\n(statearr_96534_97759[(2)] = inst_96504);\n\n(statearr_96534_97759[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__90612__auto__ = null;\nvar taoensso$sente$state_machine__90612__auto____0 = (function (){\nvar statearr_96536 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_96536[(0)] = taoensso$sente$state_machine__90612__auto__);\n\n(statearr_96536[(1)] = (1));\n\nreturn statearr_96536;\n});\nvar taoensso$sente$state_machine__90612__auto____1 = (function (state_96509){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_96509);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e96537){var ex__90615__auto__ = e96537;\nvar statearr_96539_97760 = state_96509;\n(statearr_96539_97760[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_96509[(4)]))){\nvar statearr_96540_97761 = state_96509;\n(statearr_96540_97761[(1)] = cljs.core.first((state_96509[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97762 = state_96509;\nstate_96509 = G__97762;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__90612__auto__ = function(state_96509){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__90612__auto____1.call(this,state_96509);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__90612__auto____0;\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__90612__auto____1;\nreturn taoensso$sente$state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_96543 = f__90683__auto__();\n(statearr_96543[(6)] = c__90682__auto__);\n\nreturn statearr_96543;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\nreturn c__90682__auto__;\n} else {\nreturn null;\n}\n}\n}\n}),new cljs.core.Keyword(null,\"on-msg\",\"on-msg\",-2021925279),(function (server_ch,websocket_QMARK_,req_ppstr){\nif(cljs.core.truth_(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: websocket?\"));\n}\n\nupd_conn_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id);\n\nvar vec__96544 = taoensso.sente.unpack(packer__$1,req_ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96544,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96544,(1),null);\nreturn receive_event_msg_BANG_(clj,(cljs.core.truth_(_QMARK_cb_uuid)?(function taoensso$sente$reply_fn(resp_clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,742,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ws reply): %s\",resp_clj], null);\n}),null)),null,-862594734);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(packer__$1,resp_clj,_QMARK_cb_uuid));\n}):null));\n}),new cljs.core.Keyword(null,\"on-close\",\"on-close\",-761178394),(function (server_ch,websocket_QMARK_,_status){\nvar conn_type = (cljs.core.truth_(websocket_QMARK_)?new cljs.core.Keyword(null,\"ws\",\"ws\",86841443):new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,751,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"%s channel closed: %s (%s)\",(cljs.core.truth_(websocket_QMARK_)?\"WebSocket\":\"Ajax\"),uid,sch_uuid], null);\n}),null)),null,371495952);\nvar updated_conn = upd_conn_BANG_(conn_type,uid,client_id,null);\nvar udt_close = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar c__90682__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_96650){\nvar state_val_96651 = (state_96650[(1)]);\nif((state_val_96651 === (7))){\nvar state_96650__$1 = state_96650;\nvar statearr_96655_97763 = state_96650__$1;\n(statearr_96655_97763[(2)] = null);\n\n(statearr_96655_97763[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (1))){\nvar inst_96586 = cljs.core.async.timeout((5000));\nvar state_96650__$1 = state_96650;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_96650__$1,(2),inst_96586);\n} else {\nif((state_val_96651 === (4))){\nvar state_96650__$1 = state_96650;\nvar statearr_96659_97764 = state_96650__$1;\n(statearr_96659_97764[(2)] = null);\n\n(statearr_96659_97764[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (13))){\nvar state_96650__$1 = state_96650;\nvar statearr_96662_97765 = state_96650__$1;\n(statearr_96662_97765[(2)] = null);\n\n(statearr_96662_97765[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (6))){\nvar inst_96596 = (state_96650[(7)]);\nvar inst_96598 = (state_96650[(8)]);\nvar inst_96624 = (state_96650[(9)]);\nvar inst_96597 = (state_96650[(10)]);\nvar inst_96619 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_96620 = [conn_type,uid,client_id];\nvar inst_96621 = (new cljs.core.PersistentVector(null,3,(5),inst_96619,inst_96620,null));\nvar inst_96623 = (function (){var vec__96589 = inst_96596;\nvar __QMARK_sch = inst_96597;\nvar udt_t1 = inst_96598;\nreturn (function (p__96622){\nvar vec__96664 = p__96622;\nvar _sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96664,(0),null);\nvar udt_t1__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96664,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1__$1,udt_close)){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),true);\n} else {\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_sch,udt_t1__$1], null),false);\n}\n});\n})();\nvar inst_96624__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_96621,inst_96623);\nvar state_96650__$1 = (function (){var statearr_96667 = state_96650;\n(statearr_96667[(9)] = inst_96624__$1);\n\nreturn statearr_96667;\n})();\nif(cljs.core.truth_(inst_96624__$1)){\nvar statearr_96668_97766 = state_96650__$1;\n(statearr_96668_97766[(1)] = (9));\n\n} else {\nvar statearr_96669_97767 = state_96650__$1;\n(statearr_96669_97767[(1)] = (10));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (3))){\nvar inst_96596 = (state_96650[(7)]);\nvar inst_96598 = (state_96650[(8)]);\nvar inst_96597 = (state_96650[(10)]);\nvar inst_96611 = (function (){var vec__96589 = inst_96596;\nvar __QMARK_sch = inst_96597;\nvar udt_t1 = inst_96598;\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"close-timeout: %s %s %s %s\",conn_type,uid,sch_uuid,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1,udt_close),udt_t1,udt_close], null)], null);\n});\n})();\nvar inst_96612 = (new cljs.core.Delay(inst_96611,null));\nvar inst_96613 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,765,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_96612,null,-2057814777);\nvar state_96650__$1 = state_96650;\nvar statearr_96670_97768 = state_96650__$1;\n(statearr_96670_97768[(2)] = inst_96613);\n\n(statearr_96670_97768[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (12))){\nvar inst_96634 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_96636 = [new cljs.core.Keyword(\"chsk\",\"uidport-close\",\"chsk/uidport-close\",901058678),uid];\nvar inst_96637 = (new cljs.core.PersistentVector(null,2,(5),inst_96634,inst_96636,null));\nvar inst_96638 = receive_event_msg_BANG_(inst_96637);\nvar state_96650__$1 = state_96650;\nvar statearr_96671_97769 = state_96650__$1;\n(statearr_96671_97769[(2)] = inst_96638);\n\n(statearr_96671_97769[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (2))){\nvar inst_96596 = (state_96650[(7)]);\nvar inst_96588 = (state_96650[(2)]);\nvar inst_96592 = cljs.core.deref(conns_);\nvar inst_96593 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_96594 = [conn_type,uid,client_id];\nvar inst_96595 = (new cljs.core.PersistentVector(null,3,(5),inst_96593,inst_96594,null));\nvar inst_96596__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_96592,inst_96595);\nvar inst_96597 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_96596__$1,(0),null);\nvar inst_96598 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_96596__$1,(1),null);\nvar inst_96605 = cljs.core.deref(taoensso.sente.debug_mode_QMARK__);\nvar state_96650__$1 = (function (){var statearr_96672 = state_96650;\n(statearr_96672[(7)] = inst_96596__$1);\n\n(statearr_96672[(11)] = inst_96588);\n\n(statearr_96672[(8)] = inst_96598);\n\n(statearr_96672[(10)] = inst_96597);\n\nreturn statearr_96672;\n})();\nif(cljs.core.truth_(inst_96605)){\nvar statearr_96673_97770 = state_96650__$1;\n(statearr_96673_97770[(1)] = (3));\n\n} else {\nvar statearr_96674_97771 = state_96650__$1;\n(statearr_96674_97771[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (11))){\nvar inst_96644 = (state_96650[(2)]);\nvar state_96650__$1 = state_96650;\nvar statearr_96675_97772 = state_96650__$1;\n(statearr_96675_97772[(2)] = inst_96644);\n\n(statearr_96675_97772[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (9))){\nvar inst_96596 = (state_96650[(7)]);\nvar inst_96598 = (state_96650[(8)]);\nvar inst_96624 = (state_96650[(9)]);\nvar inst_96597 = (state_96650[(10)]);\nvar inst_96626 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_96627 = [conn_type,uid];\nvar inst_96628 = (new cljs.core.PersistentVector(null,2,(5),inst_96626,inst_96627,null));\nvar inst_96629 = (function (){var vec__96589 = inst_96596;\nvar __QMARK_sch = inst_96597;\nvar udt_t1 = inst_96598;\nvar disconnect_QMARK_ = inst_96624;\nreturn (function (_QMARK_m){\nif(cljs.core.empty_QMARK_(_QMARK_m)){\nreturn new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782);\n} else {\nreturn _QMARK_m;\n}\n});\n})();\nvar inst_96630 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_96628,inst_96629);\nvar inst_96631 = upd_connected_uid_BANG_(uid);\nvar state_96650__$1 = (function (){var statearr_96676 = state_96650;\n(statearr_96676[(12)] = inst_96630);\n\nreturn statearr_96676;\n})();\nif(cljs.core.truth_(inst_96631)){\nvar statearr_96677_97773 = state_96650__$1;\n(statearr_96677_97773[(1)] = (12));\n\n} else {\nvar statearr_96678_97774 = state_96650__$1;\n(statearr_96678_97774[(1)] = (13));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (5))){\nvar inst_96598 = (state_96650[(8)]);\nvar inst_96616 = (state_96650[(2)]);\nvar inst_96617 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_96598,udt_close);\nvar state_96650__$1 = (function (){var statearr_96679 = state_96650;\n(statearr_96679[(13)] = inst_96616);\n\nreturn statearr_96679;\n})();\nif(inst_96617){\nvar statearr_96680_97775 = state_96650__$1;\n(statearr_96680_97775[(1)] = (6));\n\n} else {\nvar statearr_96681_97776 = state_96650__$1;\n(statearr_96681_97776[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (14))){\nvar inst_96641 = (state_96650[(2)]);\nvar state_96650__$1 = state_96650;\nvar statearr_96682_97777 = state_96650__$1;\n(statearr_96682_97777[(2)] = inst_96641);\n\n(statearr_96682_97777[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (10))){\nvar state_96650__$1 = state_96650;\nvar statearr_96683_97778 = state_96650__$1;\n(statearr_96683_97778[(2)] = null);\n\n(statearr_96683_97778[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96651 === (8))){\nvar inst_96647 = (state_96650[(2)]);\nvar state_96650__$1 = state_96650;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_96650__$1,inst_96647);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__90612__auto__ = null;\nvar taoensso$sente$state_machine__90612__auto____0 = (function (){\nvar statearr_96684 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_96684[(0)] = taoensso$sente$state_machine__90612__auto__);\n\n(statearr_96684[(1)] = (1));\n\nreturn statearr_96684;\n});\nvar taoensso$sente$state_machine__90612__auto____1 = (function (state_96650){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_96650);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e96685){var ex__90615__auto__ = e96685;\nvar statearr_96686_97779 = state_96650;\n(statearr_96686_97779[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_96650[(4)]))){\nvar statearr_96687_97780 = state_96650;\n(statearr_96687_97780[(1)] = cljs.core.first((state_96650[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97781 = state_96650;\nstate_96650 = G__97781;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__90612__auto__ = function(state_96650){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__90612__auto____1.call(this,state_96650);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__90612__auto____0;\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__90612__auto____1;\nreturn taoensso$sente$state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_96688 = f__90683__auto__();\n(statearr_96688[(6)] = c__90682__auto__);\n\nreturn statearr_96688;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\nreturn c__90682__auto__;\n}),new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),(function (server_ch,websocket_QMARK_,error){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,787,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"ring-req->server-ch-resp error: %s (%s)\",error,uid,sch_uuid], null);\n}),null)),null,2062019128);\n})], null));\n}\n}\n})], null);\n}));\n\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = (function (seq96191){\nvar G__96192 = cljs.core.first(seq96191);\nvar seq96191__$1 = cljs.core.next(seq96191);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__96192,seq96191__$1);\n}));\n\n/**\n * Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ws_clients_BANG_(conns_,uid,buffered_evs_pstr,upd_conn_BANG_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,793,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ws-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,1515602202);\n\nvar seq__96696 = cljs.core.seq(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid], null)));\nvar chunk__96697 = null;\nvar count__96698 = (0);\nvar i__96699 = (0);\nwhile(true){\nif((i__96699 < count__96698)){\nvar vec__96719 = chunk__96697.cljs$core$IIndexed$_nth$arity$2(null,i__96699);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96719,(0),null);\nvar vec__96722 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96719,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96722,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96722,(1),null);\nvar temp__5753__auto___97782 = _QMARK_sch;\nif(cljs.core.truth_(temp__5753__auto___97782)){\nvar sch_97783 = temp__5753__auto___97782;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_97783,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__97784 = seq__96696;\nvar G__97785 = chunk__96697;\nvar G__97786 = count__96698;\nvar G__97787 = (i__96699 + (1));\nseq__96696 = G__97784;\nchunk__96697 = G__97785;\ncount__96698 = G__97786;\ni__96699 = G__97787;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__96696);\nif(temp__5753__auto__){\nvar seq__96696__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__96696__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__96696__$1);\nvar G__97788 = cljs.core.chunk_rest(seq__96696__$1);\nvar G__97789 = c__4591__auto__;\nvar G__97790 = cljs.core.count(c__4591__auto__);\nvar G__97791 = (0);\nseq__96696 = G__97788;\nchunk__96697 = G__97789;\ncount__96698 = G__97790;\ni__96699 = G__97791;\ncontinue;\n} else {\nvar vec__96725 = cljs.core.first(seq__96696__$1);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96725,(0),null);\nvar vec__96728 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96725,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96728,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96728,(1),null);\nvar temp__5753__auto___97792__$1 = _QMARK_sch;\nif(cljs.core.truth_(temp__5753__auto___97792__$1)){\nvar sch_97793 = temp__5753__auto___97792__$1;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id) : upd_conn_BANG_.call(null,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_97793,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__97794 = cljs.core.next(seq__96696__$1);\nvar G__97795 = null;\nvar G__97796 = (0);\nvar G__97797 = (0);\nseq__96696 = G__97794;\nchunk__96697 = G__97795;\ncount__96698 = G__97796;\ni__96699 = G__97797;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n *   Allows some time for possible Ajax poller reconnects.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG_(conns_,uid,buffered_evs_pstr){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,803,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ajax-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,1126213111);\n\nvar ms_backoffs = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(90),(180),(360),(720),(1440)], null);\nvar client_ids_unsatisfied = cljs.core.keys(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid], null)));\nif(cljs.core.empty_QMARK_(client_ids_unsatisfied)){\nreturn null;\n} else {\nvar c__90682__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_96809){\nvar state_val_96810 = (state_96809[(1)]);\nif((state_val_96810 === (7))){\nvar inst_96763 = (state_96809[(7)]);\nvar inst_96755 = (state_96809[(8)]);\nvar inst_96754 = (state_96809[(9)]);\nvar inst_96778 = (function (){var n = inst_96754;\nvar client_ids_satisfied = inst_96755;\nvar _QMARK_pulled = inst_96763;\nreturn (function (s,client_id,p__96777){\nvar vec__96814 = p__96777;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96814,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96814,(1),null);\nvar sent_QMARK_ = (function (){var temp__5753__auto__ = _QMARK_sch;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar sch = temp__5753__auto__;\nreturn taoensso.sente.interfaces.sch_send_BANG_(_QMARK_sch,cljs.core.not(new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101)),buffered_evs_pstr);\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(sent_QMARK_)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,client_id);\n} else {\nreturn s;\n}\n});\n})();\nvar inst_96779 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_96780 = cljs.core.reduce_kv(inst_96778,inst_96779,inst_96763);\nvar state_96809__$1 = state_96809;\nvar statearr_96820_97798 = state_96809__$1;\n(statearr_96820_97798[(2)] = inst_96780);\n\n(statearr_96820_97798[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (1))){\nvar inst_96753 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_96754 = (0);\nvar inst_96755 = inst_96753;\nvar state_96809__$1 = (function (){var statearr_96821 = state_96809;\n(statearr_96821[(8)] = inst_96755);\n\n(statearr_96821[(9)] = inst_96754);\n\nreturn statearr_96821;\n})();\nvar statearr_96822_97799 = state_96809__$1;\n(statearr_96822_97799[(2)] = null);\n\n(statearr_96822_97799[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (4))){\nvar state_96809__$1 = state_96809;\nvar statearr_96823_97800 = state_96809__$1;\n(statearr_96823_97800[(2)] = true);\n\n(statearr_96823_97800[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (15))){\nvar inst_96800 = (state_96809[(2)]);\nvar state_96809__$1 = state_96809;\nvar statearr_96828_97801 = state_96809__$1;\n(statearr_96828_97801[(2)] = inst_96800);\n\n(statearr_96828_97801[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (13))){\nvar inst_96786 = (state_96809[(10)]);\nvar inst_96791 = cljs.core.rand_int(inst_96786);\nvar inst_96792 = (inst_96786 + inst_96791);\nvar inst_96793 = cljs.core.async.timeout(inst_96792);\nvar state_96809__$1 = state_96809;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_96809__$1,(16),inst_96793);\n} else {\nif((state_val_96810 === (6))){\nvar inst_96763 = (state_96809[(7)]);\nvar inst_96770 = (state_96809[(2)]);\nvar state_96809__$1 = (function (){var statearr_96832 = state_96809;\n(statearr_96832[(11)] = inst_96770);\n\nreturn statearr_96832;\n})();\nif(cljs.core.truth_(inst_96763)){\nvar statearr_96836_97802 = state_96809__$1;\n(statearr_96836_97802[(1)] = (7));\n\n} else {\nvar statearr_96837_97803 = state_96809__$1;\n(statearr_96837_97803[(1)] = (8));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (3))){\nvar inst_96805 = (state_96809[(2)]);\nvar state_96809__$1 = state_96809;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_96809__$1,inst_96805);\n} else {\nif((state_val_96810 === (12))){\nvar inst_96803 = (state_96809[(2)]);\nvar state_96809__$1 = state_96809;\nvar statearr_96841_97804 = state_96809__$1;\n(statearr_96841_97804[(2)] = inst_96803);\n\n(statearr_96841_97804[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (2))){\nvar inst_96763 = (state_96809[(7)]);\nvar inst_96755 = (state_96809[(8)]);\nvar inst_96754 = (state_96809[(9)]);\nvar inst_96757 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_96760 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid];\nvar inst_96761 = (new cljs.core.PersistentVector(null,2,(5),inst_96757,inst_96760,null));\nvar inst_96762 = (function (){var n = inst_96754;\nvar client_ids_satisfied = inst_96755;\nreturn (function (m){\nvar ks_to_pull = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(client_ids_satisfied,cljs.core.keys(m));\nif(cljs.core.empty_QMARK_(ks_to_pull)){\nreturn taoensso.encore.swapped(m,null);\n} else {\nreturn taoensso.encore.swapped(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m__$1,k){\nvar vec__96868 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96868,(0),null);\nvar udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__96868,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,udt], null));\n}),m,ks_to_pull),cljs.core.select_keys(m,ks_to_pull));\n}\n});\n})();\nvar inst_96763__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_96761,inst_96762);\nvar inst_96764 = (function (){var n = inst_96754;\nvar client_ids_satisfied = inst_96755;\nvar _QMARK_pulled = inst_96763__$1;\nreturn (function (x){\nvar or__4160__auto__ = (x == null);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nreturn taoensso.truss.impl.non_throwing(cljs.core.map_QMARK_)(x);\n}\n});\n})();\nvar inst_96765 = inst_96764(inst_96763__$1);\nvar state_96809__$1 = (function (){var statearr_96871 = state_96809;\n(statearr_96871[(7)] = inst_96763__$1);\n\nreturn statearr_96871;\n})();\nif(cljs.core.truth_(inst_96765)){\nvar statearr_96872_97805 = state_96809__$1;\n(statearr_96872_97805[(1)] = (4));\n\n} else {\nvar statearr_96873_97806 = state_96809__$1;\n(statearr_96873_97806[(1)] = (5));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (11))){\nvar state_96809__$1 = state_96809;\nvar statearr_96874_97807 = state_96809__$1;\n(statearr_96874_97807[(2)] = null);\n\n(statearr_96874_97807[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (9))){\nvar inst_96786 = (state_96809[(10)]);\nvar inst_96755 = (state_96809[(8)]);\nvar inst_96754 = (state_96809[(9)]);\nvar inst_96783 = (state_96809[(2)]);\nvar inst_96785 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(inst_96755,inst_96783);\nvar inst_96786__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ms_backoffs,inst_96754);\nvar state_96809__$1 = (function (){var statearr_96875 = state_96809;\n(statearr_96875[(10)] = inst_96786__$1);\n\n(statearr_96875[(12)] = inst_96785);\n\nreturn statearr_96875;\n})();\nif(cljs.core.truth_(inst_96786__$1)){\nvar statearr_96876_97808 = state_96809__$1;\n(statearr_96876_97808[(1)] = (10));\n\n} else {\nvar statearr_96877_97809 = state_96809__$1;\n(statearr_96877_97809[(1)] = (11));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (5))){\nvar inst_96763 = (state_96809[(7)]);\nvar inst_96768 = taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",830,\"([:or nil? map?] ?pulled)\",inst_96763,null,null);\nvar state_96809__$1 = state_96809;\nvar statearr_96878_97810 = state_96809__$1;\n(statearr_96878_97810[(2)] = inst_96768);\n\n(statearr_96878_97810[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (14))){\nvar state_96809__$1 = state_96809;\nvar statearr_96879_97811 = state_96809__$1;\n(statearr_96879_97811[(2)] = null);\n\n(statearr_96879_97811[(1)] = (15));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (16))){\nvar inst_96785 = (state_96809[(12)]);\nvar inst_96754 = (state_96809[(9)]);\nvar inst_96795 = (state_96809[(2)]);\nvar inst_96796 = (inst_96754 + (1));\nvar inst_96754__$1 = inst_96796;\nvar inst_96755 = inst_96785;\nvar state_96809__$1 = (function (){var statearr_96880 = state_96809;\n(statearr_96880[(8)] = inst_96755);\n\n(statearr_96880[(13)] = inst_96795);\n\n(statearr_96880[(9)] = inst_96754__$1);\n\nreturn statearr_96880;\n})();\nvar statearr_96881_97812 = state_96809__$1;\n(statearr_96881_97812[(2)] = null);\n\n(statearr_96881_97812[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (10))){\nvar inst_96785 = (state_96809[(12)]);\nvar inst_96788 = cljs.core.complement(inst_96785);\nvar inst_96789 = taoensso.encore.rsome(inst_96788,client_ids_unsatisfied);\nvar state_96809__$1 = state_96809;\nif(cljs.core.truth_(inst_96789)){\nvar statearr_96882_97813 = state_96809__$1;\n(statearr_96882_97813[(1)] = (13));\n\n} else {\nvar statearr_96883_97814 = state_96809__$1;\n(statearr_96883_97814[(1)] = (14));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_96810 === (8))){\nvar state_96809__$1 = state_96809;\nvar statearr_96884_97815 = state_96809__$1;\n(statearr_96884_97815[(2)] = null);\n\n(statearr_96884_97815[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto__ = null;\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto____0 = (function (){\nvar statearr_96885 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_96885[(0)] = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto__);\n\n(statearr_96885[(1)] = (1));\n\nreturn statearr_96885;\n});\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto____1 = (function (state_96809){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_96809);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e96887){var ex__90615__auto__ = e96887;\nvar statearr_96888_97816 = state_96809;\n(statearr_96888_97816[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_96809[(4)]))){\nvar statearr_96889_97817 = state_96809;\n(statearr_96889_97817[(1)] = cljs.core.first((state_96809[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97818 = state_96809;\nstate_96809 = G__97818;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto__ = function(state_96809){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto____1.call(this,state_96809);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto____0;\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto____1;\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_96890 = f__90683__auto__();\n(statearr_96890[(6)] = c__90682__auto__);\n\nreturn statearr_96890;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\nreturn c__90682__auto__;\n}\n});\n/**\n * Alias of `taoensso.encore/ajax-lite`\n */\ntaoensso.sente.ajax_lite = taoensso.encore.ajax_lite;\n\n/**\n * @interface\n */\ntaoensso.sente.IChSocket = function(){};\n\nvar taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_97819 = (function (chsk){\nvar x__4463__auto__ = (((chsk == null))?null:chsk);\nvar m__4464__auto__ = (taoensso.sente._chsk_connect_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4464__auto__.call(null,chsk));\n} else {\nvar m__4461__auto__ = (taoensso.sente._chsk_connect_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4461__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-connect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_connect_BANG_ = (function taoensso$sente$_chsk_connect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(chsk);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn_97819(chsk);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_97820 = (function (chsk,reason){\nvar x__4463__auto__ = (((chsk == null))?null:chsk);\nvar m__4464__auto__ = (taoensso.sente._chsk_disconnect_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4464__auto__.call(null,chsk,reason));\n} else {\nvar m__4461__auto__ = (taoensso.sente._chsk_disconnect_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4461__auto__.call(null,chsk,reason));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-disconnect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_disconnect_BANG_ = (function taoensso$sente$_chsk_disconnect_BANG_(chsk,reason){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(chsk,reason);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn_97820(chsk,reason);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_97821 = (function (chsk){\nvar x__4463__auto__ = (((chsk == null))?null:chsk);\nvar m__4464__auto__ = (taoensso.sente._chsk_reconnect_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4464__auto__.call(null,chsk));\n} else {\nvar m__4461__auto__ = (taoensso.sente._chsk_reconnect_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4461__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-reconnect!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_reconnect_BANG_ = (function taoensso$sente$_chsk_reconnect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1(chsk);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn_97821(chsk);\n}\n});\n\nvar taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_97822 = (function (chsk,ev,opts){\nvar x__4463__auto__ = (((chsk == null))?null:chsk);\nvar m__4464__auto__ = (taoensso.sente._chsk_send_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4464__auto__.call(null,chsk,ev,opts));\n} else {\nvar m__4461__auto__ = (taoensso.sente._chsk_send_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4461__auto__.call(null,chsk,ev,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-send!\",chsk);\n}\n}\n});\ntaoensso.sente._chsk_send_BANG_ = (function taoensso$sente$_chsk_send_BANG_(chsk,ev,opts){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(chsk,ev,opts);\n} else {\nreturn taoensso$sente$IChSocket$_chsk_send_BANG_$dyn_97822(chsk,ev,opts);\n}\n});\n\ntaoensso.sente.chsk_connect_BANG_ = (function taoensso$sente$chsk_connect_BANG_(chsk){\nreturn taoensso.sente._chsk_connect_BANG_(chsk);\n});\ntaoensso.sente.chsk_disconnect_BANG_ = (function taoensso$sente$chsk_disconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_disconnect_BANG_(chsk,new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641));\n});\n/**\n * Useful for reauthenticating after login/logout, etc.\n */\ntaoensso.sente.chsk_reconnect_BANG_ = (function taoensso$sente$chsk_reconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_reconnect_BANG_(chsk);\n});\n/**\n * Deprecated\n */\ntaoensso.sente.chsk_destroy_BANG_ = taoensso.sente.chsk_disconnect_BANG_;\n/**\n * Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\n */\ntaoensso.sente.chsk_send_BANG_ = (function taoensso$sente$chsk_send_BANG_(var_args){\nvar G__97039 = arguments.length;\nswitch (G__97039) {\ncase 2:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (chsk,ev){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (chsk,ev,_QMARK_timeout_ms,_QMARK_cb){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),_QMARK_timeout_ms,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),_QMARK_cb], null));\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (chsk,ev,opts){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,877,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (%s) %s\",cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),cljs.core.boolean$(new cljs.core.Keyword(null,\"cb\",\"cb\",589947841).cljs$core$IFn$_invoke$arity$1(opts))),ev], null);\n}),null)),null,-219777315);\n\nreturn taoensso.sente._chsk_send_BANG_(chsk,ev,opts);\n}));\n\n(taoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4);\n\ntaoensso.sente.chsk_send__GT_closed_BANG_ = (function taoensso$sente$chsk_send__GT_closed_BANG_(_QMARK_cb_fn){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,881,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send against closed chsk.\"], null);\n}),null)),null,-177301203);\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264)));\n} else {\n}\n\nreturn false;\n});\ntaoensso.sente.assert_send_args = (function taoensso$sente$assert_send_args(x,_QMARK_timeout_ms,_QMARK_cb){\ntaoensso.sente.assert_event(x);\n\nif((((((_QMARK_timeout_ms == null)) && ((_QMARK_cb == null)))) || (taoensso.encore.nat_int_QMARK_(_QMARK_timeout_ms)))){\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb requires a timeout; timeout-ms should be a +ive integer: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(_QMARK_timeout_ms)].join(''),\"\\n\",\"(or (and (nil? ?timeout-ms) (nil? ?cb)) (and (enc/nat-int? ?timeout-ms)))\"].join('')));\n}\n\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)) || (taoensso.encore.chan_QMARK_(_QMARK_cb)))){\nreturn null;\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb should be nil, an ifn, or a channel: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(_QMARK_cb))].join(''),\"\\n\",\"(or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\"].join('')));\n}\n});\ntaoensso.sente.pull_unused_cb_fn_BANG_ = (function taoensso$sente$pull_unused_cb_fn_BANG_(cbs_waiting_,_QMARK_cb_uuid){\nvar temp__5753__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar cb_uuid = temp__5753__auto__;\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null),(function (_QMARK_f){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),_QMARK_f);\n}));\n} else {\nreturn null;\n}\n});\n/**\n * Atomically swaps the value of chk's :state_ atom.\n */\ntaoensso.sente.swap_chsk_state_BANG_ = (function taoensso$sente$swap_chsk_state_BANG_(chsk,f){\nvar vec__97115 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk),(function (old_state){\nvar new_state = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(old_state) : f.call(null,old_state));\nvar new_state__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530).cljs$core$IFn$_invoke$arity$1(old_state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_state,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),false):new_state);\nvar new_state__$2 = (cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(new_state__$1))?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new_state__$1,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)):new_state__$1);\nreturn taoensso.encore.swapped(new_state__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state__$2], null));\n}));\nvar old_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97115,(0),null);\nvar new_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97115,(1),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_state,new_state)){\nvar output = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state], null);\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(chsk,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"state\",\"chsk/state\",-1991397620),output], null));\n\nreturn output;\n} else {\nreturn null;\n}\n});\ntaoensso.sente.chsk_state__GT_closed = (function taoensso$sente$chsk_state__GT_closed(state,reason){\nvar e_97824 = (function (){try{if(cljs.core.map_QMARK_(state)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97127){if((e97127 instanceof Error)){\nvar e_97824 = e97127;\nreturn e_97824;\n} else {\nthrow e97127;\n\n}\n}})();\nif((e_97824 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",924,\"(map? state)\",state,e_97824,null);\n}\n\nvar e_97825 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__97132 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641),null,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720),null,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424),null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__97132) : taoensso.truss.impl.set_STAR_.call(null,G__97132));\n})(),x);\n})(reason)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97131){if((e97131 instanceof Error)){\nvar e_97825 = e97131;\nreturn e_97825;\n} else {\nthrow e97131;\n\n}\n}})();\nif((e_97825 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",925,\"([:el #{:requested-disconnect :downgrading-ws-to-ajax :unexpected :requested-reconnect}] reason)\",reason,e_97825,null);\n}\n\nif(cljs.core.truth_((function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(state);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(reason,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}\n})())){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"last-close\",\"last-close\",-2054255782),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null)], 0));\n} else {\nreturn state;\n}\n});\n/**\n * Experimental, undocumented. Allows a core.async channel to be provided\n *   instead of a cb-fn. The channel will receive values of form\n *   [<event-id>.cb <reply>].\n */\ntaoensso.sente.cb_chan_as_fn = (function taoensso$sente$cb_chan_as_fn(_QMARK_cb,ev){\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)))){\nreturn _QMARK_cb;\n} else {\nvar e_97826 = (function (){try{if(taoensso.encore.chan_QMARK_(_QMARK_cb)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97134){if((e97134 instanceof Error)){\nvar e_97826 = e97134;\nreturn e_97826;\n} else {\nthrow e97134;\n\n}\n}})();\nif((e_97826 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",945,\"(enc/chan? ?cb)\",_QMARK_cb,e_97826,null);\n}\n\ntaoensso.sente.assert_event(ev);\n\nvar vec__97142 = ev;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97142,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97142,(1),null);\nvar cb_ch = _QMARK_cb;\nreturn (function (reply){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cb_ch,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([taoensso.encore.as_qname(ev_id),\".cb\"].join('')),reply], null));\n});\n}\n});\ntaoensso.sente.receive_buffered_evs_BANG_ = (function taoensso$sente$receive_buffered_evs_BANG_(chs,clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,955,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-buffered-evs!: %s\",clj], null);\n}),null)),null,-1013644075);\n\nvar buffered_evs = ((cljs.core.vector_QMARK_(clj))?clj:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",956,\"(vector? clj)\",clj,null,null));\nvar seq__97167 = cljs.core.seq(buffered_evs);\nvar chunk__97168 = null;\nvar count__97169 = (0);\nvar i__97170 = (0);\nwhile(true){\nif((i__97170 < count__97169)){\nvar ev = chunk__97168.cljs$core$IIndexed$_nth$arity$2(null,i__97170);\ntaoensso.sente.assert_event(ev);\n\nvar vec__97182_97827 = ev;\nvar id_97828 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97182_97827,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_97828),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__97829 = seq__97167;\nvar G__97830 = chunk__97168;\nvar G__97831 = count__97169;\nvar G__97832 = (i__97170 + (1));\nseq__97167 = G__97829;\nchunk__97168 = G__97830;\ncount__97169 = G__97831;\ni__97170 = G__97832;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__97167);\nif(temp__5753__auto__){\nvar seq__97167__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__97167__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__97167__$1);\nvar G__97833 = cljs.core.chunk_rest(seq__97167__$1);\nvar G__97834 = c__4591__auto__;\nvar G__97835 = cljs.core.count(c__4591__auto__);\nvar G__97836 = (0);\nseq__97167 = G__97833;\nchunk__97168 = G__97834;\ncount__97169 = G__97835;\ni__97170 = G__97836;\ncontinue;\n} else {\nvar ev = cljs.core.first(seq__97167__$1);\ntaoensso.sente.assert_event(ev);\n\nvar vec__97187_97837 = ev;\nvar id_97838 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97187_97837,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_97838),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__97839 = cljs.core.next(seq__97167__$1);\nvar G__97840 = null;\nvar G__97841 = (0);\nvar G__97842 = (0);\nseq__97167 = G__97839;\nchunk__97168 = G__97840;\ncount__97169 = G__97841;\ni__97170 = G__97842;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ntaoensso.sente.handshake_QMARK_ = (function taoensso$sente$handshake_QMARK_(x){\nif(cljs.core.vector_QMARK_(x)){\nvar vec__97196 = x;\nvar x1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97196,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x1,new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686));\n} else {\nreturn false;\n}\n});\ntaoensso.sente.receive_handshake_BANG_ = (function taoensso$sente$receive_handshake_BANG_(chsk_type,chsk,clj){\nvar e_97843 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__97209 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__97209) : taoensso.truss.impl.set_STAR_.call(null,G__97209));\n})(),x);\n})(chsk_type)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97201){if((e97201 instanceof Error)){\nvar e_97843 = e97201;\nreturn e_97843;\n} else {\nthrow e97201;\n\n}\n}})();\nif((e_97843 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",968,\"([:el #{:ws :ajax}] chsk-type)\",chsk_type,e_97843,null);\n}\n\nvar e_97844 = (function (){try{if(taoensso.sente.handshake_QMARK_(clj)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97210){if((e97210 instanceof Error)){\nvar e_97844 = e97210;\nreturn e_97844;\n} else {\nthrow e97210;\n\n}\n}})();\nif((e_97844 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",969,\"(handshake? clj)\",clj,e_97844,null);\n}\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,970,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-handshake! (%s): %s\",chsk_type,clj], null);\n}),null)),null,1066118612);\n\nvar vec__97213 = clj;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97213,(0),null);\nvar vec__97216 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97213,(1),null);\nvar _QMARK_uid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97216,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97216,(1),null);\nvar _QMARK_handshake_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97216,(2),null);\nvar map__97219 = chsk;\nvar map__97219__$1 = cljs.core.__destructure_map(map__97219);\nvar chs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97219__$1,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120));\nvar ever_opened_QMARK__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97219__$1,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913));\nvar first_handshake_QMARK_ = cljs.core.compare_and_set_BANG_(ever_opened_QMARK__,false,true);\nvar new_state = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),chsk_type,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),true,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),_QMARK_uid,new cljs.core.Keyword(null,\"handshake-data\",\"handshake-data\",-278378864),_QMARK_handshake_data,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),first_handshake_QMARK_], null);\nvar handshake_ev = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_uid,null,_QMARK_handshake_data,first_handshake_QMARK_], null)], null);\ntaoensso.sente.assert_event(handshake_ev);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk,(function (p1__97200_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__97200_SHARP_,new_state], 0));\n}));\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(chs),handshake_ev);\n\nreturn new cljs.core.Keyword(null,\"handled\",\"handled\",1889700151);\n});\n/**\n * nnil iff the websocket npm library[1] is available.\n *   Easiest way to install:\n *     1. Add the lein-npm[2] plugin to your `project.clj`,\n *     2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n * \n *   [1] Ref. https://www.npmjs.com/package/websocket\n *   [2] Ref. https://github.com/RyanMcG/lein-npm\n */\ntaoensso.sente._QMARK_node_npm_websocket_ = (function (){var make_package_name = (function (prefix){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),\"socket\"].join('');\n});\nvar require_fn = (((typeof require !== 'undefined'))?require:cljs.core.constantly(new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)));\nreturn (new cljs.core.Delay((function (){\nif(((taoensso.sente.node_target_QMARK_) && ((typeof require !== 'undefined')))){\ntry{var G__97223 = make_package_name(\"web\");\nreturn (require_fn.cljs$core$IFn$_invoke$arity$1 ? require_fn.cljs$core$IFn$_invoke$arity$1(G__97223) : require_fn.call(null,G__97223));\n}catch (e97222){var e = e97222;\nreturn null;\n}} else {\nreturn null;\n}\n}),null));\n})();\ntaoensso.sente.create_js_client_websocket_BANG_ = (function taoensso$sente$create_js_client_websocket_BANG_(p__97226){\nvar map__97227 = p__97226;\nvar map__97227__$1 = cljs.core.__destructure_map(map__97227);\nvar opts = map__97227__$1;\nvar onerror_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97227__$1,new cljs.core.Keyword(null,\"onerror-fn\",\"onerror-fn\",1069372505));\nvar onmessage_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97227__$1,new cljs.core.Keyword(null,\"onmessage-fn\",\"onmessage-fn\",1633804172));\nvar onclose_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97227__$1,new cljs.core.Keyword(null,\"onclose-fn\",\"onclose-fn\",-1388163785));\nvar uri_str = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97227__$1,new cljs.core.Keyword(null,\"uri-str\",\"uri-str\",304128675));\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97227__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nvar temp__5753__auto__ = (function (){var or__4160__auto__ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"WebSocket\");\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"MozWebSocket\");\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(taoensso.sente._QMARK_node_npm_websocket_),\"w3cwebsocket\");\n}\n}\n})();\nif(cljs.core.truth_(temp__5753__auto__)){\nvar WebSocket = temp__5753__auto__;\nvar socket = (new WebSocket(uri_str));\nvar G__97230_97845 = socket;\n(G__97230_97845[\"onerror\"] = onerror_fn);\n\n(G__97230_97845[\"onmessage\"] = onmessage_fn);\n\n(G__97230_97845[\"onclose\"] = onclose_fn);\n\n\nreturn socket;\n} else {\nreturn null;\n}\n});\ntaoensso.sente.create_websocket_BANG_ = (function taoensso$sente$create_websocket_BANG_(p__97231){\nvar map__97232 = p__97231;\nvar map__97232__$1 = cljs.core.__destructure_map(map__97232);\nvar opts = map__97232__$1;\nvar onerror_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97232__$1,new cljs.core.Keyword(null,\"onerror-fn\",\"onerror-fn\",1069372505));\nvar onmessage_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97232__$1,new cljs.core.Keyword(null,\"onmessage-fn\",\"onmessage-fn\",1633804172));\nvar onclose_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97232__$1,new cljs.core.Keyword(null,\"onclose-fn\",\"onclose-fn\",-1388163785));\nvar uri_str = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97232__$1,new cljs.core.Keyword(null,\"uri-str\",\"uri-str\",304128675));\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97232__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nreturn taoensso.sente.create_js_client_websocket_BANG_(opts);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChWebSocket = (function (client_id,chs,params,headers,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.headers = headers;\nthis.packer = packer;\nthis.url = url;\nthis.ws_kalive_ms = ws_kalive_ms;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.retry_count_ = retry_count_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.cbs_waiting_ = cbs_waiting_;\nthis.socket_ = socket_;\nthis.udt_last_comms_ = udt_last_comms_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4415__auto__,k__4416__auto__){\nvar self__ = this;\nvar this__4415__auto____$1 = this;\nreturn this__4415__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4416__auto__,null);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4417__auto__,k97240,else__4418__auto__){\nvar self__ = this;\nvar this__4417__auto____$1 = this;\nvar G__97244 = k97240;\nvar G__97244__$1 = (((G__97244 instanceof cljs.core.Keyword))?G__97244.fqn:null);\nswitch (G__97244__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"headers\":\nreturn self__.headers;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"ws-kalive-ms\":\nreturn self__.ws_kalive_ms;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"retry-count_\":\nreturn self__.retry_count_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"cbs-waiting_\":\nreturn self__.cbs_waiting_;\n\nbreak;\ncase \"socket_\":\nreturn self__.socket_;\n\nbreak;\ncase \"udt-last-comms_\":\nreturn self__.udt_last_comms_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k97240,else__4418__auto__);\n\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4434__auto__,f__4435__auto__,init__4436__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4437__auto__,p__97245){\nvar vec__97246 = p__97245;\nvar k__4438__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97246,(0),null);\nvar v__4439__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97246,(1),null);\nreturn (f__4435__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4435__auto__.cljs$core$IFn$_invoke$arity$3(ret__4437__auto__,k__4438__auto__,v__4439__auto__) : f__4435__auto__.call(null,ret__4437__auto__,k__4438__auto__,v__4439__auto__));\n}),init__4436__auto__,this__4434__auto____$1);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4429__auto__,writer__4430__auto__,opts__4431__auto__){\nvar self__ = this;\nvar this__4429__auto____$1 = this;\nvar pr_pair__4432__auto__ = (function (keyval__4433__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4431__auto__,keyval__4433__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,pr_pair__4432__auto__,\"#taoensso.sente.ChWebSocket{\",\", \",\"}\",opts__4431__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),self__.headers],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__97239){\nvar self__ = this;\nvar G__97239__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__97239__$1,15,new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4413__auto__){\nvar self__ = this;\nvar this__4413__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4410__auto__){\nvar self__ = this;\nvar this__4410__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4419__auto__){\nvar self__ = this;\nvar this__4419__auto____$1 = this;\nreturn (15 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4411__auto__){\nvar self__ = this;\nvar this__4411__auto____$1 = this;\nvar h__4273__auto__ = self__.__hash;\nif((!((h__4273__auto__ == null)))){\nreturn h__4273__auto__;\n} else {\nvar h__4273__auto____$1 = (function (coll__4412__auto__){\nreturn (1998688700 ^ cljs.core.hash_unordered_coll(coll__4412__auto__));\n})(this__4411__auto____$1);\n(self__.__hash = h__4273__auto____$1);\n\nreturn h__4273__auto____$1;\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this97241,other97242){\nvar self__ = this;\nvar this97241__$1 = this;\nreturn (((!((other97242 == null)))) && ((this97241__$1.constructor === other97242.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.client_id,other97242.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.chs,other97242.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.params,other97242.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.headers,other97242.headers)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.packer,other97242.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.url,other97242.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.ws_kalive_ms,other97242.ws_kalive_ms)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.state_,other97242.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.instance_handle_,other97242.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.retry_count_,other97242.retry_count_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.ever_opened_QMARK__,other97242.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.backoff_ms_fn,other97242.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.cbs_waiting_,other97242.cbs_waiting_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.socket_,other97242.socket_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.udt_last_comms_,other97242.udt_last_comms_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97241__$1.__extmap,other97242.__extmap)));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4424__auto__,k__4425__auto__){\nvar self__ = this;\nvar this__4424__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 15, [new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),null,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4425__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4424__auto____$1),self__.__meta),k__4425__auto__);\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4425__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4422__auto__,k__4423__auto__,G__97239){\nvar self__ = this;\nvar this__4422__auto____$1 = this;\nvar pred__97255 = cljs.core.keyword_identical_QMARK_;\nvar expr__97256 = k__4423__auto__;\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(G__97239,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,G__97239,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,G__97239,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,G__97239,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,G__97239,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,G__97239,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,G__97239,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,G__97239,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,G__97239,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,G__97239,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,G__97239,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,G__97239,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__97239,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,G__97239,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97255.cljs$core$IFn$_invoke$arity$2 ? pred__97255.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__97256) : pred__97255.call(null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),expr__97256)))){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,G__97239,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4423__auto__,G__97239),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4427__auto__){\nvar self__ = this;\nvar this__4427__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),self__.headers,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4414__auto__,G__97239){\nvar self__ = this;\nvar this__4414__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.headers,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,G__97239,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4420__auto__,entry__4421__auto__){\nvar self__ = this;\nvar this__4420__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4421__auto__)){\nreturn this__4420__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4421__auto__,(0)),cljs.core._nth(entry__4421__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4420__auto____$1,entry__4421__auto__);\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97233_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__97233_SHARP_,reason);\n}));\n\nvar temp__5753__auto__ = cljs.core.deref(self__.socket_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar s = temp__5753__auto__;\nreturn s.close((1000),\"CLOSE_NORMAL\");\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__97284 = opts;\nvar map__97284__$1 = cljs.core.__destructure_map(map__97284);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97284__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97284__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97284__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar _QMARK_cb_uuid = (cljs.core.truth_(_QMARK_cb_fn)?taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6)):null);\nvar ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,_QMARK_cb_uuid);\nvar temp__5753__auto___97847 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5753__auto___97847)){\nvar cb_uuid_97848 = temp__5753__auto___97847;\ntaoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_97848], null),(function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97293){if((e97293 instanceof Error)){\nvar e = e97293;\nreturn e;\n} else {\nthrow e97293;\n\n}\n}})();\nif((e == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1114,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\n}\n})());\n\nvar temp__5753__auto___97849__$1 = _QMARK_timeout_ms;\nif(cljs.core.truth_(temp__5753__auto___97849__$1)){\nvar timeout_ms_97850 = temp__5753__auto___97849__$1;\nvar c__90682__auto___97851 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_97304){\nvar state_val_97305 = (state_97304[(1)]);\nif((state_val_97305 === (1))){\nvar inst_97294 = cljs.core.async.timeout(timeout_ms_97850);\nvar state_97304__$1 = state_97304;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_97304__$1,(2),inst_97294);\n} else {\nif((state_val_97305 === (2))){\nvar inst_97297 = (state_97304[(7)]);\nvar inst_97296 = (state_97304[(2)]);\nvar inst_97297__$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,_QMARK_cb_uuid);\nvar state_97304__$1 = (function (){var statearr_97306 = state_97304;\n(statearr_97306[(7)] = inst_97297__$1);\n\n(statearr_97306[(8)] = inst_97296);\n\nreturn statearr_97306;\n})();\nif(cljs.core.truth_(inst_97297__$1)){\nvar statearr_97307_97852 = state_97304__$1;\n(statearr_97307_97852[(1)] = (3));\n\n} else {\nvar statearr_97308_97853 = state_97304__$1;\n(statearr_97308_97853[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97305 === (3))){\nvar inst_97297 = (state_97304[(7)]);\nvar inst_97299 = (inst_97297.cljs$core$IFn$_invoke$arity$1 ? inst_97297.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : inst_97297.call(null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\nvar state_97304__$1 = state_97304;\nvar statearr_97313_97854 = state_97304__$1;\n(statearr_97313_97854[(2)] = inst_97299);\n\n(statearr_97313_97854[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97305 === (4))){\nvar state_97304__$1 = state_97304;\nvar statearr_97314_97855 = state_97304__$1;\n(statearr_97314_97855[(2)] = null);\n\n(statearr_97314_97855[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97305 === (5))){\nvar inst_97302 = (state_97304[(2)]);\nvar state_97304__$1 = state_97304;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_97304__$1,inst_97302);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__90612__auto__ = null;\nvar taoensso$sente$state_machine__90612__auto____0 = (function (){\nvar statearr_97315 = [null,null,null,null,null,null,null,null,null];\n(statearr_97315[(0)] = taoensso$sente$state_machine__90612__auto__);\n\n(statearr_97315[(1)] = (1));\n\nreturn statearr_97315;\n});\nvar taoensso$sente$state_machine__90612__auto____1 = (function (state_97304){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_97304);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e97320){var ex__90615__auto__ = e97320;\nvar statearr_97321_97856 = state_97304;\n(statearr_97321_97856[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_97304[(4)]))){\nvar statearr_97322_97857 = state_97304;\n(statearr_97322_97857[(1)] = cljs.core.first((state_97304[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97858 = state_97304;\nstate_97304 = G__97858;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__90612__auto__ = function(state_97304){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__90612__auto____1.call(this,state_97304);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__90612__auto____0;\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__90612__auto____1;\nreturn taoensso$sente$state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_97325 = f__90683__auto__();\n(statearr_97325[(6)] = c__90682__auto___97851);\n\nreturn statearr_97325;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\n} else {\n}\n} else {\n}\n\ntry{cljs.core.deref(self__.socket_).send(ppstr);\n\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}catch (e97328){var t = e97328;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1128,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t,\"Chsk send error\"], null);\n}),null)),null,1502255010);\n\nvar temp__5753__auto___97859 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5753__auto___97859)){\nvar cb_uuid_97860 = temp__5753__auto___97859;\nvar cb_fn_STAR__97861 = (function (){var or__4160__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid_97860);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97332){if((e97332 instanceof Error)){\nvar e = e97332;\nreturn e;\n} else {\nthrow e97332;\n\n}\n}})();\nif((e == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1131,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\n}\n}\n})();\n(cb_fn_STAR__97861.cljs$core$IFn$_invoke$arity$1 ? cb_fn_STAR__97861.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : cb_fn_STAR__97861.call(null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\n} else {\n}\n\nreturn false;\n}}\n}));\n\n(taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});\nvar connect_fn = (function taoensso$sente$connect_fn(){\nif(have_handle_QMARK_()){\nvar retry_fn = (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.retry_count_,cljs.core.inc);\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1147,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n}),null)),null,1663477060);\n\ngoog.global.setTimeout(taoensso$sente$connect_fn,backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97234_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__97234_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n}));\n} else {\nreturn null;\n}\n});\nvar onerror_fn = (function (ws_ev){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1160,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WebSocket error: %s\",(function (){try{return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(ws_ev);\n}catch (e97339){var _ = e97339;\nreturn ws_ev;\n}})()], null);\n}),null)),null,416828413);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97235_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__97235_SHARP_,new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev], null));\n}));\n});\nvar onmessage_fn = (function (ws_ev){\nvar ppstr = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"data\");\nvar vec__97344 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97344,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97344,(1),null);\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nvar or__4160__auto__ = ((taoensso.sente.handshake_QMARK_(clj))?(function (){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),chsk__$1,clj);\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nreturn new cljs.core.Keyword(null,\"handshake\",\"handshake\",68079331);\n})()\n:null);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)))?(function (){\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(self__.chs),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)], null));\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nvar temp__5751__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5751__auto__)){\nvar cb_uuid = temp__5751__auto__;\nvar temp__5751__auto____$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid);\nif(cljs.core.truth_(temp__5751__auto____$1)){\nvar cb_fn = temp__5751__auto____$1;\nreturn (cb_fn.cljs$core$IFn$_invoke$arity$1 ? cb_fn.cljs$core$IFn$_invoke$arity$1(clj) : cb_fn.call(null,clj));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1204,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",clj], null);\n}),null)),null,2146141720);\n}\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});\nvar onclose_fn = (function (ws_ev){\nvar last_ws_close = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev,new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009),taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"wasClean\"),new cljs.core.Keyword(null,\"code\",\"code\",1586293142),taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"code\"),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"reason\")], null);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009).cljs$core$IFn$_invoke$arity$1(last_ws_close))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,1230,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Clean WebSocket close, will not attempt reconnect\"], null);\n}),null)),null,1425060056);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97237_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__97237_SHARP_,new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n}));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97238_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(taoensso.sente.chsk_state__GT_closed(p1__97238_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424)),new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n}));\n\nreturn retry_fn();\n}\n});\nvar _QMARK_socket = (function (){try{return taoensso.sente.create_websocket_BANG_(new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"onerror-fn\",\"onerror-fn\",1069372505),onerror_fn,new cljs.core.Keyword(null,\"onmessage-fn\",\"onmessage-fn\",1633804172),onmessage_fn,new cljs.core.Keyword(null,\"onclose-fn\",\"onclose-fn\",-1388163785),onclose_fn,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),self__.headers,new cljs.core.Keyword(null,\"uri-str\",\"uri-str\",304128675),taoensso.encore.merge_url_with_query_string(self__.url,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0)))], null));\n}catch (e97351){var t = e97351;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1253,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t,\"WebSocket error\"], null);\n}),null)),null,-1827973604);\n\nreturn null;\n}})();\nif(cljs.core.not(_QMARK_socket)){\nreturn retry_fn();\n} else {\nvar temp__5753__auto___97862 = cljs.core.deref(self__.socket_);\nif(cljs.core.truth_(temp__5753__auto___97862)){\nvar old_socket_97863 = temp__5753__auto___97862;\nold_socket_97863.close();\n} else {\n}\n\nreturn cljs.core.reset_BANG_(self__.socket_,_QMARK_socket);\n}\n} else {\nreturn null;\n}\n});\nvar temp__5753__auto___97864 = self__.ws_kalive_ms;\nif(cljs.core.truth_(temp__5753__auto___97864)){\nvar ms_97865 = temp__5753__auto___97864;\nvar c__90682__auto___97866 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_97387){\nvar state_val_97388 = (state_97387[(1)]);\nif((state_val_97388 === (7))){\nvar inst_97383 = (state_97387[(2)]);\nvar state_97387__$1 = state_97387;\nvar statearr_97389_97867 = state_97387__$1;\n(statearr_97389_97867[(2)] = inst_97383);\n\n(statearr_97389_97867[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97388 === (1))){\nvar state_97387__$1 = state_97387;\nvar statearr_97391_97868 = state_97387__$1;\n(statearr_97391_97868[(2)] = null);\n\n(statearr_97391_97868[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97388 === (4))){\nvar inst_97360 = (state_97387[(2)]);\nvar inst_97361 = have_handle_QMARK_();\nvar state_97387__$1 = (function (){var statearr_97395 = state_97387;\n(statearr_97395[(7)] = inst_97360);\n\nreturn statearr_97395;\n})();\nif(inst_97361){\nvar statearr_97396_97869 = state_97387__$1;\n(statearr_97396_97869[(1)] = (5));\n\n} else {\nvar statearr_97397_97870 = state_97387__$1;\n(statearr_97397_97870[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97388 === (6))){\nvar state_97387__$1 = state_97387;\nvar statearr_97398_97871 = state_97387__$1;\n(statearr_97398_97871[(2)] = null);\n\n(statearr_97398_97871[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97388 === (3))){\nvar inst_97385 = (state_97387[(2)]);\nvar state_97387__$1 = state_97387;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_97387__$1,inst_97385);\n} else {\nif((state_val_97388 === (2))){\nvar inst_97357 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_97358 = cljs.core.async.timeout(ms_97865);\nvar state_97387__$1 = (function (){var statearr_97399 = state_97387;\n(statearr_97399[(8)] = inst_97357);\n\nreturn statearr_97399;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_97387__$1,(4),inst_97358);\n} else {\nif((state_val_97388 === (9))){\nvar state_97387__$1 = state_97387;\nvar statearr_97400_97872 = state_97387__$1;\n(statearr_97400_97872[(2)] = null);\n\n(statearr_97400_97872[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97388 === (5))){\nvar inst_97357 = (state_97387[(8)]);\nvar inst_97363 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_97365 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_97357,inst_97363);\nvar state_97387__$1 = state_97387;\nif(inst_97365){\nvar statearr_97401_97873 = state_97387__$1;\n(statearr_97401_97873[(1)] = (8));\n\n} else {\nvar statearr_97402_97874 = state_97387__$1;\n(statearr_97402_97874[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97388 === (10))){\nvar inst_97379 = (state_97387[(2)]);\nvar state_97387__$1 = (function (){var statearr_97404 = state_97387;\n(statearr_97404[(9)] = inst_97379);\n\nreturn statearr_97404;\n})();\nvar statearr_97405_97875 = state_97387__$1;\n(statearr_97405_97875[(2)] = null);\n\n(statearr_97405_97875[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97388 === (8))){\nvar inst_97368 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_97370 = [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)];\nvar inst_97371 = (new cljs.core.PersistentVector(null,1,(5),inst_97368,inst_97370,null));\nvar inst_97373 = [new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231)];\nvar inst_97374 = [true];\nvar inst_97375 = cljs.core.PersistentHashMap.fromArrays(inst_97373,inst_97374);\nvar inst_97376 = chsk__$1.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(null,inst_97371,inst_97375);\nvar state_97387__$1 = state_97387;\nvar statearr_97410_97876 = state_97387__$1;\n(statearr_97410_97876[(2)] = inst_97376);\n\n(statearr_97410_97876[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$state_machine__90612__auto__ = null;\nvar taoensso$sente$state_machine__90612__auto____0 = (function (){\nvar statearr_97414 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_97414[(0)] = taoensso$sente$state_machine__90612__auto__);\n\n(statearr_97414[(1)] = (1));\n\nreturn statearr_97414;\n});\nvar taoensso$sente$state_machine__90612__auto____1 = (function (state_97387){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_97387);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e97417){var ex__90615__auto__ = e97417;\nvar statearr_97419_97877 = state_97387;\n(statearr_97419_97877[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_97387[(4)]))){\nvar statearr_97421_97878 = state_97387;\n(statearr_97421_97878[(1)] = cljs.core.first((state_97387[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97879 = state_97387;\nstate_97387 = G__97879;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__90612__auto__ = function(state_97387){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__90612__auto____1.call(this,state_97387);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__90612__auto____0;\ntaoensso$sente$state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__90612__auto____1;\nreturn taoensso$sente$state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_97422 = f__90683__auto__();\n(statearr_97422[(6)] = c__90682__auto___97866);\n\nreturn statearr_97422;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\n} else {\n}\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nconnect_fn();\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChWebSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"headers\",\"headers\",805501398,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"ws-kalive-ms\",\"ws-kalive-ms\",-1212255801,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"retry-count_\",\"retry-count_\",1660769620,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"cbs-waiting_\",\"cbs-waiting_\",121502466,null),new cljs.core.Symbol(null,\"socket_\",\"socket_\",1279482619,null),new cljs.core.Symbol(null,\"udt-last-comms_\",\"udt-last-comms_\",1494731888,null)], null);\n}));\n\n(taoensso.sente.ChWebSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = (function (this__4458__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChWebSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = (function (this__4458__auto__,writer__4459__auto__){\nreturn cljs.core._write(writer__4459__auto__,\"taoensso.sente/ChWebSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChWebSocket.\n */\ntaoensso.sente.__GT_ChWebSocket = (function taoensso$sente$__GT_ChWebSocket(client_id,chs,params,headers,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_){\nreturn (new taoensso.sente.ChWebSocket(client_id,chs,params,headers,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChWebSocket = (function taoensso$sente$map__GT_ChWebSocket(G__97243){\nvar extmap__4454__auto__ = (function (){var G__97429 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__97243,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], 0));\nif(cljs.core.record_QMARK_(G__97243)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__97429);\n} else {\nreturn G__97429;\n}\n})();\nreturn (new taoensso.sente.ChWebSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908).cljs$core$IFn$_invoke$arity$1(G__97243),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639).cljs$core$IFn$_invoke$arity$1(G__97243),null,cljs.core.not_empty(extmap__4454__auto__),null));\n});\n\ntaoensso.sente.new_ChWebSocket = (function taoensso$sente$new_ChWebSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChWebSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n/**\n * We must set *some* client-side timeout otherwise an unpredictable (and\n *   probably too short) browser default will be used. Must be > server's\n *   :lp-timeout-ms.\n */\ntaoensso.sente.default_client_side_ajax_timeout_ms = taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(60)], 0));\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAjaxSocket = (function (client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.ajax_opts = ajax_opts;\nthis.curr_xhr_ = curr_xhr_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4415__auto__,k__4416__auto__){\nvar self__ = this;\nvar this__4415__auto____$1 = this;\nreturn this__4415__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4416__auto__,null);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4417__auto__,k97440,else__4418__auto__){\nvar self__ = this;\nvar this__4417__auto____$1 = this;\nvar G__97450 = k97440;\nvar G__97450__$1 = (((G__97450 instanceof cljs.core.Keyword))?G__97450.fqn:null);\nswitch (G__97450__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"ajax-opts\":\nreturn self__.ajax_opts;\n\nbreak;\ncase \"curr-xhr_\":\nreturn self__.curr_xhr_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k97440,else__4418__auto__);\n\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4434__auto__,f__4435__auto__,init__4436__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4437__auto__,p__97454){\nvar vec__97455 = p__97454;\nvar k__4438__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97455,(0),null);\nvar v__4439__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97455,(1),null);\nreturn (f__4435__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4435__auto__.cljs$core$IFn$_invoke$arity$3(ret__4437__auto__,k__4438__auto__,v__4439__auto__) : f__4435__auto__.call(null,ret__4437__auto__,k__4438__auto__,v__4439__auto__));\n}),init__4436__auto__,this__4434__auto____$1);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4429__auto__,writer__4430__auto__,opts__4431__auto__){\nvar self__ = this;\nvar this__4429__auto____$1 = this;\nvar pr_pair__4432__auto__ = (function (keyval__4433__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4431__auto__,keyval__4433__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,pr_pair__4432__auto__,\"#taoensso.sente.ChAjaxSocket{\",\", \",\"}\",opts__4431__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__97439){\nvar self__ = this;\nvar G__97439__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__97439__$1,11,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4413__auto__){\nvar self__ = this;\nvar this__4413__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4410__auto__){\nvar self__ = this;\nvar this__4410__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4419__auto__){\nvar self__ = this;\nvar this__4419__auto____$1 = this;\nreturn (11 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4411__auto__){\nvar self__ = this;\nvar this__4411__auto____$1 = this;\nvar h__4273__auto__ = self__.__hash;\nif((!((h__4273__auto__ == null)))){\nreturn h__4273__auto__;\n} else {\nvar h__4273__auto____$1 = (function (coll__4412__auto__){\nreturn (-266770752 ^ cljs.core.hash_unordered_coll(coll__4412__auto__));\n})(this__4411__auto____$1);\n(self__.__hash = h__4273__auto____$1);\n\nreturn h__4273__auto____$1;\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this97441,other97442){\nvar self__ = this;\nvar this97441__$1 = this;\nreturn (((!((other97442 == null)))) && ((this97441__$1.constructor === other97442.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.client_id,other97442.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.chs,other97442.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.params,other97442.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.packer,other97442.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.url,other97442.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.state_,other97442.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.instance_handle_,other97442.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.ever_opened_QMARK__,other97442.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.backoff_ms_fn,other97442.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.ajax_opts,other97442.ajax_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.curr_xhr_,other97442.curr_xhr_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97441__$1.__extmap,other97442.__extmap)));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4424__auto__,k__4425__auto__){\nvar self__ = this;\nvar this__4424__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4425__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4424__auto____$1),self__.__meta),k__4425__auto__);\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4425__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4422__auto__,k__4423__auto__,G__97439){\nvar self__ = this;\nvar this__4422__auto____$1 = this;\nvar pred__97473 = cljs.core.keyword_identical_QMARK_;\nvar expr__97474 = k__4423__auto__;\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(G__97439,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,G__97439,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,G__97439,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,G__97439,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__97439,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__97439,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,G__97439,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,G__97439,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,G__97439,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__97439,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97473.cljs$core$IFn$_invoke$arity$2 ? pred__97473.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__97474) : pred__97473.call(null,new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),expr__97474)))){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,G__97439,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4423__auto__,G__97439),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4427__auto__){\nvar self__ = this;\nvar this__4427__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4414__auto__,G__97439){\nvar self__ = this;\nvar this__4414__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,G__97439,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4420__auto__,entry__4421__auto__){\nvar self__ = this;\nvar this__4420__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4421__auto__)){\nreturn this__4420__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4421__auto__,(0)),cljs.core._nth(entry__4421__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4420__auto____$1,entry__4421__auto__);\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97433_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__97433_SHARP_,reason);\n}));\n\nvar temp__5753__auto__ = cljs.core.deref(self__.curr_xhr_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar x = temp__5753__auto__;\nreturn x.abort();\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__97485 = opts;\nvar map__97485__$1 = cljs.core.__destructure_map(map__97485);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97485__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97485__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97485__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar csrf_token = new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_));\nvar G__97489_97881 = self__.url;\nvar G__97490_97882 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"post\",\"post\",269697687),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4160__auto__ = _QMARK_timeout_ms;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),csrf_token], null)], 0)),new cljs.core.Keyword(null,\"params\",\"params\",710516235),(function (){var ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,(cljs.core.truth_(_QMARK_cb_fn)?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):null));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252),ppstr], null)], 0));\n})()], null)], 0));\nvar G__97491_97883 = (function taoensso$sente$ajax_cb(p__97492){\nvar map__97493 = p__97492;\nvar map__97493__$1 = cljs.core.__destructure_map(map__97493);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97493__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97493__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nif(cljs.core.truth_(_QMARK_cb_fn)){\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)));\n} else {\nreturn null;\n}\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97434_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__97434_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}));\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)) : _QMARK_cb_fn.call(null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439)));\n} else {\nreturn null;\n}\n}\n} else {\nvar content = _QMARK_content;\nvar resp_ppstr = content;\nvar vec__97497 = taoensso.sente.unpack(self__.packer,resp_ppstr);\nvar resp_clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97497,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97497,(1),null);\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(resp_clj) : _QMARK_cb_fn.call(null,resp_clj));\n} else {\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(resp_clj,new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1377,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",resp_clj], null);\n}),null)),null,-118573489);\n} else {\n}\n}\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97435_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__97435_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n}));\n}\n});\n(taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__97489_97881,G__97490_97882,G__97491_97883) : taoensso.sente.ajax_lite.call(null,G__97489_97881,G__97490_97882,G__97491_97883));\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}\n}));\n\n(taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});\nvar poll_fn = (function taoensso$sente$poll_fn(retry_count){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1387,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"async-poll-for-update!\"], null);\n}),null)),null,-1893330891);\n\nif(have_handle_QMARK_()){\nvar retry_fn = (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = (retry_count + (1));\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1395,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n}),null)),null,-551488762);\n\ngoog.global.setTimeout((function (){\nreturn taoensso$sente$poll_fn(retry_count_STAR_);\n}),backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97436_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__97436_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n}));\n} else {\nreturn null;\n}\n});\nreturn cljs.core.reset_BANG_(self__.curr_xhr_,(function (){var G__97503 = self__.url;\nvar G__97504 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"get\",\"get\",1683182755),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id], null),(cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093),true], null))], 0)),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0))], null)], 0));\nvar G__97505 = (function taoensso$sente$poll_fn_$_ajax_cb(p__97506){\nvar map__97507 = p__97506;\nvar map__97507__$1 = cljs.core.__destructure_map(map__97507);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97507__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97507__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nreturn taoensso$sente$poll_fn((0));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97437_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__97437_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}));\n\nreturn retry_fn();\n\n}\n} else {\nvar content = _QMARK_content;\nvar ppstr = content;\nvar vec__97508 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97508,(0),null);\nvar handshake_QMARK_ = taoensso.sente.handshake_QMARK_(clj);\nif(handshake_QMARK_){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),chsk__$1,clj);\n} else {\n}\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,(function (p1__97438_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__97438_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n}));\n\ntaoensso$sente$poll_fn((0));\n\nif(handshake_QMARK_){\nreturn null;\n} else {\nvar or__4160__auto__ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)))?(function (){\nif(cljs.core.truth_(cljs.core.deref(taoensso.sente.debug_mode_QMARK__))){\ntaoensso.sente.receive_buffered_evs_BANG_(self__.chs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"debug\",\"timeout\",\"debug/timeout\",309499949)], null)], null));\n} else {\n}\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});\nreturn (taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__97503,G__97504,G__97505) : taoensso.sente.ajax_lite.call(null,G__97503,G__97504,G__97505));\n})());\n} else {\nreturn null;\n}\n});\npoll_fn((0));\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChAjaxSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"ajax-opts\",\"ajax-opts\",1122292418,null),new cljs.core.Symbol(null,\"curr-xhr_\",\"curr-xhr_\",321757831,null)], null);\n}));\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = (function (this__4458__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAjaxSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = (function (this__4458__auto__,writer__4459__auto__){\nreturn cljs.core._write(writer__4459__auto__,\"taoensso.sente/ChAjaxSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChAjaxSocket.\n */\ntaoensso.sente.__GT_ChAjaxSocket = (function taoensso$sente$__GT_ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_){\nreturn (new taoensso.sente.ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAjaxSocket = (function taoensso$sente$map__GT_ChAjaxSocket(G__97443){\nvar extmap__4454__auto__ = (function (){var G__97511 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__97443,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], 0));\nif(cljs.core.record_QMARK_(G__97443)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__97511);\n} else {\nreturn G__97511;\n}\n})();\nreturn (new taoensso.sente.ChAjaxSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109).cljs$core$IFn$_invoke$arity$1(G__97443),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696).cljs$core$IFn$_invoke$arity$1(G__97443),null,cljs.core.not_empty(extmap__4454__auto__),null));\n});\n\ntaoensso.sente.new_ChAjaxSocket = (function taoensso$sente$new_ChAjaxSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAjaxSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAutoSocket = (function (ws_chsk_opts,ajax_chsk_opts,state_,impl_,__meta,__extmap,__hash){\nthis.ws_chsk_opts = ws_chsk_opts;\nthis.ajax_chsk_opts = ajax_chsk_opts;\nthis.state_ = state_;\nthis.impl_ = impl_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4415__auto__,k__4416__auto__){\nvar self__ = this;\nvar this__4415__auto____$1 = this;\nreturn this__4415__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4416__auto__,null);\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4417__auto__,k97513,else__4418__auto__){\nvar self__ = this;\nvar this__4417__auto____$1 = this;\nvar G__97517 = k97513;\nvar G__97517__$1 = (((G__97517 instanceof cljs.core.Keyword))?G__97517.fqn:null);\nswitch (G__97517__$1) {\ncase \"ws-chsk-opts\":\nreturn self__.ws_chsk_opts;\n\nbreak;\ncase \"ajax-chsk-opts\":\nreturn self__.ajax_chsk_opts;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"impl_\":\nreturn self__.impl_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k97513,else__4418__auto__);\n\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4434__auto__,f__4435__auto__,init__4436__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4437__auto__,p__97518){\nvar vec__97519 = p__97518;\nvar k__4438__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97519,(0),null);\nvar v__4439__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97519,(1),null);\nreturn (f__4435__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4435__auto__.cljs$core$IFn$_invoke$arity$3(ret__4437__auto__,k__4438__auto__,v__4439__auto__) : f__4435__auto__.call(null,ret__4437__auto__,k__4438__auto__,v__4439__auto__));\n}),init__4436__auto__,this__4434__auto____$1);\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4429__auto__,writer__4430__auto__,opts__4431__auto__){\nvar self__ = this;\nvar this__4429__auto____$1 = this;\nvar pr_pair__4432__auto__ = (function (keyval__4433__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4431__auto__,keyval__4433__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4430__auto__,pr_pair__4432__auto__,\"#taoensso.sente.ChAutoSocket{\",\", \",\"}\",opts__4431__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_],null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__97512){\nvar self__ = this;\nvar G__97512__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__97512__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4413__auto__){\nvar self__ = this;\nvar this__4413__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4410__auto__){\nvar self__ = this;\nvar this__4410__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4419__auto__){\nvar self__ = this;\nvar this__4419__auto____$1 = this;\nreturn (4 + cljs.core.count(self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4411__auto__){\nvar self__ = this;\nvar this__4411__auto____$1 = this;\nvar h__4273__auto__ = self__.__hash;\nif((!((h__4273__auto__ == null)))){\nreturn h__4273__auto__;\n} else {\nvar h__4273__auto____$1 = (function (coll__4412__auto__){\nreturn (-1193508708 ^ cljs.core.hash_unordered_coll(coll__4412__auto__));\n})(this__4411__auto____$1);\n(self__.__hash = h__4273__auto____$1);\n\nreturn h__4273__auto____$1;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this97514,other97515){\nvar self__ = this;\nvar this97514__$1 = this;\nreturn (((!((other97515 == null)))) && ((this97514__$1.constructor === other97515.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97514__$1.ws_chsk_opts,other97515.ws_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97514__$1.ajax_chsk_opts,other97515.ajax_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97514__$1.state_,other97515.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97514__$1.impl_,other97515.impl_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this97514__$1.__extmap,other97515.__extmap)));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4424__auto__,k__4425__auto__){\nvar self__ = this;\nvar this__4424__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),null], null), null),k__4425__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4424__auto____$1),self__.__meta),k__4425__auto__);\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4425__auto__)),null));\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4422__auto__,k__4423__auto__,G__97512){\nvar self__ = this;\nvar this__4422__auto____$1 = this;\nvar pred__97522 = cljs.core.keyword_identical_QMARK_;\nvar expr__97523 = k__4423__auto__;\nif(cljs.core.truth_((pred__97522.cljs$core$IFn$_invoke$arity$2 ? pred__97522.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__97523) : pred__97522.call(null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),expr__97523)))){\nreturn (new taoensso.sente.ChAutoSocket(G__97512,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97522.cljs$core$IFn$_invoke$arity$2 ? pred__97522.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__97523) : pred__97522.call(null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),expr__97523)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,G__97512,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97522.cljs$core$IFn$_invoke$arity$2 ? pred__97522.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__97523) : pred__97522.call(null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),expr__97523)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,G__97512,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__97522.cljs$core$IFn$_invoke$arity$2 ? pred__97522.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__97523) : pred__97522.call(null,new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),expr__97523)))){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,G__97512,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4423__auto__,G__97512),null));\n}\n}\n}\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4427__auto__){\nvar self__ = this;\nvar this__4427__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_,null))], null),self__.__extmap));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4414__auto__,G__97512){\nvar self__ = this;\nvar this__4414__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,G__97512,self__.__extmap,self__.__hash));\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4420__auto__,entry__4421__auto__){\nvar self__ = this;\nvar this__4420__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4421__auto__)){\nreturn this__4420__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4421__auto__,(0)),cljs.core._nth(entry__4421__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4420__auto____$1,entry__4421__auto__);\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL);\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5753__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar impl = temp__5753__auto__;\nreturn taoensso.sente._chsk_disconnect_BANG_(impl,reason);\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5753__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar impl = temp__5753__auto__;\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5751__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar impl = temp__5751__auto__;\nreturn taoensso.sente._chsk_send_BANG_(impl,ev,opts);\n} else {\nvar map__97525 = opts;\nvar map__97525__$1 = cljs.core.__destructure_map(map__97525);\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97525__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n}\n}));\n\n(taoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar ajax_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ajax_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ws_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ws_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ajax_conn_BANG_ = (function (){\ncljs.core.remove_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080));\n\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\nvar ws_conn_BANG_ = (function (){\nvar downgraded_QMARK___97885 = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.core.add_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080),(function (_,___$1,old_state,new_state){\nvar temp__5753__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar impl = temp__5753__auto__;\nvar temp__5753__auto____$1 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(impl);\nif(cljs.core.truth_(temp__5753__auto____$1)){\nvar ever_opened_QMARK__ = temp__5753__auto____$1;\nif(cljs.core.truth_(cljs.core.deref(ever_opened_QMARK__))){\nreturn null;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502).cljs$core$IFn$_invoke$arity$1(new_state))){\nif(cljs.core.compare_and_set_BANG_(downgraded_QMARK___97885,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1528,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Permanently downgrading :auto chsk -> :ajax\"], null);\n}),null)),null,329365218);\n\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720));\n\nreturn cljs.core.reset_BANG_(self__.impl_,ajax_conn_BANG_());\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}));\n\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\ncljs.core.reset_BANG_(self__.impl_,(function (){var or__4160__auto__ = ws_conn_BANG_();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn ajax_conn_BANG_();\n}\n})());\n\nreturn chsk__$1;\n}));\n\n(taoensso.sente.ChAutoSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-349638577,null),new cljs.core.Symbol(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",-1051844442,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"impl_\",\"impl_\",-1435617590,null)], null);\n}));\n\n(taoensso.sente.ChAutoSocket.cljs$lang$type = true);\n\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrSeq = (function (this__4458__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAutoSocket\",null,(1),null));\n}));\n\n(taoensso.sente.ChAutoSocket.cljs$lang$ctorPrWriter = (function (this__4458__auto__,writer__4459__auto__){\nreturn cljs.core._write(writer__4459__auto__,\"taoensso.sente/ChAutoSocket\");\n}));\n\n/**\n * Positional factory function for taoensso.sente/ChAutoSocket.\n */\ntaoensso.sente.__GT_ChAutoSocket = (function taoensso$sente$__GT_ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_){\nreturn (new taoensso.sente.ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAutoSocket = (function taoensso$sente$map__GT_ChAutoSocket(G__97516){\nvar extmap__4454__auto__ = (function (){var G__97526 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__97516,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], 0));\nif(cljs.core.record_QMARK_(G__97516)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__97526);\n} else {\nreturn G__97526;\n}\n})();\nreturn (new taoensso.sente.ChAutoSocket(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104).cljs$core$IFn$_invoke$arity$1(G__97516),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327).cljs$core$IFn$_invoke$arity$1(G__97516),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__97516),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179).cljs$core$IFn$_invoke$arity$1(G__97516),null,cljs.core.not_empty(extmap__4454__auto__),null));\n});\n\ntaoensso.sente.new_ChAutoSocket = (function taoensso$sente$new_ChAutoSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAutoSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\ntaoensso.sente.get_chsk_url = (function taoensso$sente$get_chsk_url(protocol,host,path,type){\nvar protocol__$1 = (function (){var G__97527 = protocol;\nvar G__97527__$1 = (((G__97527 instanceof cljs.core.Keyword))?G__97527.fqn:null);\nswitch (G__97527__$1) {\ncase \"http\":\nreturn \"http:\";\n\nbreak;\ncase \"https\":\nreturn \"https:\";\n\nbreak;\ndefault:\nreturn protocol;\n\n}\n})();\nvar protocol__$2 = (function (){var e = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__97529 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"https:\",null,\"http:\",null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__97529) : taoensso.truss.impl.set_STAR_.call(null,G__97529));\n})(),x);\n})(protocol__$1)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97528){if((e97528 instanceof Error)){\nvar e = e97528;\nreturn e;\n} else {\nthrow e97528;\n\n}\n}})();\nif((e == null)){\nreturn protocol__$1;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1547,\"([:el #{\\\"https:\\\" \\\"http:\\\"}] protocol)\",protocol__$1,e,null);\n}\n})();\nvar protocol__$3 = (function (){var G__97530 = type;\nvar G__97530__$1 = (((G__97530 instanceof cljs.core.Keyword))?G__97530.fqn:null);\nswitch (G__97530__$1) {\ncase \"ajax\":\nreturn protocol__$2;\n\nbreak;\ncase \"ws\":\nvar G__97531 = protocol__$2;\nswitch (G__97531) {\ncase \"https:\":\nreturn \"wss:\";\n\nbreak;\ncase \"http:\":\nreturn \"ws:\";\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__97531)].join('')));\n\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__97530__$1)].join('')));\n\n}\n})();\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$3),\"//\",taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([host,path], 0))].join('');\n});\n/**\n * Returns nil on failure, or a map with keys:\n *     :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n *              ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n *     :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n *     :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n *     :chsk    ; IChSocket implementer. You can usu. ignore this.\n * \n *   Common options:\n *     :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n *     :protocol       ; Server protocol, e/o #{:http :https}.\n *     :host           ; Server host (defaults to current page's host).\n *     :port           ; Server port (defaults to current page's port).\n *     :params         ; Map of any params to incl. in chsk Ring requests (handy\n *                     ; for application-level auth, etc.).\n *     :headers        ; Map of additional headers to include in the initiating request\n *                     ; (currently only for Java clients).\n *     :packer         ; :edn (default), or an IPacker implementation.\n *     :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n *     :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n *     :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to server's :ws-kalive-ms.\n */\ntaoensso.sente.make_channel_socket_client_BANG_ = (function taoensso$sente$make_channel_socket_client_BANG_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___97889 = arguments.length;\nvar i__4772__auto___97890 = (0);\nwhile(true){\nif((i__4772__auto___97890 < len__4771__auto___97889)){\nargs__4777__auto__.push((arguments[i__4772__auto___97890]));\n\nvar G__97891 = (i__4772__auto___97890 + (1));\ni__4772__auto___97890 = G__97891;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((2) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4778__auto__);\n});\n\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (path,_QMARK_csrf_token,p__97535){\nvar vec__97536 = p__97535;\nvar map__97539 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97536,(0),null);\nvar map__97539__$1 = cljs.core.__destructure_map(map__97539);\nvar opts = map__97539__$1;\nvar ajax_opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97539__$1,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109));\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__97539__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__97539__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),(function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"client-uuid\",\"client-uuid\",-1717531965).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\n}\n})());\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97539__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__97539__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97539__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__97539__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492));\nvar port = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97539__$1,new cljs.core.Keyword(null,\"port\",\"port\",1534937262));\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97539__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97539__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__97539__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((2048)));\nvar backoff_ms_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__97539__$1,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),taoensso.encore.exp_backoff);\nvar wrap_recv_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__97539__$1,new cljs.core.Keyword(null,\"wrap-recv-evs?\",\"wrap-recv-evs?\",-1996694153),true);\nvar _deprecated_more_opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97536,(1),null);\nvar e_97892 = (function (){try{if((function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__97541 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null,new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__97541) : taoensso.truss.impl.set_STAR_.call(null,G__97541));\n})(),x);\n})(type)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97540){if((e97540 instanceof Error)){\nvar e_97892 = e97540;\nreturn e_97892;\n} else {\nthrow e97540;\n\n}\n}})();\nif((e_97892 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1591,\"([:in #{:ws :ajax :auto}] type)\",type,e_97892,null);\n}\n\nvar e_97893 = (function (){try{if(taoensso.encore.nblank_str_QMARK_(client_id)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97542){if((e97542 instanceof Error)){\nvar e_97893 = e97542;\nreturn e_97893;\n} else {\nthrow e97542;\n\n}\n}})();\nif((e_97893 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1592,\"(enc/nblank-str? client-id)\",client_id,e_97893,null);\n}\n\nif((!((_deprecated_more_opts == null)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1594,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"], null);\n}),null)),null,-1257333982);\n} else {\n}\n\nif(cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\"lp-timeout\",\"lp-timeout\",1149461302))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1595,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"], null);\n}),null)),null,1039733031);\n} else {\n}\n\nif((((!(typeof _QMARK_csrf_token === 'string'))) || (clojure.string.blank_QMARK_(_QMARK_csrf_token)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1598,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"], null);\n}),null)),null,-1648925047);\n} else {\n}\n\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar vec__97543 = (function (){var win_loc = taoensso.encore.get_win_loc();\nvar path__$1 = (function (){var z = (function (){try{var or__4160__auto__ = path;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528).cljs$core$IFn$_invoke$arity$1(win_loc);\n}\n}catch (e97546){if((e97546 instanceof Error)){\nvar e = e97546;\nreturn (new taoensso.truss.impl.WrappedError(e));\n} else {\nthrow e97546;\n\n}\n}})();\nvar e = (function (){try{if((z instanceof taoensso.truss.impl.WrappedError)){\nreturn z;\n} else {\nif(taoensso.truss.impl.some_QMARK_(z)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}\n}catch (e97547){if((e97547 instanceof Error)){\nvar e = e97547;\nreturn e;\n} else {\nthrow e97547;\n\n}\n}})();\nif((e == null)){\nreturn z;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1606,\"(taoensso.truss.impl/some? (or path (:pathname win-loc)))\",z,e,null);\n}\n})();\nvar temp__5751__auto__ = new cljs.core.Keyword(null,\"chsk-url-fn\",\"chsk-url-fn\",1968894294).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar f = temp__5751__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)) : f.call(null,path__$1,win_loc,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443))),(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)) : f.call(null,path__$1,win_loc,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)))], null);\n} else {\nvar protocol__$1 = (function (){var or__4160__auto__ = protocol;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(win_loc);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"http\",\"http\",382524695);\n}\n}\n})();\nvar host__$1 = (cljs.core.truth_(host)?(cljs.core.truth_(port)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join(''):host):(cljs.core.truth_(port)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"hostname\",\"hostname\",2105669933).cljs$core$IFn$_invoke$arity$1(win_loc)),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join(''):new cljs.core.Keyword(null,\"host\",\"host\",-1558485167).cljs$core$IFn$_invoke$arity$1(win_loc)));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)),taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549))], null);\n}\n})();\nvar ws_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97543,(0),null);\nvar ajax_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97543,(1),null);\nvar private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((128))),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((10))),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537),(function (){var buf = cljs.core.async.sliding_buffer((512));\nif(cljs.core.truth_(wrap_recv_evs_QMARK_)){\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(buf,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"recv\",\"chsk/recv\",561097091),ev], null);\n})));\n} else {\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf);\n}\n})()], null);\nvar common_chsk_opts = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),private_chs,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),headers,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),packer__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),ws_kalive_ms], null);\nvar ws_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ws_url,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar ajax_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ajax_url,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),ajax_opts,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar auto_chsk_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),ws_chsk_opts,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),ajax_chsk_opts], null);\nvar _QMARK_chsk = taoensso.sente._chsk_connect_BANG_((function (){var G__97548 = type;\nvar G__97548__$1 = (((G__97548 instanceof cljs.core.Keyword))?G__97548.fqn:null);\nswitch (G__97548__$1) {\ncase \"ws\":\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"ajax\":\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"auto\":\nreturn taoensso.sente.new_ChAutoSocket(auto_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__97548__$1)].join('')));\n\n}\n})());\nvar temp__5751__auto__ = _QMARK_chsk;\nif(cljs.core.truth_(temp__5751__auto__)){\nvar chsk = temp__5751__auto__;\nvar chsk_state_ = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk);\nvar internal_ch = new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs);\nvar send_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(taoensso.sente.chsk_send_BANG_,chsk);\nvar ev_ch = cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(private_chs)], null),recv_buf_or_n);\nvar ev_msg_ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2((1),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (ev){\nvar vec__97549 = taoensso.sente.as_event(ev);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97549,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97549,(1),null);\nvar ev__$1 = vec__97549;\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),internal_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),chsk_state_,new cljs.core.Keyword(null,\"event\",\"event\",301435442),ev__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null);\n})));\ncljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(ev_ch,ev_msg_ch);\n\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"chsk\",\"chsk\",-863703081),chsk,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ev_msg_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk)], null);\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1700,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to create channel socket\"], null);\n}),null)),null,-1663231414);\n}\n}));\n\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = (function (seq97532){\nvar G__97533 = cljs.core.first(seq97532);\nvar seq97532__$1 = cljs.core.next(seq97532);\nvar G__97534 = cljs.core.first(seq97532__$1);\nvar seq97532__$2 = cljs.core.next(seq97532__$1);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__97533,G__97534,seq97532__$2);\n}));\n\ntaoensso.sente._start_chsk_router_BANG_ = (function taoensso$sente$_start_chsk_router_BANG_(server_QMARK_,ch_recv,event_msg_handler,opts){\nvar map__97552 = opts;\nvar map__97552__$1 = cljs.core.__destructure_map(map__97552);\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97552__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97552__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97552__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nvar ch_ctrl = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar execute1 = (function (f){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});\nvar c__90682__auto___97895 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__90683__auto__ = (function (){var switch__90611__auto__ = (function (state_97580){\nvar state_val_97581 = (state_97580[(1)]);\nif((state_val_97581 === (1))){\nvar state_97580__$1 = state_97580;\nvar statearr_97582_97896 = state_97580__$1;\n(statearr_97582_97896[(2)] = null);\n\n(statearr_97582_97896[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97581 === (2))){\nvar inst_97557 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_97558 = [ch_recv,ch_ctrl];\nvar inst_97559 = (new cljs.core.PersistentVector(null,2,(5),inst_97557,inst_97558,null));\nvar state_97580__$1 = state_97580;\nreturn cljs.core.async.ioc_alts_BANG_(state_97580__$1,(4),inst_97559);\n} else {\nif((state_val_97581 === (3))){\nvar inst_97578 = (state_97580[(2)]);\nvar state_97580__$1 = state_97580;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_97580__$1,inst_97578);\n} else {\nif((state_val_97581 === (4))){\nvar inst_97566 = (state_97580[(7)]);\nvar inst_97561 = (state_97580[(8)]);\nvar inst_97563 = (state_97580[(9)]);\nvar inst_97562 = (state_97580[(10)]);\nvar inst_97561__$1 = (state_97580[(2)]);\nvar inst_97562__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_97561__$1,(0),null);\nvar inst_97563__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_97561__$1,(1),null);\nvar inst_97564 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_97563__$1,ch_ctrl);\nvar inst_97565 = (inst_97562__$1 == null);\nvar inst_97566__$1 = ((inst_97564) || (inst_97565));\nvar state_97580__$1 = (function (){var statearr_97583 = state_97580;\n(statearr_97583[(7)] = inst_97566__$1);\n\n(statearr_97583[(8)] = inst_97561__$1);\n\n(statearr_97583[(9)] = inst_97563__$1);\n\n(statearr_97583[(10)] = inst_97562__$1);\n\nreturn statearr_97583;\n})();\nif(cljs.core.truth_(inst_97566__$1)){\nvar statearr_97584_97897 = state_97580__$1;\n(statearr_97584_97897[(1)] = (5));\n\n} else {\nvar statearr_97585_97898 = state_97580__$1;\n(statearr_97585_97898[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97581 === (5))){\nvar state_97580__$1 = state_97580;\nvar statearr_97586_97899 = state_97580__$1;\n(statearr_97586_97899[(2)] = null);\n\n(statearr_97586_97899[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97581 === (6))){\nvar inst_97566 = (state_97580[(7)]);\nvar inst_97561 = (state_97580[(8)]);\nvar inst_97563 = (state_97580[(9)]);\nvar inst_97562 = (state_97580[(10)]);\nvar inst_97570 = cljs.core.__destructure_map(inst_97562);\nvar inst_97571 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_97570,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar inst_97572 = (function (){var vec__97554 = inst_97561;\nvar v = inst_97562;\nvar p = inst_97563;\nvar stop_QMARK_ = inst_97566;\nvar map__97569 = inst_97570;\nvar event_msg = inst_97570;\nvar event = inst_97571;\nreturn (function (){\ntry{if(cljs.core.truth_(trace_evs_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1727,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Pre-handler event: %s\",event], null);\n}),null)),null,419036772);\n} else {\n}\n\nvar G__97589 = (cljs.core.truth_(server_QMARK_)?(function (){var e = (function (){try{if(taoensso.sente.server_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97590){if((e97590 instanceof Error)){\nvar e = e97590;\nreturn e;\n} else {\nthrow e97590;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1730,\"(server-event-msg? event-msg)\",event_msg,e,null);\n}\n})():(function (){var e = (function (){try{if(taoensso.sente.client_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e97591){if((e97591 instanceof Error)){\nvar e = e97591;\nreturn e;\n} else {\nthrow e97591;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1731,\"(client-event-msg? event-msg)\",event_msg,e,null);\n}\n})());\nreturn (event_msg_handler.cljs$core$IFn$_invoke$arity$1 ? event_msg_handler.cljs$core$IFn$_invoke$arity$1(G__97589) : event_msg_handler.call(null,G__97589));\n}catch (e97587){var e1 = e97587;\ntry{var temp__5751__auto__ = error_handler;\nif(cljs.core.truth_(temp__5751__auto__)){\nvar eh = temp__5751__auto__;\nreturn (error_handler.cljs$core$IFn$_invoke$arity$2 ? error_handler.cljs$core$IFn$_invoke$arity$2(e1,event_msg) : error_handler.call(null,e1,event_msg));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1736,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e1,\"Chsk router `event-msg-handler` error: %s\",event], null);\n}),null)),null,-1557059679);\n}\n}catch (e97588){var e2 = e97588;\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1737,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e2,\"Chsk router `error-handler` error: %s\",event], null);\n}),null)),null,284507243);\n}}});\n})();\nvar inst_97573 = execute1(inst_97572);\nvar state_97580__$1 = (function (){var statearr_97592 = state_97580;\n(statearr_97592[(11)] = inst_97573);\n\nreturn statearr_97592;\n})();\nvar statearr_97593_97900 = state_97580__$1;\n(statearr_97593_97900[(2)] = null);\n\n(statearr_97593_97900[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_97581 === (7))){\nvar inst_97576 = (state_97580[(2)]);\nvar state_97580__$1 = state_97580;\nvar statearr_97594_97901 = state_97580__$1;\n(statearr_97594_97901[(2)] = inst_97576);\n\n(statearr_97594_97901[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto__ = null;\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto____0 = (function (){\nvar statearr_97595 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_97595[(0)] = taoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto__);\n\n(statearr_97595[(1)] = (1));\n\nreturn statearr_97595;\n});\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto____1 = (function (state_97580){\nwhile(true){\nvar ret_value__90613__auto__ = (function (){try{while(true){\nvar result__90614__auto__ = switch__90611__auto__(state_97580);\nif(cljs.core.keyword_identical_QMARK_(result__90614__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__90614__auto__;\n}\nbreak;\n}\n}catch (e97596){var ex__90615__auto__ = e97596;\nvar statearr_97597_97902 = state_97580;\n(statearr_97597_97902[(2)] = ex__90615__auto__);\n\n\nif(cljs.core.seq((state_97580[(4)]))){\nvar statearr_97598_97903 = state_97580;\n(statearr_97598_97903[(1)] = cljs.core.first((state_97580[(4)])));\n\n} else {\nthrow ex__90615__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__90613__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__97904 = state_97580;\nstate_97580 = G__97904;\ncontinue;\n} else {\nreturn ret_value__90613__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto__ = function(state_97580){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto____1.call(this,state_97580);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto____0;\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto____1;\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__90612__auto__;\n})()\n})();\nvar state__90684__auto__ = (function (){var statearr_97599 = f__90683__auto__();\n(statearr_97599[(6)] = c__90682__auto___97895);\n\nreturn statearr_97599;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__90684__auto__);\n}));\n\n\nreturn (function taoensso$sente$_start_chsk_router_BANG__$_stop_BANG_(){\nreturn cljs.core.async.close_BANG_(ch_ctrl);\n});\n});\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n * \n *   Or for simple automatic future-based threading of every request, enable\n *   the `:simple-auto-threading?` opt (disabled by default).\n */\ntaoensso.sente.start_server_chsk_router_BANG_ = (function taoensso$sente$start_server_chsk_router_BANG_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___97905 = arguments.length;\nvar i__4772__auto___97906 = (0);\nwhile(true){\nif((i__4772__auto___97906 < len__4771__auto___97905)){\nargs__4777__auto__.push((arguments[i__4772__auto___97906]));\n\nvar G__97907 = (i__4772__auto___97906 + (1));\ni__4772__auto___97906 = G__97907;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((2) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4778__auto__);\n});\n\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__97603){\nvar vec__97604 = p__97603;\nvar map__97607 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97604,(0),null);\nvar map__97607__$1 = cljs.core.__destructure_map(map__97607);\nvar opts = map__97607__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97607__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97607__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97607__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nreturn taoensso.sente._start_chsk_router_BANG_(new cljs.core.Keyword(null,\"server\",\"server\",1499190120),ch_recv,event_msg_handler,opts);\n}));\n\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = (function (seq97600){\nvar G__97601 = cljs.core.first(seq97600);\nvar seq97600__$1 = cljs.core.next(seq97600);\nvar G__97602 = cljs.core.first(seq97600__$1);\nvar seq97600__$2 = cljs.core.next(seq97600__$1);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__97601,G__97602,seq97600__$2);\n}));\n\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n */\ntaoensso.sente.start_client_chsk_router_BANG_ = (function taoensso$sente$start_client_chsk_router_BANG_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___97908 = arguments.length;\nvar i__4772__auto___97909 = (0);\nwhile(true){\nif((i__4772__auto___97909 < len__4771__auto___97908)){\nargs__4777__auto__.push((arguments[i__4772__auto___97909]));\n\nvar G__97910 = (i__4772__auto___97909 + (1));\ni__4772__auto___97909 = G__97910;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((2) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4778__auto__);\n});\n\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__97611){\nvar vec__97612 = p__97611;\nvar map__97615 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__97612,(0),null);\nvar map__97615__$1 = cljs.core.__destructure_map(map__97615);\nvar opts = map__97615__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97615__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97615__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nreturn taoensso.sente._start_chsk_router_BANG_(cljs.core.not(new cljs.core.Keyword(null,\"server\",\"server\",1499190120)),ch_recv,event_msg_handler,opts);\n}));\n\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = (function (seq97608){\nvar G__97609 = cljs.core.first(seq97608);\nvar seq97608__$1 = cljs.core.next(seq97608);\nvar G__97610 = cljs.core.first(seq97608__$1);\nvar seq97608__$2 = cljs.core.next(seq97608__$1);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__97609,G__97610,seq97608__$2);\n}));\n\ntaoensso.sente.event_msg_QMARK_ = taoensso.sente.client_event_msg_QMARK_;\n/**\n * Platform-specific alias for `make-channel-socket-server!` or\n *   `make-channel-socket-client!`. Please see the appropriate aliased fn\n * docstring for details.\n */\ntaoensso.sente.make_channel_socket_BANG_ = taoensso.sente.make_channel_socket_client_BANG_;\n/**\n * Platform-specific alias for `start-server-chsk-router!` or\n *   `start-client-chsk-router!`. Please see the appropriate aliased fn\n *   docstring for details.\n */\ntaoensso.sente.start_chsk_router_BANG_ = taoensso.sente.start_client_chsk_router_BANG_;\n/**\n * DEPRECATED: Please use `start-chsk-router!` instead\n */\ntaoensso.sente.start_chsk_router_loop_BANG_ = (function taoensso$sente$start_chsk_router_loop_BANG_(event_handler,ch_recv){\nreturn taoensso.sente.start_client_chsk_router_BANG_(ch_recv,(function (ev_msg){\nvar G__97616 = new cljs.core.Keyword(null,\"event\",\"event\",301435442).cljs$core$IFn$_invoke$arity$1(ev_msg);\nvar G__97617 = new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861).cljs$core$IFn$_invoke$arity$1(ev_msg);\nreturn (event_handler.cljs$core$IFn$_invoke$arity$2 ? event_handler.cljs$core$IFn$_invoke$arity$2(G__97616,G__97617) : event_handler.call(null,G__97616,G__97617));\n}));\n});\n\n/**\n * DEPRECATED. Please use `timbre/set-level!` instead\n */\ntaoensso.sente.set_logging_level_BANG_ = taoensso.timbre.set_level_BANG_;\n\n/**\n * DEPRECATED: Please use `ajax-lite` instead\n */\ntaoensso.sente.ajax_call = taoensso.encore.ajax_lite;\n\n/**\n * DEPRECATED\n */\ntaoensso.sente.default_chsk_url_fn = (function taoensso$sente$default_chsk_url_fn(path,p__97618,websocket_QMARK_){\nvar map__97619 = p__97618;\nvar map__97619__$1 = cljs.core.__destructure_map(map__97619);\nvar location = map__97619__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97619__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97619__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar pathname = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__97619__$1,new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528));\nvar protocol__$1 = (cljs.core.truth_(websocket_QMARK_)?((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol,\"https:\"))?\"wss:\":\"ws:\"):protocol);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$1),\"//\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4160__auto__ = path;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn pathname;\n}\n})())].join('');\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","~:file","taoensso/sente.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$elide-require","~$taoensso.sente","~$warnf","~$taoensso.timbre","~$go","~$cljs.core.async.macros","~$have","~$taoensso.encore","~$go-loop","^P","~$have!","^R","~$have?","^R","~$debugf","^N","~$tracef","^N","~$infof","^N","~$errorf","^N"],"~:excludes",["~#set",[]],"~:macros",["^ "],"~:name","^L","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$timbre","^N","~$interfaces","~$taoensso.sente.interfaces","~$async","~$cljs.core.async","~$cljs.core","^1;","~$goog","^1<","^18","^18","^1:","^1:","~$enc","^R","^N","^N","~$str","~$clojure.string","^1?","^1?","^R","^R"],"~:seen",["^[",["~:require","~:require-macros"]],"~:uses",["^ ","~$<!","^1:","~$>!","^1:","~$put!","^1:","~$chan","^1:","~$format","^R","~$swap-in!","^R","~$reset-in!","^R","~$swapped","^R"],"^1B",["^ ","^P","^P","^16","^N","^19","^1:","^1;","^1;","^1:","^1:","^L","^L","^1=","^R","^N","^N","~$asyncm","^P","^R","^R","~$sente-macros","^L"],"~:form",["~#list",["~$ns","^L","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^1O",["^1A",["^1?","~:as","^1>"],["^1:","^1Q","^19","~:refer",["^1O",["^1D","^1E","^1F","^1G"]]],["^R","^1Q","^1=","^1R",["^1O",["^1H","^1I","^1J","^1K"]],"~:refer-macros",["^1O",["^Q","^T","^U"]]],["^N","^1Q","^16","^1S",["^1O",["^W","^V","^X","^M","^Y"]]],["^18","^1Q","^17"]]],["^1O",["^1B",["^P","^1Q","^1L","^1R",["^1O",["^O","^S"]]],["^L","^1Q","^1M","^1R",["^1O",["^K"]]]]]]],"~:flags",["^ ","^1A",["^[",[]],"^1B",["^[",[]]],"~:js-deps",["^ "],"~:deps",["^1<","^1;","^1?","^1:","^R","^N","^18"]],"^13","^L","~:resource-id",["~:shadow.build.classpath/resource","taoensso/sente.cljc"],"~:compiled-at",1626506031865,"~:resource-name","taoensso/sente.cljc","~:warnings",[],"~:source","(ns taoensso.sente\n  \"Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \\\"socket\\\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.\"\n\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n\n  #?(:clj\n     (:require\n      [clojure.string :as str]\n      [clojure.core.async :as async :refer (<! <!! >! >!! put! chan go go-loop)]\n      [taoensso.encore :as enc :refer (swap-in! reset-in! swapped have have! have?)]\n      [taoensso.timbre :as timbre :refer (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require\n      [clojure.string :as str]\n      [cljs.core.async :as async :refer (<! >! put! chan)]\n      [taoensso.encore :as enc :refer (format swap-in! reset-in! swapped)\n       :refer-macros (have have! have?)]\n      [taoensso.timbre :as timbre :refer-macros (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require-macros\n      [cljs.core.async.macros :as asyncm :refer (go go-loop)]\n      [taoensso.sente :as sente-macros :refer (elide-require)]))\n\n  #?(:clj\n     (:import\n      [org.java_websocket.client WebSocketClient])))\n\n(if (vector? taoensso.encore/encore-version)\n  (enc/assert-min-encore-version [2 105 0])\n  (enc/assert-min-encore-version  2.105))\n\n(def sente-version \"Useful for identifying client/server mismatch\"\n  [1 11 0])\n\n#?(:cljs (def ^:private node-target? (= *target* \"nodejs\")))\n\n;; (timbre/set-level! :trace) ; Uncomment for debugging\n(defonce debug-mode?_ (atom false))\n\n;;;; Events\n;; Clients & server both send `event`s and receive (i.e. route) `event-msg`s:\n;;   - `event`s have the same form client+server side,\n;;   - `event-msg`s have a similar but not identical form\n\n(defn- expected [expected x] {:expected expected :actual {:type (type x) :value x}})\n(defn validate-event\n  \"Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\"\n  [x]\n  (cond\n    (not (vector? x))        {:wrong-type   (expected :vector x)}\n    (not (#{1 2} (count x))) {:wrong-length (expected #{1 2}  x)}\n    :else\n    (let [[ev-id _] x]\n      (cond\n        (not (keyword? ev-id))  {:wrong-id-type   (expected :keyword            ev-id)}\n        (not (namespace ev-id)) {:unnamespaced-id (expected :namespaced-keyword ev-id)}\n        :else nil))))\n\n(defn assert-event\n  \"Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception.\"\n  [x]\n  (when-let [errs (validate-event x)]\n    (throw (ex-info \"Invalid event\" {:given x :errors errs}))))\n\n(defn event? \"Valid [ev-id ?ev-data] form?\" [x] (nil? (validate-event x)))\n(defn as-event [x]\n  (if-let [errs (validate-event x)]\n    ;; [:chsk/bad-event {:given x :errors errs}] ; Breaking change\n    [:chsk/bad-event x]\n    x))\n\n(defn client-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks>= #{:ch-recv :send-fn :state :event :id :?data} x)\n    (let [{:keys [ch-recv send-fn state event]} x]\n      (and\n        (enc/chan? ch-recv)\n        (ifn?      send-fn)\n        (enc/atom? state)\n        (event?    event)))))\n\n(defn server-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks>= #{:ch-recv :send-fn :connected-uids :send-buffers\n                :ring-req :client-id\n                :event :id :?data :?reply-fn :uid} x)\n    (let [{:keys [ch-recv send-fn connected-uids send-buffers\n                  ring-req client-id event ?reply-fn]} x]\n      (and\n        (enc/chan?       ch-recv)\n        (ifn?            send-fn)\n        (enc/atom?       connected-uids)\n        (enc/atom?       send-buffers)\n        (map?            ring-req)\n        (enc/nblank-str? client-id)\n        (event?          event)\n        (or (nil? ?reply-fn)\n            (ifn? ?reply-fn))))))\n\n(defn- put-server-event-msg>ch-recv!\n  \"All server `event-msg`s go through this\"\n  [ch-recv {:as ev-msg :keys [event ?reply-fn]}]\n  (let [[ev-id ev-?data :as valid-event] (as-event event)\n        ev-msg* (merge ev-msg {:event     valid-event\n                               :?reply-fn ?reply-fn\n                               :id        ev-id\n                               :?data     ev-?data})]\n    (if-not (server-event-msg? ev-msg*)\n      (warnf \"Bad ev-msg: %s\" ev-msg) ; Log 'n drop\n      (put! ch-recv ev-msg*))))\n\n;;; Note that cb replys need _not_ be `event` form!\n#?(:cljs (defn cb-error? [cb-reply-clj] (#{:chsk/closed :chsk/timeout :chsk/error} cb-reply-clj)))\n#?(:cljs (defn cb-success? [cb-reply-clj] (not (cb-error? cb-reply-clj))))\n\n;;;; Packing\n;; * Client<->server payloads are arbitrary Clojure vals (cb replies or events).\n;; * Payloads are packed for client<->server transit.\n;; * Packing includes ->str encoding, and may incl. wrapping to carry cb info.\n\n(defn- unpack \"prefixed-pstr->[clj ?cb-uuid]\"\n  [packer prefixed-pstr]\n  (have? string? prefixed-pstr)\n  (let [wrapped? (enc/str-starts-with? prefixed-pstr \"+\")\n        pstr     (subs prefixed-pstr 1)\n        clj\n        (try\n          (interfaces/unpack packer pstr)\n          (catch #?(:clj Throwable :cljs :default) t\n            (debugf \"Bad package: %s (%s)\" pstr t)\n            [:chsk/bad-package pstr]))\n\n        [clj ?cb-uuid] (if wrapped? clj [clj nil])\n        ?cb-uuid (if (= 0 ?cb-uuid) :ajax-cb ?cb-uuid)]\n\n    (tracef \"Unpacking: %s -> %s\" prefixed-pstr [clj ?cb-uuid])\n    [clj ?cb-uuid]))\n\n(defn- pack \"clj->prefixed-pstr\"\n  ([packer clj]\n   (let [;; \"-\" prefix => Unwrapped (has no callback)\n         pstr (str \"-\" (interfaces/pack packer clj))]\n     (tracef \"Packing (unwrapped): %s -> %s\" clj pstr)\n     pstr))\n\n  ([packer clj ?cb-uuid]\n   (let [;;; Keep wrapping as light as possible:\n         ?cb-uuid    (if (= ?cb-uuid :ajax-cb) 0 ?cb-uuid)\n         wrapped-clj (if ?cb-uuid [clj ?cb-uuid] [clj])\n         ;; \"+\" prefix => Wrapped (has callback)\n         pstr (str \"+\" (interfaces/pack packer wrapped-clj))]\n     (tracef \"Packing (wrapped): %s -> %s\" wrapped-clj pstr)\n     pstr)))\n\n(deftype EdnPacker []\n  interfaces/IPacker\n  (pack   [_ x] (enc/pr-edn   x))\n  (unpack [_ s] (enc/read-edn s)))\n\n(def ^:private default-edn-packer (EdnPacker.))\n\n(defn- coerce-packer [x]\n  (if (= x :edn)\n    default-edn-packer\n    (have #(satisfies? interfaces/IPacker %) x)))\n\n(comment\n  (do\n    (require '[taoensso.sente.packers.transit :as transit])\n    (def ^:private default-transit-json-packer (transit/get-transit-packer)))\n\n  (let [pack   interfaces/pack\n        unpack interfaces/unpack\n        data   {:a :A :b :B :c \"hello world\"}]\n\n    (enc/qb 10000\n      (let [pk default-edn-packer]          (unpack pk (pack pk data)))\n      (let [pk default-transit-json-packer] (unpack pk (pack pk data))))))\n\n;;;; Server API\n\n(def ^:private next-idx! (enc/idx-fn))\n\n(declare\n  ^:private send-buffered-server-evs>ws-clients!\n  ^:private send-buffered-server-evs>ajax-clients!\n  ^:private default-client-side-ajax-timeout-ms)\n\n(defn- bad-origin?\n  [allowed-origins {:as ring-req :keys [headers]}]\n  (if (= allowed-origins :all)\n    false\n    (let [origin  (get headers \"origin\")\n          referer (get headers \"referer\" \"\")]\n      (cond\n        (contains? (set allowed-origins) origin) false\n        (enc/rsome #(str/starts-with? referer (str % \"/\")) allowed-origins) false\n        :else true))))\n\n(comment\n  ;; good (pass)\n  (bad-origin? :all                 {:headers {\"origin\"  \"http://site.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://site.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com/\"}})\n\n  ;; bad (fail)\n  (bad-origin? #{\"http://site.com\"} {:headers nil})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://attacker.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://attacker.com/\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com.attacker.com/\"}}))\n\n(defn make-channel-socket-server!\n  \"Takes a web server adapter[1] and returns a map with keys:\n\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn                     ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n\n    :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n    :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Security options:\n\n    :allowed-origins   ; e.g. #{\\\"http://site.com\\\" ...}, defaults to :all. ; Alpha\n\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n\n    :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n                       ; must return truthy, otherwise connection requests will be\n                       ; rejected with (unauthorized-fn <ring-req>) response.\n                       ;\n                       ; May check Authroization HTTP header, etc.\n\n  Other common options:\n\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).\"\n\n  [web-server-ch-adapter\n   & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms\n              send-buf-ms-ajax send-buf-ms-ws\n              user-id-fn bad-csrf-fn bad-origin-fn csrf-token-fn\n              handshake-data-fn packer allowed-origins\n              authorized?-fn unauthorized-fn]\n\n       :or   {recv-buf-or-n    (async/sliding-buffer 1000)\n              ws-kalive-ms     (enc/ms :secs 25) ; < Heroku 55s timeout\n              lp-timeout-ms    (enc/ms :secs 20) ; < Heroku 30s timeout\n              send-buf-ms-ajax 100\n              send-buf-ms-ws   30\n              user-id-fn      (fn [ ring-req] (get-in ring-req [:session :uid]))\n              bad-csrf-fn     (fn [_ring-req] {:status 403 :body \"Bad CSRF token\"})\n              bad-origin-fn   (fn [_ring-req] {:status 403 :body \"Unauthorized origin\"})\n              unauthorized-fn (fn [_ring-req] {:status 401 :body \"Unauthorized request\"})\n              csrf-token-fn\n              (fn [ring-req]\n                (or (:anti-forgery-token ring-req)\n                  (get-in ring-req [:session :csrf-token])\n                  (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token])\n                  (get-in ring-req [:session \"__anti-forgery-token\"])\n                  #_:sente/no-reference-csrf-token\n                  ))\n\n              handshake-data-fn (fn [ring-req] nil)\n              packer :edn\n              allowed-origins :all}}]]\n\n  (have? enc/pos-int? send-buf-ms-ajax send-buf-ms-ws)\n  (have? #(satisfies? interfaces/IServerChanAdapter %) web-server-ch-adapter)\n\n  (let [max-ms default-client-side-ajax-timeout-ms]\n    (when (>= lp-timeout-ms max-ms)\n      (throw\n        (ex-info (str \":lp-timeout-ms must be < \" max-ms)\n          {:lp-timeout-ms lp-timeout-ms\n           :default-client-side-ajax-timeout-ms max-ms}))))\n\n  (let [allowed-origins (have [:or set? #{:all}] allowed-origins)\n        packer  (coerce-packer packer)\n        ch-recv (chan recv-buf-or-n)\n\n        user-id-fn\n        (fn [ring-req client-id]\n          ;; Allow uid to depend (in part or whole) on client-id. Be cautious\n          ;; of security implications.\n          (or (user-id-fn (assoc ring-req :client-id client-id)) ::nil-uid))\n\n        ;; :ws udts used for ws-kalive (to check for activity in window period)\n        ;; :ajax udts used for lp-timeout (as a way to check active conn identity)\n        conns_          (atom {:ws  {} :ajax  {}}) ; {<uid> {<client-id> [<?sch> <udt>]}}\n        send-buffers_   (atom {:ws  {} :ajax  {}}) ; {<uid> [<buffered-evs> <#{ev-uuids}>]}\n        connected-uids_ (atom {:ws #{} :ajax #{} :any #{}}) ; Public\n\n        upd-conn!\n        (fn\n          ([conn-type uid client-id] ; Update udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [[?sch _udt] ?v\n                     new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch ?sch})))))\n\n          ([conn-type uid client-id new-?sch] ; Update sch + udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [new-?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch new-?sch}))))))\n\n        connect-uid!\n        (fn [conn-type uid] {:pre [(have? uid)]}\n          (let [newly-connected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [new-m\n                          (case conn-type\n                            :ws   {:ws (conj ws uid) :ajax ajax            :any (conj any uid)}\n                            :ajax {:ws ws            :ajax (conj ajax uid) :any (conj any uid)})]\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and (not (contains? old-any uid))\n                                          (contains? new-any uid))\n                            :newly-connected))))))]\n            newly-connected?))\n\n        upd-connected-uid!\n        (fn [uid] {:pre [(have? uid)]}\n          (let [newly-disconnected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [conns' @conns_\n                          any-ws-clients?   (contains? (:ws   conns') uid)\n                          any-ajax-clients? (contains? (:ajax conns') uid)\n                          any-clients?      (or any-ws-clients?\n                                                any-ajax-clients?)\n                          new-m\n                          {:ws   (if any-ws-clients?   (conj ws   uid) (disj ws   uid))\n                           :ajax (if any-ajax-clients? (conj ajax uid) (disj ajax uid))\n                           :any  (if any-clients?      (conj any  uid) (disj any  uid))}]\n\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and     (contains? old-any uid)\n                                    (not (contains? new-any uid)))\n                            :newly-disconnected))))))]\n\n            newly-disconnected?))\n\n        send-fn ; server>user (by uid) push\n        (fn [user-id ev & [{:as opts :keys [flush?]}]]\n          (let [uid (if (= user-id :sente/all-users-without-uid) ::nil-uid user-id)\n                _   (tracef \"Chsk send: (->uid %s) %s\" uid ev)\n                _   (assert uid\n                      (str \"Support for sending to `nil` user-ids has been REMOVED. \"\n                           \"Please send to `:sente/all-users-without-uid` instead.\"))\n                _   (assert-event ev)\n\n                ev-uuid (enc/uuid-str)\n\n                flush-buffer!\n                (fn [conn-type]\n                  (when-let\n                      [pulled\n                       (swap-in! send-buffers_ [conn-type]\n                         (fn [m]\n                           ;; Don't actually flush unless the event buffered\n                           ;; with _this_ send call is still buffered (awaiting\n                           ;; flush). This means that we'll have many (go\n                           ;; block) buffer flush calls that'll noop. They're\n                           ;; cheap, and this approach is preferable to\n                           ;; alternatives like flush workers.\n                           (let [[_ ev-uuids] (get m uid)]\n                             (if (contains? ev-uuids ev-uuid)\n                               (swapped\n                                 (dissoc m uid)\n                                 (get    m uid))\n                               (swapped m nil)))))]\n\n                    (let [[buffered-evs ev-uuids] pulled]\n                      (have? vector? buffered-evs)\n                      (have? set?    ev-uuids)\n\n                      (let [buffered-evs-ppstr (pack packer buffered-evs)]\n                        (tracef \"buffered-evs-ppstr: %s\" buffered-evs-ppstr)\n                        (case conn-type\n                          :ws   (send-buffered-server-evs>ws-clients! conns_\n                                  uid buffered-evs-ppstr upd-conn!)\n                          :ajax (send-buffered-server-evs>ajax-clients! conns_\n                                  uid buffered-evs-ppstr))))))]\n\n            (if (= ev [:chsk/close]) ; Currently undocumented\n              (do\n                (debugf \"Chsk closing (client may reconnect): %s\" uid)\n                (when flush?\n                  (flush-buffer! :ws)\n                  (flush-buffer! :ajax))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ws uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch)))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ajax uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch))))\n\n              (do\n                ;; Buffer event\n                (doseq [conn-type [:ws :ajax]]\n                  (swap-in! send-buffers_ [conn-type uid]\n                    (fn [?v]\n                      (if-not ?v\n                        [[ev] #{ev-uuid}]\n                        (let [[buffered-evs ev-uuids] ?v]\n                          [(conj buffered-evs ev)\n                           (conj ev-uuids     ev-uuid)])))))\n\n                ;;; Flush event buffers after relevant timeouts:\n                ;; * May actually flush earlier due to another timeout.\n                ;; * We send to _all_ of a uid's connections.\n                ;; * Broadcasting is possible but I'd suggest doing it rarely,\n                ;;   and only to users we know/expect are actually online.\n                ;;\n                (if flush?\n                  (do\n                    (flush-buffer! :ws)\n                    (flush-buffer! :ajax))\n                  (let [ws-timeout   (async/timeout send-buf-ms-ws)\n                        ajax-timeout (async/timeout send-buf-ms-ajax)]\n                    (go\n                      (<! ws-timeout)\n                      (flush-buffer! :ws))\n                    (go\n                      (<! ajax-timeout)\n                      (flush-buffer! :ajax)))))))\n\n          ;; Server-side send is async so nothing useful to return (currently\n          ;; undefined):\n          nil)\n\n        bad-csrf?\n        (fn [ring-req]\n          (if (nil? csrf-token-fn) ; Provides a way to disable CSRF check\n            false\n            (if-let [reference-csrf-token (csrf-token-fn ring-req)]\n              (let [csrf-token-from-client\n                    (or\n                      (get-in ring-req [:params    :csrf-token])\n                      (get-in ring-req [:headers \"x-csrf-token\"])\n                      (get-in ring-req [:headers \"x-xsrf-token\"]))]\n\n                (not\n                  (enc/const-str=\n                    reference-csrf-token\n                    csrf-token-from-client)))\n\n              true ; By default fail if no CSRF token\n              )))\n\n        unauthorized?\n        (fn [ring-req]\n          (if (nil? authorized?-fn)\n            false\n            (not (authorized?-fn))))\n\n        ;; nnil if connection attempt should be rejected\n        possible-rejection-resp\n        (fn [ring-req]\n          (cond\n            (bad-csrf?   ring-req)\n            (bad-csrf-fn ring-req)\n\n            (bad-origin? allowed-origins ring-req)\n            (bad-origin-fn               ring-req)\n\n            (unauthorized?   ring-req)\n            (unauthorized-fn ring-req)\n\n            :else nil))\n\n        ev-msg-const\n        {:ch-recv        ch-recv\n         :send-fn        send-fn\n         :connected-uids connected-uids_\n         :send-buffers   send-buffers_}]\n\n    {:ch-recv        ch-recv\n     :send-fn        send-fn\n     :connected-uids connected-uids_\n     :send-buffers   send-buffers_\n\n     ;; Does not participate in `conns_` (has specific req->resp)\n     :ajax-post-fn\n     (fn [ring-req]\n       (enc/cond\n         :if-let [resp (possible-rejection-resp ring-req)] resp\n         :else\n         (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n           {:on-open\n            (fn [server-ch websocket?]\n              (assert (not websocket?))\n              (let [params        (get ring-req :params)\n                    ppstr         (get params   :ppstr)\n                    client-id     (get params   :client-id)\n                    [clj has-cb?] (unpack packer ppstr)\n                    reply-fn\n                    (let [replied?_ (atom false)]\n                      (fn [resp-clj] ; Any clj form\n                        (when (compare-and-set! replied?_ false true)\n                          (tracef \"Chsk send (ajax post reply): %s\" resp-clj)\n                          (interfaces/sch-send! server-ch websocket?\n                            (pack packer resp-clj)))))]\n\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {;; Note that the client-id is provided here just for the\n                     ;; user's convenience. non-lp-POSTs don't actually need a\n                     ;; client-id for Sente's own implementation:\n                     :client-id client-id #_\"unnecessary-for-non-lp-POSTs\"\n                     :ring-req  ring-req\n                     :event     clj\n                     :uid       (user-id-fn ring-req client-id)\n                     :?reply-fn (when has-cb? reply-fn)}))\n\n                (if has-cb?\n                  (when-let [ms lp-timeout-ms]\n                    (go\n                      (<! (async/timeout ms))\n                      (reply-fn :chsk/timeout)))\n                  (reply-fn :chsk/dummy-cb-200))))})))\n\n     ;; Ajax handshake/poll, or WebSocket handshake\n     :ajax-get-or-ws-handshake-fn\n     (fn [ring-req]\n       (let [sch-uuid   (enc/uuid-str 6)\n             params     (get ring-req :params)\n             client-id  (get params   :client-id)\n             uid        (user-id-fn    ring-req client-id)\n\n             receive-event-msg! ; Partial\n             (fn self\n               ([event          ] (self event nil))\n               ([event ?reply-fn]\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {:client-id client-id\n                     :ring-req  ring-req\n                     :event     event\n                     :?reply-fn ?reply-fn\n                     :uid       uid}))))\n\n             send-handshake!\n             (fn [server-ch websocket?]\n               (tracef \"send-handshake!\")\n               (let [?handshake-data (handshake-data-fn ring-req)\n                     handshake-ev\n                     (if (nil? ?handshake-data) ; Micro optimization\n                       [:chsk/handshake [uid nil]]\n                       [:chsk/handshake [uid nil ?handshake-data]])]\n                 (interfaces/sch-send! server-ch websocket?\n                   (pack packer handshake-ev))))]\n\n         (enc/cond\n\n           (str/blank? client-id)\n           (let [err-msg \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\"]\n             (errorf (str err-msg \": %s\") ring-req) ; Careful re: % in req\n             (throw (ex-info err-msg {:ring-req ring-req})))\n\n           :if-let [resp (possible-rejection-resp ring-req)] resp\n           :else\n           (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n             {:on-open\n              (fn [server-ch websocket?]\n                (if websocket?\n\n                  ;; WebSocket handshake\n                  (let [_ (tracef \"New WebSocket channel: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ws uid client-id server-ch)\n                        udt-open     (:udt updated-conn)]\n\n                    (when (connect-uid! :ws uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (send-handshake! server-ch websocket?)\n\n                    ;; Start ws-kalive loop\n                    ;; This also works to gc ws conns that were suddenly\n                    ;; terminated (e.g. by turning on airplane mode)\n                    (when-let [ms ws-kalive-ms]\n                      (go-loop [udt-t0 udt-open]\n                        (<! (async/timeout ms))\n                        (when-let [[_sch udt-t1] (get-in @conns_ [:ws uid client-id])]\n                          (when (interfaces/sch-open? server-ch)\n                            ;; (assert (= _sch server-ch))\n                            (when (= udt-t1 udt-t0)\n                              ;; Ref. issue #230:\n                              ;; We've seen no send/recv activity on this\n                              ;; conn w/in our kalive window so send a ping\n                              ;; ->client (should auto-close conn if it's\n                              ;; gone dead).\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/ws-ping)))\n                            (recur udt-t1))))))\n\n                  ;; Ajax handshake/poll\n                  (let [_ (tracef \"New Ajax handshake/poll: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ajax uid client-id server-ch)\n                        udt-open     (:udt updated-conn)\n                        handshake?   (or (:init? updated-conn) (:handshake? params))]\n\n                    (when (connect-uid! :ajax uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (if handshake?\n                      ;; Client will immediately repoll\n                      (send-handshake! server-ch websocket?)\n\n                      (when-let [ms lp-timeout-ms]\n                        (go\n                          (<! (async/timeout ms))\n                          (when-let [[_sch udt-t1] (get-in @conns_ [:ajax uid client-id])]\n                            (when (= udt-t1 udt-open)\n                              ;; (assert (= _sch server-ch))\n                              ;; Appears to still be the active sch\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/timeout))))))))))\n\n              :on-msg\n              (fn [server-ch websocket? req-ppstr]\n                (assert websocket?)\n                (upd-conn! :ws uid client-id)\n                (let [[clj ?cb-uuid] (unpack packer req-ppstr)]\n                  (receive-event-msg! clj ; Should be ev\n                    (when ?cb-uuid\n                      (fn reply-fn [resp-clj] ; Any clj form\n                        (tracef \"Chsk send (ws reply): %s\" resp-clj)\n                        ;; true iff apparent success:\n                        (interfaces/sch-send! server-ch websocket?\n                          (pack packer resp-clj ?cb-uuid)))))))\n\n              :on-close ; We rely on `on-close` to trigger for _every_ conn!\n              (fn [server-ch websocket? _status]\n                ;; Note that `status` type varies with underlying web server\n                (let [conn-type (if websocket? :ws :ajax)\n                      _ (tracef \"%s channel closed: %s (%s)\"\n                          (if websocket? \"WebSocket\" \"Ajax\")\n                          uid sch-uuid)\n\n                      updated-conn (upd-conn! conn-type uid client-id nil)\n                      udt-close    (:udt updated-conn)]\n\n                  ;; Allow some time for possible reconnects (repoll,\n                  ;; sole window refresh, etc.):\n                  (go\n                    (<! (async/timeout 5000))\n                    (let [[_?sch udt-t1] (get-in @conns_ [conn-type uid client-id])]\n\n                      (when @debug-mode?_\n                        (debugf \"close-timeout: %s %s %s %s\" conn-type uid\n                          sch-uuid [(= udt-t1 udt-close) udt-t1 udt-close]))\n\n                      (when (= udt-t1 udt-close)\n                        (let [disconnect? ; Removed entry for client-id?\n                              (swap-in! conns_ [conn-type uid client-id]\n                                (fn [[_sch udt-t1]]\n                                  (if (= udt-t1 udt-close)\n                                    (swapped :swap/dissoc true)\n                                    (swapped [_sch udt-t1] false))))]\n\n                          (when disconnect?\n\n                            ;; Potentially remove entry for uid\n                            (swap-in! conns_ [conn-type uid]\n                              (fn [?m] (if (empty? ?m) :swap/dissoc ?m)))\n\n                            (when (upd-connected-uid! uid)\n                              (receive-event-msg! [:chsk/uidport-close uid])))))))))\n\n              :on-error\n              (fn [server-ch websocket? error]\n                (errorf \"ring-req->server-ch-resp error: %s (%s)\"\n                  error uid sch-uuid))}))))}))\n\n(defn- send-buffered-server-evs>ws-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\"\n  [conns_ uid buffered-evs-pstr upd-conn!]\n  (tracef \"send-buffered-server-evs>ws-clients!: %s\" buffered-evs-pstr)\n  (doseq [[client-id [?sch _udt]] (get-in @conns_ [:ws uid])]\n    (when-let [sch ?sch]\n      (upd-conn! :ws uid client-id)\n      (interfaces/sch-send! sch :websocket buffered-evs-pstr))))\n\n(defn- send-buffered-server-evs>ajax-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects.\"\n  [conns_ uid buffered-evs-pstr]\n  (tracef \"send-buffered-server-evs>ajax-clients!: %s\" buffered-evs-pstr)\n  (let [ms-backoffs [90 180 360 720 1440] ; Mean 2790s\n        ;; All connected/possibly-reconnecting client uuids:\n        client-ids-unsatisfied (keys (get-in @conns_ [:ajax uid]))]\n\n    (when-not (empty? client-ids-unsatisfied)\n      ;; (tracef \"client-ids-unsatisfied: %s\" client-ids-unsatisfied)\n      (go-loop [n 0 client-ids-satisfied #{}]\n        (let [?pulled ; nil or {<client-id> [<?sch> <udt>]}\n              (swap-in! conns_ [:ajax uid]\n                (fn [m] ; {<client-id> [<?sch> <udt>]}\n                  (let [ks-to-pull (remove client-ids-satisfied (keys m))]\n                    ;; (tracef \"ks-to-pull: %s\" ks-to-pull)\n                    (if (empty? ks-to-pull)\n                      (swapped m nil)\n                      (swapped\n                        (reduce\n                          (fn [m k]\n                            (let [[?sch udt] (get m k)]\n                              ;; Nb don't change udt; for Ajax conns_ we only\n                              ;; want udt updated on poll or close, not on\n                              ;; activity (as with ws conns_)\n                              (assoc m k [nil udt #_(enc/now-udt)])))\n\n                          m ks-to-pull)\n                        (select-keys m ks-to-pull))))))]\n\n          (have? [:or nil? map?] ?pulled)\n\n          (let [?newly-satisfied\n                (when ?pulled\n                  (reduce-kv\n                    (fn [s client-id [?sch _udt]]\n                      (let [sent?\n                            (when-let [sch ?sch]\n                              ;; Will noop + return false if sch already closed:\n                              (interfaces/sch-send! ?sch (not :websocket)\n                                buffered-evs-pstr))]\n\n                        (if sent? (conj s client-id) s)))\n                    #{} ?pulled))\n\n                now-satisfied (into client-ids-satisfied ?newly-satisfied)]\n\n            ;; (tracef \"now-satisfied: %s\" now-satisfied)\n            (when-let [ms-backoff (get ms-backoffs n)]\n              (when (enc/rsome (complement now-satisfied) client-ids-unsatisfied)\n                (let [ms-timeout (+ ms-backoff (rand-int ms-backoff))]\n                  ;; Allow some time for possible poller reconnects:\n                  (<! (async/timeout ms-timeout))\n                  (recur (inc n) now-satisfied))))))))))\n\n;;;; Client API\n\n#?(:cljs (def ajax-lite \"Alias of `taoensso.encore/ajax-lite`\" enc/ajax-lite))\n\n   (defprotocol IChSocket\n     (-chsk-connect!    [chsk])\n     (-chsk-disconnect! [chsk reason])\n     (-chsk-reconnect!  [chsk])\n     (-chsk-send!       [chsk ev opts]))\n\n     (defn chsk-connect!    [chsk] (-chsk-connect!    chsk))\n     (defn chsk-disconnect! [chsk] (-chsk-disconnect! chsk :requested-disconnect))\n     (defn chsk-reconnect! \"Useful for reauthenticating after login/logout, etc.\"\n       [chsk] (-chsk-reconnect! chsk))\n     (def chsk-destroy! \"Deprecated\" chsk-disconnect!)\n\n   (defn chsk-send!\n     \"Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\"\n     ([chsk ev] (chsk-send! chsk ev {}))\n     ([chsk ev ?timeout-ms ?cb] (chsk-send! chsk ev {:timeout-ms ?timeout-ms\n                                                     :cb         ?cb}))\n     ([chsk ev opts]\n      (tracef \"Chsk send: (%s) %s\" (assoc opts :cb (boolean (:cb opts))) ev)\n      (-chsk-send! chsk ev opts)))\n\n   (defn- chsk-send->closed! [?cb-fn]\n     (warnf \"Chsk send against closed chsk.\")\n     (when ?cb-fn (?cb-fn :chsk/closed))\n     false)\n\n   (defn- assert-send-args [x ?timeout-ms ?cb]\n     (assert-event x)\n     (assert (or (and (nil? ?timeout-ms) (nil? ?cb))\n                 (and (enc/nat-int? ?timeout-ms)))\n       (str \"cb requires a timeout; timeout-ms should be a +ive integer: \" ?timeout-ms))\n     (assert (or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\n       (str \"cb should be nil, an ifn, or a channel: \" (type ?cb))))\n\n   (defn- pull-unused-cb-fn! [cbs-waiting_ ?cb-uuid]\n     (when-let [cb-uuid ?cb-uuid]\n       (swap-in! cbs-waiting_ [cb-uuid]\n         (fn [?f] (swapped :swap/dissoc ?f)))))\n\n   (defn- swap-chsk-state!\n     \"Atomically swaps the value of chk's :state_ atom.\"\n     [chsk f]\n     (let [[old-state new-state]\n           (swap-in! (:state_ chsk)\n             (fn [old-state]\n               (let [new-state (f old-state)\n                     new-state\n                     (if (:first-open? old-state)\n                       (assoc new-state :first-open? false)\n                       new-state)\n\n                     new-state\n                     (if (:open? new-state)\n                       (dissoc new-state :udt-next-reconnect)\n                       new-state)]\n\n                 (swapped new-state [old-state new-state]))))]\n\n       (when (not= old-state new-state)\n         (let [output [old-state new-state]]\n           ;; (debugf \"Chsk state change: %s\" output)\n           (put! (get-in chsk [:chs :state]) [:chsk/state output])\n           output))))\n\n   (defn- chsk-state->closed [state reason]\n     (have? map? state)\n     (have? [:el #{:requested-disconnect\n                   :requested-reconnect\n                   :downgrading-ws-to-ajax\n                   :unexpected}] reason)\n     (if (or (:open? state) (not= reason :unexpected))\n       (-> state\n         (dissoc :udt-next-reconnect)\n         (assoc\n           :open? false\n           :last-close {:udt (enc/now-udt) :reason reason}))\n       state))\n\n   (defn- cb-chan-as-fn\n     \"Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>].\"\n     [?cb ev]\n     (if (or (nil? ?cb) (ifn? ?cb))\n       ?cb\n       (do\n         (have? enc/chan? ?cb)\n         (assert-event ev)\n         (let [[ev-id _] ev\n               cb-ch ?cb]\n           (fn [reply]\n             (put! cb-ch\n               [(keyword (str (enc/as-qname ev-id) \".cb\"))\n                reply]))))))\n\n   (defn- receive-buffered-evs! [chs clj]\n     (tracef \"receive-buffered-evs!: %s\" clj)\n     (let [buffered-evs (have vector? clj)]\n       (doseq [ev buffered-evs]\n         (assert-event ev)\n         ;; Should never receive :chsk/* events from server here:\n         (let [[id] ev] (assert (not= (namespace id) \"chsk\")))\n         (put! (:<server chs) ev))))\n\n   (defn- handshake? [x]\n     (and (vector? x) ; Nb support arb input (e.g. cb replies)\n       (let [[x1] x] (= x1 :chsk/handshake))))\n\n   (defn- receive-handshake! [chsk-type chsk clj]\n     (have? [:el #{:ws :ajax}] chsk-type)\n     (have? handshake? clj)\n     (tracef \"receive-handshake! (%s): %s\" chsk-type clj)\n     (let [[_ [?uid _ ?handshake-data]] clj\n           {:keys [chs ever-opened?_]} chsk\n           first-handshake? (compare-and-set! ever-opened?_ false true)\n           new-state\n           {:type           chsk-type ; :auto -> e/o #{:ws :ajax}, etc.\n            :open?          true\n            :ever-opened?   true\n            :uid            ?uid\n            :handshake-data ?handshake-data\n            :first-open?    first-handshake?}\n\n           handshake-ev\n           [:chsk/handshake\n            [?uid nil ?handshake-data first-handshake?]]]\n\n       (assert-event handshake-ev)\n       (swap-chsk-state! chsk #(merge % new-state))\n       (put! (:internal chs) handshake-ev)\n\n       :handled))\n\n#?(:clj\n   (defmacro ^:private elide-require\n     \"Experimental. The presence of `js/require` calls can cause issues with\n    React Native, even if they never execute. Currently no other known\n    workarounds. Ref. https://github.com/ptaoussanis/sente/issues/247.\"\n     [& body]\n     (when-not (enc/get-sys-val \"SENTE_ELIDE_JS_REQUIRE\")\n       `(do ~@body))))\n\n#?(:cljs\n   (def ^:private ?node-npm-websocket_\n     \"nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \\\"1.0.23\\\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm\"\n\n     ;; This `let` silliness intended to work around React Native's\n     ;; static analysis tool, to prevent it from detecting a\n     ;; missing package.\n     ;;\n     ;; Ref. https://github.com/ptaoussanis/sente/issues/247#issuecomment-555219121\n     ;;\n     (let [make-package-name (fn [prefix] (str prefix \"socket\"))\n           require-fn\n           (if (exists? js/require)\n             js/require\n             (constantly :no-op))]\n\n       (delay ; Eager eval causes issues with React Native, Ref. #247,\n         (elide-require ; TODO is this now safe to remove?\n           (when (and node-target? (exists? js/require))\n             (try\n               (require-fn (make-package-name \"web\"))\n               ;; In particular, catch 'UnableToResolveError'\n               (catch :default e\n                 ;; (errorf e \"Unable to load npm websocket lib\")\n                 nil))))))))\n\n#?(:clj\n   (defn- create-java-client-websocket!\n     [{:as opts :keys [onerror-fn onmessage-fn onclose-fn uri-str headers]}]\n     (let [uri (java.net.URI. uri-str)\n\n           ;; headers\n           ;; (ImmutableMap/of\n           ;;   \"Origin\"  \"http://localhost:3200\"\n           ;;   \"Referer\" \"http://localhost:3200\"\n           ;;   \"Sec-WebSocket-Extensions\" \"permessage-deflate; client_max_window_bits\"\n           ;;   )\n\n           ws-client\n           (proxy [WebSocketClient] [^java.net.URI uri ^java.util.Map headers]\n             (onOpen    [^org.java_websocket.handshake.ServerHandshake handshakedata] nil)\n             (onError   [ex]                 (onerror-fn   ex))\n             (onMessage [^String message]    (onmessage-fn message))\n             (onClose   [code reason remote] (onclose-fn   code reason remote)))]\n\n       ;; JS client attempts to connect right away at construction time.\n       ;; Java client doesn't need to, but we'll do anyway for consistency.\n       (.connect ws-client)\n       (do       ws-client))))\n\n#?(:cljs\n   (defn- create-js-client-websocket!\n     [{:as opts :keys [onerror-fn onmessage-fn onclose-fn uri-str headers]}]\n     (when-let [WebSocket\n                (or\n                  (enc/oget goog/global           \"WebSocket\")\n                  (enc/oget goog/global           \"MozWebSocket\")\n                  (enc/oget @?node-npm-websocket_ \"w3cwebsocket\"))]\n\n       (let [socket (WebSocket. uri-str)]\n         (doto socket\n           (aset \"onerror\"   onerror-fn)\n           (aset \"onmessage\" onmessage-fn) ; Nb receives both push & cb evs!\n           ;; Fires repeatedly (on each connection attempt) while server is down:\n           (aset \"onclose\"   onclose-fn))\n         socket))))\n\n(defn- create-websocket! [{:as opts :keys [onerror-fn onmessage-fn onclose-fn uri-str headers]}]\n  #?(:cljs (create-js-client-websocket!   opts)\n     :clj  (create-java-client-websocket! opts)))\n\n(defrecord ChWebSocket\n    ;; WebSocket-only IChSocket implementation\n    ;; Handles (re)connections, cbs, etc.\n\n    [client-id chs params headers packer url ws-kalive-ms\n     state_ ; {:type _ :open? _ :uid _ :csrf-token _ ...}\n     instance-handle_ retry-count_ ever-opened?_\n     backoff-ms-fn ; (fn [nattempt]) -> msecs\n     cbs-waiting_ ; {<cb-uuid> <fn> ...}\n     socket_\n     udt-last-comms_]\n\n  IChSocket\n  (-chsk-disconnect! [chsk reason]\n    (reset! instance-handle_ nil) ; Disable auto retry\n    (swap-chsk-state! chsk #(chsk-state->closed % reason))\n    (when-let [s @socket_]\n      #?(:clj  (.closeBlocking ^WebSocketClient s)\n         :cljs (.close s 1000 \"CLOSE_NORMAL\"))))\n\n  (-chsk-reconnect! [chsk]\n    (-chsk-disconnect! chsk :requested-reconnect)\n    (-chsk-connect!    chsk))\n\n  (-chsk-send! [chsk ev opts]\n    (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n          _ (assert-send-args ev ?timeout-ms ?cb)\n          ?cb-fn (cb-chan-as-fn ?cb ev)]\n      (if-not (:open? @state_) ; Definitely closed\n        (chsk-send->closed! ?cb-fn)\n\n        ;; TODO Buffer before sending (but honor `:flush?`)\n        (let [?cb-uuid (when ?cb-fn (enc/uuid-str 6))\n              ppstr (pack packer ev ?cb-uuid)]\n\n          (when-let [cb-uuid ?cb-uuid]\n            (reset-in! cbs-waiting_ [cb-uuid] (have ?cb-fn))\n            (when-let [timeout-ms ?timeout-ms]\n              (go\n                (<! (async/timeout timeout-ms))\n                (when-let [cb-fn* (pull-unused-cb-fn! cbs-waiting_ ?cb-uuid)]\n                  (cb-fn* :chsk/timeout)))))\n\n          (try\n            #?(:cljs (.send                  @socket_         ppstr)\n               :clj  (.send ^WebSocketClient @socket_ ^String ppstr))\n\n            (reset! udt-last-comms_ (enc/now-udt))\n            :apparent-success\n            (catch #?(:clj Throwable :cljs :default) t\n              (errorf t \"Chsk send error\")\n              (when-let [cb-uuid ?cb-uuid]\n                (let [cb-fn* (or (pull-unused-cb-fn! cbs-waiting_ cb-uuid)\n                                 (have ?cb-fn))]\n                  (cb-fn* :chsk/error)))\n              false))))))\n\n  (-chsk-connect! [chsk]\n    (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n          have-handle? (fn [] (= @instance-handle_ instance-handle))\n          connect-fn\n          (fn connect-fn []\n            (when (have-handle?)\n              (let [retry-fn\n                    (fn [] ; Backoff then recur\n                      (when (have-handle?)\n                        (let [retry-count* (swap! retry-count_ inc)\n                              backoff-ms (backoff-ms-fn retry-count*)\n                              udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                          (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                            retry-count* backoff-ms)\n                          #?(:cljs (.setTimeout goog/global connect-fn backoff-ms)\n                             :clj  (go\n                                     (<! (async/timeout backoff-ms))\n                                     (connect-fn)))\n\n                          (swap-chsk-state! chsk\n                            #(assoc % :udt-next-reconnect udt-next-reconnect)))))\n\n                    onerror-fn\n                    #?(:cljs\n                       (fn [ws-ev]\n                         (errorf ; ^:meta {:raw-console? true}\n                           \"WebSocket error: %s\"\n                           (try\n                             (js->clj          ws-ev)\n                             (catch :default _ ws-ev)))\n\n                         (swap-chsk-state! chsk\n                           #(assoc % :last-ws-error\n                              {:udt (enc/now-udt), :ev ws-ev})))\n\n                       :clj\n                       (fn [ex]\n                         (errorf ex \"WebSocket error\")\n                         (swap-chsk-state! chsk\n                           #(assoc % :last-ws-error\n                              {:udt (enc/now-udt), :ex ex}))))\n\n                    onmessage-fn ; Nb receives both push & cb evs!\n                    (fn #?(:cljs [ws-ev] :clj [ppstr])\n                      (let [ppstr #?(:clj            ppstr\n                                     :cljs (enc/oget ws-ev \"data\"))\n\n                            ;; `clj` may/not satisfy `event?` since\n                            ;; we also receive cb replies here. This\n                            ;; is why we prefix pstrs to indicate\n                            ;; whether they're wrapped or not\n                            [clj ?cb-uuid] (unpack packer ppstr)]\n\n                        (reset! udt-last-comms_ (enc/now-udt))\n\n                        (or\n                          (when (handshake? clj)\n                            (receive-handshake! :ws chsk clj)\n                            (reset! retry-count_ 0)\n                            :handshake)\n\n                          (when (= clj :chsk/ws-ping)\n                            (put! (:<server chs) [:chsk/ws-ping])\n                            :noop)\n\n                          (if-let [cb-uuid ?cb-uuid]\n                            (if-let [cb-fn (pull-unused-cb-fn! cbs-waiting_\n                                             cb-uuid)]\n                              (cb-fn clj)\n                              (warnf \"Cb reply w/o local cb-fn: %s\" clj))\n                            (let [buffered-evs clj]\n                              (receive-buffered-evs! chs buffered-evs))))))\n\n                    ;; Fires repeatedly (on each connection attempt) while\n                    ;; server is down:\n                    onclose-fn\n                    (fn #?(:cljs [ws-ev] :clj [code reason remote])\n                      (let [last-ws-close\n                            #?(:clj\n                               {:udt    (enc/now-udt)\n                                :clean? (= code org.java_websocket.framing.CloseFrame/NORMAL)\n                                :code   code\n                                :reason reason}\n\n                               :cljs\n                               {:udt    (enc/now-udt)\n                                :ev     ws-ev\n                                :clean? (enc/oget ws-ev \"wasClean\")\n                                :code   (enc/oget ws-ev \"code\")\n                                :reason (enc/oget ws-ev \"reason\")})]\n\n                        ;; Firefox calls \"onclose\" while unloading,\n                        ;; Ref. http://goo.gl/G5BYbn:\n                        (if (:clean? last-ws-close)\n                          (do\n                            (debugf \"Clean WebSocket close, will not attempt reconnect\")\n                            (swap-chsk-state! chsk\n                              #(assoc % :last-ws-close last-ws-close)))\n                          (do\n                            (swap-chsk-state! chsk\n                              #(assoc (chsk-state->closed % :unexpected)\n                                 :last-ws-close last-ws-close))\n                            (retry-fn)))))\n\n                    ?socket\n                    (try\n                      (create-websocket!\n                        {:onerror-fn   onerror-fn\n                         :onmessage-fn onmessage-fn\n                         :onclose-fn   onclose-fn\n                         :headers      headers\n                         :uri-str\n                         (enc/merge-url-with-query-string url\n                           (merge params ; 1st (don't clobber impl.):\n                             {:client-id client-id\n                              :csrf-token (:csrf-token @state_)}))})\n\n                      (catch #?(:clj Throwable :cljs :default) t\n                        (errorf t \"WebSocket error\")\n                        nil))]\n\n                (if-not ?socket\n                  (retry-fn) ; Couldn't even get a socket\n                  (do\n                    ;; Clean up the old socket if any exists\n                    (when-let [old-socket @socket_]\n                      #?(:clj  (.close ^WebSocketClient old-socket)\n                         :cljs (.close                  old-socket)))\n\n                    (reset! socket_ ?socket))))))]\n\n      (when-let [ms ws-kalive-ms]\n        (go-loop []\n          (let [udt-t0 @udt-last-comms_]\n            (<! (async/timeout ms))\n            (when (have-handle?)\n              (let [udt-t1 @udt-last-comms_]\n                (when (= udt-t0 udt-t1)\n                  ;; Ref. issue #259:\n                  ;; We've seen no send/recv activity on this\n                  ;; conn w/in our kalive window so send a ping\n                  ;; ->server (should auto-close conn if it's\n                  ;; gone dead). The server generally sends pings so\n                  ;; this should be rare. Mostly here to help clients\n                  ;; identify conns that were suddenly dropped.\n\n                  (-chsk-send! chsk [:chsk/ws-ping] {:flush? true})))\n              (recur)))))\n\n      (reset! retry-count_ 0)\n      (connect-fn)\n      chsk)))\n\n(defn- new-ChWebSocket [opts csrf-token]\n  (map->ChWebSocket\n    (merge\n      {:state_ (atom {:type :ws :open? false :ever-opened? false :csrf-token csrf-token})\n       :instance-handle_ (atom nil)\n       :retry-count_     (atom 0)\n       :ever-opened?_    (atom false)\n       :cbs-waiting_     (atom {})\n       :socket_          (atom nil)\n       :udt-last-comms_  (atom nil)}\n      opts)))\n\n(def ^:private default-client-side-ajax-timeout-ms\n  \"We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms.\"\n  (enc/ms :secs 60))\n\n#?(:cljs\n   (defrecord ChAjaxSocket\n       ;; Ajax-only IChSocket implementation\n       ;; Handles (re)polling, etc.\n\n       [client-id chs params packer url state_\n        instance-handle_ ever-opened?_\n        backoff-ms-fn\n        ajax-opts curr-xhr_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [x @curr-xhr_] (.abort x)))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [csrf-token (:csrf-token @state_)]\n             (ajax-lite url\n               (merge ajax-opts\n                 {:method     :post\n                  :timeout-ms (or ?timeout-ms (:timeout-ms ajax-opts)\n                                  default-client-side-ajax-timeout-ms)\n                  :resp-type  :text ; We'll do our own pstr decoding\n                  :headers\n                  (merge\n                    (:headers ajax-opts) ; 1st (don't clobber impl.)\n                    {:X-CSRF-Token csrf-token})\n\n                  :params\n                  (let [ppstr (pack packer ev (when ?cb-fn :ajax-cb))]\n                    (merge params ; 1st (don't clobber impl.):\n                      {:udt        (enc/now-udt) ; Force uncached resp\n\n                       ;; A duplicate of X-CSRF-Token for user's convenience\n                       ;; and for back compatibility with earlier CSRF docs:\n                       :csrf-token csrf-token\n\n                       ;; Just for user's convenience here. non-lp-POSTs\n                       ;; don't actually need a client-id for Sente's own\n                       ;; implementation:\n                       :client-id  client-id\n\n                       :ppstr      ppstr}))})\n\n               (fn ajax-cb [{:keys [?error ?content]}]\n                 (if ?error\n                   (if (= ?error :timeout)\n                     (when ?cb-fn (?cb-fn :chsk/timeout))\n                     (do\n                       (swap-chsk-state! chsk\n                         #(chsk-state->closed % :unexpected))\n                       (when ?cb-fn (?cb-fn :chsk/error))))\n\n                   (let [content ?content\n                         resp-ppstr content\n                         [resp-clj _] (unpack packer resp-ppstr)]\n                     (if ?cb-fn\n                       (?cb-fn resp-clj)\n                       (when (not= resp-clj :chsk/dummy-cb-200)\n                         (warnf \"Cb reply w/o local cb-fn: %s\" resp-clj)))\n                     (swap-chsk-state! chsk #(assoc % :open? true))))))\n\n             :apparent-success))))\n\n     (-chsk-connect! [chsk]\n       (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n             have-handle? (fn [] (= @instance-handle_ instance-handle))\n             poll-fn ; async-poll-for-update-fn\n             (fn poll-fn [retry-count]\n               (tracef \"async-poll-for-update!\")\n               (when (have-handle?)\n                 (let [retry-fn\n                       (fn [] ; Backoff then recur\n                         (when (have-handle?)\n                           (let [retry-count* (inc retry-count)\n                                 backoff-ms (backoff-ms-fn retry-count*)\n                                 udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                             (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                               retry-count* backoff-ms)\n                             (.setTimeout goog/global\n                               (fn [] (poll-fn retry-count*))\n                               backoff-ms)\n                             (swap-chsk-state! chsk\n                               #(assoc % :udt-next-reconnect udt-next-reconnect)))))]\n\n                   (reset! curr-xhr_\n                     (ajax-lite url\n                       (merge ajax-opts\n                         {:method     :get ; :timeout-ms timeout-ms\n                          :timeout-ms (or (:timeout-ms ajax-opts)\n                                        default-client-side-ajax-timeout-ms)\n                          :resp-type  :text ; Prefer to do our own pstr reading\n                          :params\n                          (merge\n                            ;; Note that user params here are actually POST\n                            ;; params for convenience. Contrast: WebSocket\n                            ;; params sent as query params since there's no\n                            ;; other choice there.\n                            params ; 1st (don't clobber impl.):\n\n                            {:udt       (enc/now-udt) ; Force uncached resp\n                             :client-id client-id}\n\n                            ;; A truthy :handshake? param will prompt server to\n                            ;; reply immediately with a handshake response,\n                            ;; letting us confirm that our client<->server comms\n                            ;; are working:\n                            (when-not (:open? @state_) {:handshake? true}))\n\n                          :headers\n                          (merge\n                            (:headers ajax-opts) ; 1st (don't clobber impl.)\n                            {:X-CSRF-Token (:csrf-token @state_)})})\n\n                       (fn ajax-cb [{:keys [?error ?content]}]\n                         (if ?error\n                           (cond\n                             (= ?error :timeout) (poll-fn 0)\n                             ;; (= ?error :abort) ; Abort => intentional, not an error\n                             :else\n                             (do\n                               (swap-chsk-state! chsk\n                                 #(chsk-state->closed % :unexpected))\n                               (retry-fn)))\n\n                           ;; The Ajax long-poller is used only for events, never cbs:\n                           (let [content ?content\n                                 ppstr content\n                                 [clj] (unpack packer ppstr)\n                                 handshake? (handshake? clj)]\n\n                             (when handshake?\n                               (receive-handshake! :ajax chsk clj))\n\n                             (swap-chsk-state! chsk #(assoc % :open? true))\n                             (poll-fn 0) ; Repoll asap\n\n                             (when-not handshake?\n                               (or\n                                 (when (= clj :chsk/timeout)\n                                   (when @debug-mode?_\n                                     (receive-buffered-evs! chs [[:debug/timeout]]))\n                                   :noop)\n\n                                 (let [buffered-evs clj] ; An application reply\n                                   (receive-buffered-evs! chs buffered-evs))))))))))))]\n\n         (poll-fn 0)\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAjaxSocket [opts csrf-token]\n     (map->ChAjaxSocket\n       (merge\n         {:state_           (atom {:type :ajax :open? false :ever-opened? false :csrf-token csrf-token})\n          :instance-handle_ (atom nil)\n          :ever-opened?_    (atom false)\n          :curr-xhr_        (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defrecord ChAutoSocket\n       ;; Dynamic WebSocket/Ajax IChSocket implementation\n       ;; Wraps a swappable ChWebSocket/ChAjaxSocket\n\n       [ws-chsk-opts ajax-chsk-opts state_\n        impl_ ; ChWebSocket or ChAjaxSocket\n        ]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl reason)))\n\n     ;; Possibly reset impl type:\n     (-chsk-reconnect! [chsk]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl :requested-reconnect)\n         (-chsk-connect!    chsk)))\n\n     (-chsk-send! [chsk ev opts]\n       (if-let [impl @impl_]\n         (-chsk-send! impl ev opts)\n         (let [{?cb :cb} opts\n               ?cb-fn (cb-chan-as-fn ?cb ev)]\n           (chsk-send->closed! ?cb-fn))))\n\n     (-chsk-connect! [chsk]\n       ;; Starting with a simple downgrade-only strategy here as a proof of concept\n       ;; TODO Later consider smarter downgrade or downgrade+upgrade strategies?\n       (let [ajax-chsk-opts (assoc ajax-chsk-opts :state_ state_)\n             ws-chsk-opts (assoc   ws-chsk-opts :state_ state_)\n\n             ajax-conn!\n             (fn []\n               ;; Remove :auto->:ajax downgrade watch\n               (remove-watch state_ :chsk/auto-ajax-downgrade)\n               (-chsk-connect! (new-ChAjaxSocket ajax-chsk-opts (:csrf-token @state_))))\n\n             ws-conn!\n             (fn []\n               ;; Configure :auto->:ajax downgrade watch\n               (let [downgraded?_ (atom false)]\n                 (add-watch state_ :chsk/auto-ajax-downgrade\n                   (fn [_ _ old-state new-state]\n                     (when-let [impl @impl_]\n                       (when-let [ever-opened?_ (:ever-opened?_ impl)]\n                         (when-not @ever-opened?_\n                           (when (:last-ws-error new-state)\n                             (when (compare-and-set! downgraded?_ false true)\n                               (warnf \"Permanently downgrading :auto chsk -> :ajax\")\n                               (-chsk-disconnect! impl :downgrading-ws-to-ajax)\n                               (reset! impl_ (ajax-conn!))))))))))\n\n               (-chsk-connect! (new-ChWebSocket ws-chsk-opts (:csrf-token @state_))))]\n\n         (reset! impl_ (or (ws-conn!) (ajax-conn!)))\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAutoSocket [opts csrf-token]\n     (map->ChAutoSocket\n       (merge\n         {:state_ (atom {:type :auto :open? false :ever-opened? false :csrf-token csrf-token})\n          :impl_  (atom nil)}\n         opts))))\n\n   (defn- get-chsk-url [protocol host path type]\n     (let [protocol (case protocol :http \"http:\" :https \"https:\" protocol)\n           protocol (have [:el #{\"http:\" \"https:\"}] protocol)\n           protocol (case type\n                      :ajax     protocol\n                      :ws (case protocol \"https:\" \"wss:\" \"http:\" \"ws:\"))]\n       (str protocol \"//\" (enc/path host path))))\n\n   (defn make-channel-socket-client!\n     \"Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :headers        ; Map of additional headers to include in the initiating request\n                       ; (currently only for Java clients).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.\"\n\n     [path ?csrf-token &\n      [{:keys [type protocol host port params headers recv-buf-or-n packer ws-kalive-ms\n               client-id ajax-opts wrap-recv-evs? backoff-ms-fn]\n        :as   opts\n        :or   {type           :auto\n               recv-buf-or-n  (async/sliding-buffer 2048) ; Mostly for buffered-evs\n               packer         :edn\n               client-id      (or (:client-uuid opts) ; Backwards compatibility\n                                  (enc/uuid-str))\n               wrap-recv-evs? true\n               backoff-ms-fn  enc/exp-backoff\n               ws-kalive-ms   (enc/ms :secs 20)}}\n\n       _deprecated-more-opts]]\n\n     (have? [:in #{:ajax :ws :auto}] type)\n     (have? enc/nblank-str? client-id)\n\n     (when (not (nil? _deprecated-more-opts)) (warnf \"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"))\n     (when (contains? opts :lp-timeout) (warnf \":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"))\n\n     (when (or (not (string? ?csrf-token)) (str/blank? ?csrf-token))\n       (warnf \"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"))\n\n     (let [packer (coerce-packer packer)\n\n           [ws-url ajax-url]\n           (let [;; Not available with React Native, etc.\n                 ;; Must always provide explicit path for Java client.\n                 win-loc  #?(:clj nil :cljs (enc/get-win-loc))\n                 path     (have (or path (:pathname win-loc)))]\n\n             (if-let [f (:chsk-url-fn opts)] ; Deprecated\n               [(f path win-loc :ws)\n                (f path win-loc :ajax)]\n\n               (let [protocol (or protocol (:protocol win-loc) :http)\n                     host\n                     (if host\n                       (if port (str host \":\" port) host)\n                       (if port\n                         (str (:hostname win-loc) \":\" port)\n                         (do  (:host     win-loc))))]\n\n                 [(get-chsk-url protocol host path :ws)\n                  (get-chsk-url protocol host path :ajax)])))\n\n           private-chs\n           {:internal (chan (async/sliding-buffer 128))\n            :state    (chan (async/sliding-buffer 10))\n            :<server\n            (let [;; Nb must be >= max expected buffered-evs size:\n                  buf (async/sliding-buffer 512)]\n              (if wrap-recv-evs?\n                (chan buf (map (fn [ev] [:chsk/recv ev])))\n                (chan buf)))}\n\n           common-chsk-opts\n           {:client-id    client-id\n            :chs          private-chs\n            :params       params\n            :headers      headers\n            :packer       packer\n            :ws-kalive-ms ws-kalive-ms}\n\n           ws-chsk-opts\n           (merge common-chsk-opts\n             {:url           ws-url\n              :backoff-ms-fn backoff-ms-fn})\n\n           ajax-chsk-opts\n           (merge common-chsk-opts\n             {:url           ajax-url\n              :ajax-opts     ajax-opts\n              :backoff-ms-fn backoff-ms-fn})\n\n           auto-chsk-opts\n           {:ws-chsk-opts   ws-chsk-opts\n            :ajax-chsk-opts ajax-chsk-opts}\n\n           ?chsk\n           (-chsk-connect!\n             (case type\n               :ws      (new-ChWebSocket    ws-chsk-opts ?csrf-token)\n               :ajax\n               #?(:cljs (new-ChAjaxSocket ajax-chsk-opts ?csrf-token)\n                  :clj  (throw (UnsupportedOperationException.\n                                 \"Only :ws channel socket type supported for clj\")))\n               :auto\n               #?(:cljs (new-ChAutoSocket auto-chsk-opts ?csrf-token)\n                  :clj  (throw (UnsupportedOperationException.\n                                 \"Only :ws channel socket type supported for clj\")))))]\n\n       (if-let [chsk ?chsk]\n         (let [chsk-state_ (:state_ chsk)\n               internal-ch (:internal private-chs)\n               send-fn (partial chsk-send! chsk)\n               ev-ch\n               (async/merge\n                 [(:internal private-chs)\n                  (:state    private-chs)\n                  (:<server  private-chs)]\n                 recv-buf-or-n)\n\n               ev-msg-ch\n               (async/chan 1\n                 (map\n                   (fn [ev]\n                     (let [[ev-id ev-?data :as ev] (as-event ev)]\n                       {;; Allow client to inject into router for handler:\n                        :ch-recv internal-ch\n                        :send-fn send-fn\n                        :state   chsk-state_\n                        :event   ev\n                        :id      ev-id\n                        :?data   ev-?data}))))]\n\n           (async/pipe ev-ch ev-msg-ch)\n\n           {:chsk    chsk\n            :ch-recv ev-msg-ch\n            :send-fn send-fn\n            :state   (:state_ chsk)})\n\n         (warnf \"Failed to create channel socket\"))))\n\n;;;; Event-msg routers (handler loops)\n\n(defn- -start-chsk-router!\n  [server? ch-recv event-msg-handler opts]\n  (let [{:keys [trace-evs? error-handler simple-auto-threading?]} opts\n        ch-ctrl (chan)\n\n        execute1\n        #?(:cljs (fn [f] (f))\n           :clj\n           (if simple-auto-threading?\n             (fn [f] (future-call f))\n             (fn [f] (f))))]\n\n    (go-loop []\n      (let [[v p] (async/alts! [ch-recv ch-ctrl])\n            stop? (or (= p ch-ctrl) (nil? v))]\n\n        (when-not stop?\n          (let [{:as event-msg :keys [event]} v]\n\n            (execute1\n              (fn []\n                (enc/catching\n                  (do\n                    (when trace-evs? (tracef \"Pre-handler event: %s\" event))\n                    (event-msg-handler\n                      (if server?\n                        (have! server-event-msg? event-msg)\n                        (have! client-event-msg? event-msg))))\n                  e1\n                  (enc/catching\n                    (if-let [eh error-handler]\n                      (error-handler e1 event-msg)\n                      (errorf e1 \"Chsk router `event-msg-handler` error: %s\" event))\n                    e2 (errorf e2 \"Chsk router `error-handler` error: %s\"     event)))))\n\n            (recur)))))\n\n    (fn stop! [] (async/close! ch-ctrl))))\n\n(defn start-server-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler simple-auto-threading?]}]]\n  (-start-chsk-router! :server ch-recv event-msg-handler opts))\n\n(defn start-client-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler]}]]\n  (-start-chsk-router! (not :server) ch-recv event-msg-handler opts))\n\n;;;; Platform aliases\n\n(def event-msg? #?(:clj server-event-msg? :cljs client-event-msg?))\n\n(def make-channel-socket!\n  \"Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details.\"\n  #?(:clj  make-channel-socket-server!\n     :cljs make-channel-socket-client!))\n\n(def start-chsk-router!\n  \"Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details.\"\n  #?(:clj  start-server-chsk-router!\n     :cljs start-client-chsk-router!))\n\n;;;; Deprecated\n\n(enc/deprecated\n  #?(:clj\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-msg-handler ch-recv]\n       (start-server-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev-msg ch-recv])\n         (fn [ev-msg] (event-msg-handler ev-msg (:ch-recv ev-msg))))))\n\n  #?(:cljs\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-handler ch-recv]\n       (start-client-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev ch-recv])\n         (fn [ev-msg] (event-handler (:event ev-msg) (:ch-recv ev-msg))))))\n\n  (def set-logging-level! \"DEPRECATED. Please use `timbre/set-level!` instead\" timbre/set-level!)\n\n  #?(:cljs (def ajax-call \"DEPRECATED: Please use `ajax-lite` instead\" enc/ajax-lite))\n  #?(:cljs\n     (def default-chsk-url-fn \"DEPRECATED\"\n       (fn [path {:as location :keys [protocol host pathname]} websocket?]\n         (let [protocol\n               (if websocket?\n                 (if (= protocol \"https:\") \"wss:\" \"ws:\")\n                 protocol)]\n           (str protocol \"//\" host (or path pathname)))))))\n","~:reader-features",["^[",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/vector?","taoensso.encore/encore-version","taoensso.encore/assert-min-encore-version","taoensso.sente/sente-version","taoensso.sente/node-target?","cljs.core._EQ_","cljs.core/*target*","js/taoensso","js/taoensso.sente","js/taoensso.sente.debug-mode?_","taoensso.sente/debug-mode?_","cljs.core.atom","taoensso.sente/expected","expected","x","cljs.core/type","taoensso.sente/validate-event","cljs.core/not","G__96134","fexpr__96133","cljs.core/count","vec__96142","cljs.core.nth","ev-id","_","cljs.core/Keyword","cljs.core/namespace","taoensso.sente/assert-event","temp__5753__auto__","errs","cljs.core.ex_info","taoensso.sente/event?","taoensso.sente/as-event","temp__5751__auto__","taoensso.sente/client-event-msg?","cljs.core/map?","taoensso.encore/ks>=","map__96152","cljs.core/--destructure-map","cljs.core.get","ch-recv","send-fn","state","event","taoensso.encore/chan?","cljs.core/ifn?","taoensso.encore/atom?","taoensso.sente/server-event-msg?","map__96161","connected-uids","send-buffers","ring-req","client-id","?reply-fn","taoensso.encore/nblank-str?","p__96163","map__96164","taoensso.sente/put-server-event-msg>ch-recv!","ev-msg","vec__96165","ev-?data","valid-event","ev-msg*","cljs.core.merge","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.async.put_BANG_","taoensso.sente/cb-error?","cb-reply-clj","fexpr__96168","taoensso.sente/cb-success?","taoensso.sente/unpack","packer","prefixed-pstr","taoensso.truss.impl/-invar-violation!","vec__96169","wrapped?","taoensso.encore/str-starts-with?","pstr","cljs.core.subs","clj","e96172","taoensso.sente.interfaces/unpack","t","?cb-uuid","var_args","G__96174","taoensso.sente/pack","js/Error","taoensso.sente.interfaces/pack","wrapped-clj","cljs.core/PROTOCOL_SENTINEL","this__4404__auto__","writer__4405__auto__","opt__4406__auto__","cljs.core/-write","taoensso.sente/EdnPacker","taoensso.sente/->EdnPacker","taoensso.encore.pr_edn","s","taoensso.encore.read_edn","taoensso.sente/default-edn-packer","taoensso.sente/coerce-packer","e","p1__96179#","taoensso.truss.impl/-dummy-error","e96180","cljs.core/native-satisfies?","taoensso.sente.interfaces/IPacker","taoensso.sente/next-idx!","taoensso.encore/idx-fn","p__96188","map__96189","taoensso.sente/bad-origin?","allowed-origins","headers","origin","referer","cljs.core/contains?","cljs.core/set","p1__96187#","taoensso.encore/rsome","clojure.string/starts-with?","args__4777__auto__","len__4771__auto__","i__4772__auto__","argseq__4778__auto__","cljs.core/IndexedSeq","taoensso.sente/make-channel-socket-server!","p__96193","vec__96194","map__96197","seq96191","G__96192","cljs.core/first","cljs.core/next","self__4758__auto__","web-server-ch-adapter","recv-buf-or-n","ws-kalive-ms","lp-timeout-ms","send-buf-ms-ajax","send-buf-ms-ws","user-id-fn","bad-csrf-fn","bad-origin-fn","csrf-token-fn","handshake-data-fn","authorized?-fn","unauthorized-fn","cljs.core.async/sliding-buffer","taoensso.encore.ms","cljs.core.get_in","_ring-req","or__4160__auto__","e96198","e96199","taoensso.encore/pos-int?","p1__96190#","e96200","taoensso.sente.interfaces/IServerChanAdapter","max-ms","taoensso.sente/default-client-side-ajax-timeout-ms","fexpr__96205","cljs.core/set?","cljs.core.async.chan","G__96208","cljs.core.assoc","conns_","send-buffers_","connected-uids_","upd-conn!","conn-type","uid","taoensso.encore.swap_in_BANG_","?v","vec__96211","?sch","_udt","new-udt","taoensso.encore/now-udt","taoensso.encore/swapped","new-?sch","connect-uid!","taoensso.truss.impl/some?","e96219","newly-connected?","p__96220","map__96221","ws","ajax","any","old-m","new-m","G__96222","cljs.core.conj","old-any","new-any","upd-connected-uid!","e96224","newly-disconnected?","p__96226","map__96227","cljs.core/deref","conns'","any-ws-clients?","any-ajax-clients?","any-clients?","cljs.core.disj","p__96233","vec__96234","map__96237","user-id","ev","opts","flush?","ev-uuid","taoensso.encore.uuid_str","flush-buffer!","pulled","m","vec__96241","ev-uuids","cljs.core.dissoc","vec__96244","buffered-evs","buffered-evs-ppstr","taoensso.sente.pack","G__96247","taoensso.sente/send-buffered-server-evs>ws-clients!","taoensso.sente/send-buffered-server-evs>ajax-clients!","seq__96248","cljs.core/seq","chunk__96249","count__96250","i__96251","vec__96261","cljs.core/chunked-seq?","c__4591__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__96264","cljs.core/vals","sch","taoensso.sente.interfaces/sch-close!","seq__96271","chunk__96272","count__96273","i__96274","vec__96285","vec__96288","seq__96291","chunk__96292","count__96293","i__96294","vec__96308","vec__96312","ws-timeout","cljs.core.async/timeout","ajax-timeout","c__90682__auto__","cljs.core.async.impl.dispatch/run","f__90683__auto__","switch__90611__auto__","state_96320","state_val_96321","cljs.core.async.impl.ioc-helpers/take!","inst_96317","inst_96318","statearr-96322","cljs.core.async.impl.ioc-helpers/return-chan","statearr-96323","state-machine__90612__auto__","ret-value__90613__auto__","result__90614__auto__","cljs.core/keyword-identical?","ex__90615__auto__","e96324","statearr-96325","statearr-96326","state__90684__auto__","statearr-96327","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state_96333","state_val_96334","inst_96330","inst_96331","statearr-96335","statearr-96336","e96337","statearr-96338","statearr-96340","statearr-96343","bad-csrf?","reference-csrf-token","csrf-token-from-client","taoensso.encore/const-str=","unauthorized?","possible-rejection-resp","ev-msg-const","b2__35594__auto__","resp","taoensso.sente.interfaces/ring-req->server-ch-resp","server-ch","websocket?","vec__96348","params","ppstr","has-cb?","reply-fn","replied?_","resp-clj","cljs.core/compare-and-set!","taoensso.sente.interfaces/sch-send!","ms","state_96356","state_val_96357","inst_96351","inst_96353","inst_96354","statearr-96364","statearr-96373","e96377","statearr-96379","statearr-96381","statearr-96387","sch-uuid","receive-event-msg!","taoensso$sente$self","send-handshake!","?handshake-data","handshake-ev","clojure.string/blank?","err-msg","updated-conn","udt-open","state_96449","state_val_96450","inst_96445","statearr-96453","inst_96404","inst_96405","statearr-96454","statearr-96455","inst_96416","inst_96410","inst_96412","inst_96413","cljs.core/PersistentVector","inst_96414","inst_96415","statearr-96458","statearr-96459","statearr-96460","inst_96427","inst_96437","statearr-96462","statearr-96463","statearr-96464","inst_96447","statearr-96465","inst_96408","inst_96433","inst_96434","statearr-96468","statearr-96469","inst_96425","inst_96428","statearr-96471","statearr-96472","statearr-96473","inst_96442","statearr-96474","inst_96431","statearr-96475","statearr-96476","statearr-96477","e96478","statearr-96479","statearr-96480","statearr-96481","taoensso.sente.interfaces/sch-open?","handshake?","state_96509","state_val_96510","inst_96484","inst_96491","inst_96486","inst_96487","inst_96488","inst_96489","inst_96490","statearr-96518","statearr-96519","statearr-96520","inst_96496","inst_96497","inst_96498","statearr-96522","statearr-96526","statearr-96527","statearr-96528","inst_96507","inst_96500","inst_96501","statearr-96529","statearr-96530","inst_96504","statearr-96534","statearr-96536","e96537","statearr-96539","statearr-96540","statearr-96543","req-ppstr","vec__96544","_status","udt-close","state_96650","state_val_96651","statearr-96655","inst_96586","statearr-96659","statearr-96662","inst_96596","inst_96598","inst_96624","inst_96597","inst_96619","inst_96620","inst_96621","inst_96623","vec__96589","statearr-96667","statearr-96668","statearr-96669","inst_96611","inst_96612","inst_96613","statearr-96670","inst_96634","inst_96636","inst_96637","inst_96638","statearr-96671","inst_96588","inst_96592","inst_96593","inst_96594","inst_96595","inst_96605","statearr-96672","statearr-96673","statearr-96674","inst_96644","statearr-96675","inst_96626","inst_96627","inst_96628","inst_96629","inst_96630","inst_96631","statearr-96676","statearr-96677","statearr-96678","inst_96616","inst_96617","statearr-96679","statearr-96680","statearr-96681","inst_96641","statearr-96682","statearr-96683","inst_96647","statearr-96684","e96685","statearr-96686","statearr-96687","statearr-96688","_?sch","udt-t1","disconnect?","p__96622","vec__96664","_sch","?m","cljs.core/empty?","error","buffered-evs-pstr","seq__96696","chunk__96697","count__96698","i__96699","vec__96719","vec__96722","vec__96725","vec__96728","ms-backoffs","client-ids-unsatisfied","cljs.core/keys","state_96809","state_val_96810","inst_96763","inst_96755","inst_96754","inst_96778","inst_96779","cljs.core/PersistentHashSet","inst_96780","statearr-96820","inst_96753","statearr-96821","statearr-96822","statearr-96823","inst_96800","statearr-96828","inst_96786","inst_96791","inst_96792","inst_96793","inst_96770","statearr-96832","statearr-96836","statearr-96837","inst_96805","inst_96803","statearr-96841","inst_96757","inst_96760","inst_96761","inst_96762","inst_96764","taoensso.truss.impl/non-throwing","inst_96765","statearr-96871","statearr-96872","statearr-96873","statearr-96874","inst_96783","inst_96785","statearr-96875","statearr-96876","statearr-96877","inst_96768","statearr-96878","statearr-96879","inst_96795","inst_96796","statearr-96880","statearr-96881","inst_96788","inst_96789","statearr-96882","statearr-96883","statearr-96884","statearr-96885","e96887","statearr-96888","statearr-96889","statearr-96890","n","client-ids-satisfied","?pulled","ks-to-pull","cljs.core.remove","cljs.core.reduce","k","vec__96868","udt","cljs.core/select-keys","cljs.core/reduce-kv","p__96777","vec__96814","sent?","cljs.core.into","cljs.core/complement","cljs.core/rand-int","taoensso.sente/ajax-lite","taoensso.encore/ajax-lite","taoensso$sente$IChSocket$_chsk_connect_BANG_$dyn","x__4463__auto__","m__4464__auto__","taoensso.sente/-chsk-connect!","goog/typeOf","m__4461__auto__","cljs.core/missing-protocol","taoensso$sente$IChSocket$_chsk_disconnect_BANG_$dyn","taoensso.sente/-chsk-disconnect!","taoensso$sente$IChSocket$_chsk_reconnect_BANG_$dyn","taoensso.sente/-chsk-reconnect!","taoensso$sente$IChSocket$_chsk_send_BANG_$dyn","taoensso.sente/-chsk-send!","taoensso.sente/IChSocket","chsk","reason","taoensso.sente/chsk-connect!","taoensso.sente/chsk-disconnect!","taoensso.sente/chsk-reconnect!","taoensso.sente/chsk-destroy!","G__97039","taoensso.sente/chsk-send!","taoensso.sente.chsk_send_BANG_","?timeout-ms","?cb","cljs.core/boolean","taoensso.sente/chsk-send->closed!","?cb-fn","taoensso.sente/assert-send-args","taoensso.encore/nat-int?","taoensso.sente/pull-unused-cb-fn!","cbs-waiting_","cb-uuid","?f","taoensso.sente/swap-chsk-state!","f","vec__97115","old-state","new-state","cljs.core.not_EQ_","output","taoensso.sente/chsk-state->closed","e97127","G__97132","taoensso.truss.impl/set*","e97131","taoensso.sente/cb-chan-as-fn","e97134","vec__97142","cb-ch","reply","cljs.core.keyword","taoensso.encore/as-qname","taoensso.sente/receive-buffered-evs!","chs","seq__97167","chunk__97168","count__97169","i__97170","vec__97182","vec__97187","id","taoensso.sente/handshake?","vec__97196","x1","taoensso.sente/receive-handshake!","chsk-type","G__97209","e97201","e97210","vec__97213","vec__97216","map__97219","?uid","ever-opened?_","first-handshake?","p1__97200#","taoensso.sente/?node-npm-websocket_","make-package-name","prefix","require-fn","js/require","cljs.core/constantly","e97222","G__97223","p__97226","map__97227","taoensso.sente/create-js-client-websocket!","onerror-fn","onmessage-fn","onclose-fn","uri-str","WebSocket","taoensso.encore.oget","goog/global","socket","G__97230","p__97231","map__97232","taoensso.sente/create-websocket!","this__4415__auto__","k__4416__auto__","this__4417__auto__","k97240","else__4418__auto__","G__97244","url","state_","instance-handle_","retry-count_","backoff-ms-fn","socket_","udt-last-comms_","__extmap","this__4434__auto__","f__4435__auto__","init__4436__auto__","ret__4437__auto__","p__97245","vec__97246","k__4438__auto__","v__4439__auto__","this__4429__auto__","writer__4430__auto__","opts__4431__auto__","pr-pair__4432__auto__","keyval__4433__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","G__97239","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4413__auto__","__meta","this__4410__auto__","__hash","this__4419__auto__","this__4411__auto__","h__4273__auto__","coll__4412__auto__","cljs.core/hash-unordered-coll","this97241","other97242","this__4424__auto__","k__4425__auto__","cljs.core/-with-meta","cljs.core/not-empty","this__4422__auto__","k__4423__auto__","pred__97255","expr__97256","this__4427__auto__","cljs.core/MapEntry","this__4414__auto__","this__4420__auto__","entry__4421__auto__","cljs.core/-nth","cljs.core/-conj","taoensso.sente/ChWebSocket","this__4458__auto__","cljs.core/List","writer__4459__auto__","G__97243","extmap__4454__auto__","G__97429","cljs.core/record?","taoensso.sente/->ChWebSocket","taoensso.sente/map->ChWebSocket","cljs.core/reset!","p1__97233#","map__97284","taoensso.encore.reset_in_BANG_","e97293","timeout-ms","state_97304","state_val_97305","inst_97294","inst_97297","inst_97296","statearr-97306","statearr-97307","statearr-97308","inst_97299","statearr-97313","statearr-97314","inst_97302","statearr-97315","e97320","statearr-97321","statearr-97322","statearr-97325","e97328","cb-fn*","e97332","instance-handle","have-handle?","connect-fn","retry-fn","retry-count*","cljs.core.swap_BANG_","cljs.core/inc","backoff-ms","udt-next-reconnect","p1__97234#","ws-ev","e97339","cljs.core.js__GT_clj","p1__97235#","vec__97344","cb-fn","last-ws-close","p1__97237#","p1__97238#","?socket","e97351","taoensso.encore/merge-url-with-query-string","old-socket","state_97387","state_val_97388","inst_97383","statearr-97389","statearr-97391","inst_97360","inst_97361","statearr-97395","statearr-97396","statearr-97397","statearr-97398","inst_97385","inst_97357","inst_97358","statearr-97399","statearr-97400","inst_97363","inst_97365","statearr-97401","statearr-97402","inst_97379","statearr-97404","statearr-97405","inst_97368","inst_97370","inst_97371","inst_97373","inst_97374","inst_97375","cljs.core/PersistentHashMap","inst_97376","statearr-97410","statearr-97414","e97417","statearr-97419","statearr-97421","statearr-97422","taoensso.sente/new-ChWebSocket","csrf-token","k97440","G__97450","ajax-opts","curr-xhr_","p__97454","vec__97455","G__97439","this97441","other97442","pred__97473","expr__97474","taoensso.sente/ChAjaxSocket","G__97443","G__97511","taoensso.sente/->ChAjaxSocket","taoensso.sente/map->ChAjaxSocket","p1__97433#","map__97485","G__97489","G__97490","G__97491","p__97492","map__97493","?error","?content","p1__97434#","vec__97497","content","resp-ppstr","p1__97435#","poll-fn","retry-count","p1__97436#","G__97503","G__97504","G__97505","p__97506","map__97507","p1__97437#","vec__97508","p1__97438#","taoensso.sente/new-ChAjaxSocket","k97513","G__97517","ws-chsk-opts","ajax-chsk-opts","impl_","p__97518","vec__97519","G__97512","this97514","other97515","pred__97522","expr__97523","taoensso.sente/ChAutoSocket","G__97516","G__97526","taoensso.sente/->ChAutoSocket","taoensso.sente/map->ChAutoSocket","impl","map__97525","ajax-conn!","cljs.core/remove-watch","ws-conn!","downgraded?_","cljs.core/add-watch","taoensso.sente/new-ChAutoSocket","taoensso.sente/get-chsk-url","protocol","host","path","type","G__97527","G__97529","e97528","G__97530","G__97531","taoensso.encore.path","taoensso.sente/make-channel-socket-client!","p__97535","vec__97536","map__97539","seq97532","G__97533","G__97534","?csrf-token","port","wrap-recv-evs?","taoensso.encore/exp-backoff","_deprecated-more-opts","G__97541","e97540","e97542","vec__97543","ws-url","ajax-url","win-loc","taoensso.encore/get-win-loc","z","e97546","taoensso.truss.impl/WrappedError","e97547","private-chs","buf","cljs.core.map","common-chsk-opts","auto-chsk-opts","?chsk","G__97548","chsk-state_","internal-ch","cljs.core.partial","ev-ch","cljs.core.async.merge","ev-msg-ch","vec__97549","cljs.core.async.pipe","taoensso.sente/-start-chsk-router!","server?","event-msg-handler","map__97552","trace-evs?","error-handler","simple-auto-threading?","ch-ctrl","execute1","state_97580","state_val_97581","statearr-97582","inst_97557","inst_97558","inst_97559","cljs.core.async/ioc-alts!","inst_97578","inst_97566","inst_97561","inst_97563","inst_97562","inst_97564","inst_97565","statearr-97583","statearr-97584","statearr-97585","statearr-97586","inst_97570","inst_97571","inst_97572","vec__97554","map__97569","inst_97573","statearr-97592","statearr-97593","inst_97576","statearr-97594","statearr-97595","e97596","statearr-97597","statearr-97598","statearr-97599","v","p","stop?","event-msg","e97587","G__97589","e97590","e97591","e1","e97588","eh","e2","cljs.core.async/close!","taoensso.sente/start-server-chsk-router!","p__97603","vec__97604","map__97607","seq97600","G__97601","G__97602","taoensso.sente/start-client-chsk-router!","p__97611","vec__97612","map__97615","seq97608","G__97609","G__97610","taoensso.sente/event-msg?","taoensso.sente/make-channel-socket!","taoensso.sente/start-chsk-router!","taoensso.sente/start-chsk-router-loop!","event-handler","G__97616","G__97617","taoensso.sente/set-logging-level!","taoensso.timbre/set-level!","taoensso.sente/ajax-call","taoensso.sente/default-chsk-url-fn","p__97618","map__97619","location","pathname"]],"~:used-vars",["^[",["~$taoensso.sente/-chsk-send!","~$taoensso.encore/idx-fn","~$taoensso.sente/get-chsk-url","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/keyword","~$taoensso.encore/read-edn","~$clojure.string/starts-with?","~$taoensso.sente/->EdnPacker","~$taoensso.sente/as-event","~$taoensso.sente/pack","~$taoensso.sente/chsk-state->closed","~$cljs.core/pr-sequential-writer","~$taoensso.sente/map->ChAjaxSocket","~$taoensso.sente/receive-handshake!","~$cljs.core/vector?","~$taoensso.sente/sente-version","~$clojure.string/blank?","~$cljs.core/=","~$taoensso.sente/server-event-msg?","~$taoensso.sente/chsk-destroy!","~$taoensso.sente.interfaces/sch-send!","~$cljs.core/ifn?","~$cljs.core/-assoc","~$taoensso.truss.impl/-invar-violation!","~$taoensso.sente/node-target?","~$cljs.core/-write","~$taoensso.sente/ajax-lite","~$taoensso.timbre/-log!","~$taoensso.sente/make-channel-socket!","~$cljs.core/-iterator","~$taoensso.encore/rsome","~$cljs.core/count","~$taoensso.encore/as-qname","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","~$taoensso.encore/pr-edn","~$cljs.core/Keyword","~$taoensso.sente/-chsk-disconnect!","~$taoensso.sente/event?","~$taoensso.sente/create-websocket!","~$taoensso.sente/ChWebSocket","~$cljs.core/not=","~$taoensso.sente/send-buffered-server-evs>ws-clients!","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$taoensso.sente/chsk-send!","~$cljs.core/Delay","~$cljs.core.async/put!","~$cljs.core/chunk-rest","~$cljs.core/atom","~$taoensso.sente/validate-event","~$cljs.core/-with-meta","~$cljs.core/concat","~$taoensso.encore/nat-int?","~$taoensso.sente/-chsk-reconnect!","~$taoensso.sente/ChAjaxSocket","~$taoensso.sente/-chsk-connect!","~$taoensso.sente/pull-unused-cb-fn!","~$js/taoensso.sente","~$taoensso.sente/put-server-event-msg>ch-recv!","~$taoensso.sente/make-channel-socket-server!","~$taoensso.sente/assert-event","~$cljs.core/set","~$js/taoensso","~$taoensso.sente/chsk-connect!","~$cljs.core/empty?","~$js/taoensso.sente.debug-mode?_","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$taoensso.encore/ks>=","~$taoensso.timbre/*config*","~$taoensso.encore/nblank-str?","~$cljs.core/-conj","~$cljs.core/namespace","~$taoensso.sente/start-chsk-router!","~$taoensso.sente/default-edn-packer","~$cljs.core.async.impl.dispatch/run","~$taoensso.encore/assert-min-encore-version","~$taoensso.sente/create-js-client-websocket!","~$cljs.core.async/pipe","~$taoensso.sente/assert-send-args","~$taoensso.sente/ajax-call","~$cljs.core/PersistentVector","~$cljs.core/get-in","~$cljs.core/List","~$taoensso.sente/coerce-packer","~$taoensso.encore/swap-in!","~$taoensso.sente/expected","~$taoensso.sente/bad-origin?","~$cljs.core/get","~$taoensso.sente/handshake?","~$taoensso.sente/start-server-chsk-router!","~$taoensso.sente/receive-buffered-evs!","~$taoensso.sente/unpack","~$taoensso.encore/atom?","~$cljs.core/-nth","~$cljs.core.async/close!","~$taoensso.sente/next-idx!","~$taoensso.sente/-start-chsk-router!","~$cljs.core/not-empty","~$taoensso.sente/new-ChAjaxSocket","~$taoensso.encore/ajax-lite","~$taoensso.sente/default-chsk-url-fn","~$taoensso.sente/cb-error?","~$taoensso.sente/start-chsk-router-loop!","~$taoensso.encore/ms","~$taoensso.sente/chsk-send->closed!","~$taoensso.sente/EdnPacker","~$taoensso.sente/ChAutoSocket","~$taoensso.sente/->ChAutoSocket","~$cljs.core/-lookup","~$taoensso.encore/path","~$cljs.core/ex-info","~$taoensso.encore/chan?","~$cljs.core/nil-iter","~$taoensso.sente/send-buffered-server-evs>ajax-clients!","~$taoensso.sente/default-client-side-ajax-timeout-ms","~$taoensso.sente/set-logging-level!","~$taoensso.encore/encore-version","~$cljs.core/*target*","~$taoensso.encore/now-udt","~$cljs.core/next","~$taoensso.sente/swap-chsk-state!","~$taoensso.sente/->ChAjaxSocket","~$cljs.core/RecordIter","~$taoensso.encore/swapped","~$taoensso.sente/event-msg?","~$cljs.core/not","~$taoensso.encore/reset-in!","~$taoensso.sente/new-ChWebSocket","~$cljs.core/assoc","~$taoensso.sente/chsk-reconnect!","~$taoensso.timbre/set-level!","~$taoensso.sente/client-event-msg?","~$taoensso.sente/start-client-chsk-router!","~$js/require","~$taoensso.sente/new-ChAutoSocket","~$taoensso.sente/make-channel-socket-client!","~$cljs.core/merge","~$taoensso.sente/map->ChAutoSocket","~$taoensso.sente/debug-mode?_","~$taoensso.sente/IChSocket","~$js/Error","~$taoensso.sente/chsk-disconnect!","~$taoensso.sente/map->ChWebSocket","~$taoensso.sente/cb-success?","~$taoensso.sente/->ChWebSocket","~$cljs.core/boolean","~$taoensso.sente.interfaces/ring-req->server-ch-resp","~$cljs.core/type","~$taoensso.sente/cb-chan-as-fn","~$taoensso.sente/?node-npm-websocket_","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1X","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^[",[]],"~:deps-syms",["^1<","~$goog.dom.HtmlElement"]]],["^1X","goog/async/freelist.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/core/async/impl/ioc_helpers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","~$cljs.core.async.impl.protocols"]]],["^1X","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.labs.userAgent.util","~$goog.string"]]],["^1X","taoensso/sente/interfaces.cljc"],["c1f17aca6ea8871ecef4db45de04af627144de69","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^R"]]],["^1X","cljs/core/async.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5X","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1X","goog/timer/timer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.Promise","~$goog.events.EventTarget"]]],["^1X","cljs/tools/reader/impl/utils.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","^5Z"]]],["^1X","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","~$goog.asserts"]]],["^1X","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^5Z"]]],["^1X","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1X","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^5Y","~$goog.object","~$goog.string.internal"]]],["^1X","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^6;"]]],["^1X","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67"]]],["^1X","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^5Y","~$goog.reflect","^5Z"]]],["^1X","goog/structs/prioritypool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1X","goog/async/run.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1X","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/async/workqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.async.FreeList"]]],["^1X","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^68","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1X","goog/promise/resolver.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^69"]]],["^1X","cljs/tools/reader/edn.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^5Z","~$goog.string.StringBuffer"]]],["^1X","goog/structs/priorityqueue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.structs.Heap"]]],["^1X","goog/net/xhrio.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.Timer","^64","^67","^6L","^66","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^6:","^5Z","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^69"]]],["^1X","goog/promise/thenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","taoensso/sente.cljc"],["c1f17aca6ea8871ecef4db45de04af627144de69","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","^1:","^R","^N","^18"]]],["^1X","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/tools/reader/impl/inspect.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;"]]],["^1X","cljs/tools/reader.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6Q","^6R","^6S","^6P","^64","^5Z","^6U"]]],["^1X","goog/net/wrapperxmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1X","goog/events/eventtarget.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.Disposable","^67","~$goog.events","~$goog.events.Event","^6N","^6O","^6:"]]],["^1X","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.disposable.IDisposable"]]],["^1X","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67"]]],["^1X","taoensso/encore.cljc"],["b3323c27a5e52116fd63b18ea4641ed8c11c9177","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^6:","^5Z","~$goog.string.format","^6U","^78","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^6[","^6Z","~$taoensso.truss"]]],["^1X","goog/structs/set.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^72","~$goog.structs.Collection","^73"]]],"~:SHADOW-TIMESTAMP",[1621409642000,1621409642000,1620991109000],["^1X","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","^6E"]]],["^1X","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.events.ListenableKey"]]],["^1X","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.html.trustedtypes","^6>","^6?","^6@","^6A"]]],["^1X","cljs/core/async/impl/channels.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5X","^62","^60"]]],["^1X","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","~$goog.events.Listener","^6:"]]],["^1X","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","~$taoensso.truss.impl"]]],["^1X","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/core/async/impl/dispatch.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^60","^6I"]]],["^1X","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","~$goog.html.SafeUrl","^6@","^6A","^6;"]]],["^1X","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^7I","^6=","~$goog.html.uncheckedconversions","^6@","^6;"]]],["^1X","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^7;"]]],["^1X","cljs/core/async/impl/protocols.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;"]]],["^1X","goog/net/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1X","goog/net/xhriopool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^7?","~$goog.structs.PriorityPool"]]],["^1X","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","~$goog.dom.TagName","~$goog.dom.tags","^7M","^7N","~$goog.html.SafeStyleSheet","^7I","^6=","^7F","^6>","^6?","^6B","^6:","^6@","^6A","^6;"]]],["^1X","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^6:"]]],["^1X","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/structs/queue.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64"]]],["^1X","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^5Y","^5Z"]]],["^1X","taoensso/timbre/appenders/core.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","^R"]]],["^1X","cljs/reader.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6:","^6T","^7=","^6U"]]],["^1X","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^7S","~$goog.dom.safe","^7L","^7O","~$goog.math.Coordinate","~$goog.math.Size","^6:","^5Z","~$goog.string.Unicode","^69"]]],["^1X","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.debug.Error","^7W"]]],["^1X","cljs/core/async/impl/buffers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5X"]]],["^1X","goog/debug/logbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.debug.LogRecord"]]],["^1X","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","^5Z","^72","^73","^74","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1X","goog/net/errorcode.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/promise/promise.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.Thenable","^67","^6K","~$goog.async.run","^6J","^80","~$goog.promise.Resolver"]]],["^1X","cljs/core/async/impl/timers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5X","^5[","^62"]]],["^1X","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/debug/logrecord.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",[]]],["^1X","goog/json/hybrid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.json"]]],["^1X","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^6:"]]],["^1X","cljs/tools/reader/impl/errors.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6Q","^1?","~$cljs.tools.reader.impl.inspect"]]],["^1X","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^5Z","^6U"]]],["^1X","goog/structs/pool.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^77","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1X","goog/net/httpstatus.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/structs/heap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^6:","~$goog.structs.Node"]]],["^1X","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67"]]],["^1X","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^7X","^7O","^6@","^6;"]]],["^1X","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^6;"]]],["^1X","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","~$goog.debug.errorcontext","^69"]]],["^1X","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.math"]]],["^1X","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/tools/reader/reader_types.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6R","^5Z","^6U"]]],["^1X","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","^7K","^8="]]],["^1X","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^6L","~$goog.dom","^7S","^7X","^7K","^7L","^6=","^6B","^6C","^6@"]]],["^1X","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","^7L","^7M","^7N","^7U","^7I","^6=","^6@","^6;"]]],["^1X","goog/debug/logger.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","~$goog.debug","~$goog.debug.LogBuffer","^81"]]],["^1X","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^77","~$goog.events.EventId"]]],["^1X","cljs/tools/reader/impl/commons.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^6P","^6Q","^6R"]]],["^1X","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","~$goog.math.Long","~$goog.math.Integer","^5Z","^6:","^64","~$goog.Uri","^6U"]]],["^1X","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","^7F","^6@","^6A"]]],["^1X","goog/log/log.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^8?","~$goog.debug.LogManager","^81","~$goog.debug.Logger"]]],["^1X","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","^7N","^6:","^6@","^6A","^6;"]]],["^1X","goog/structs/collection.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^8?","^68","^79","~$goog.events.EventType","^6E","^69"]]],["^1X","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^6E"]]],["^1X","goog/structs/node.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^69"]]],["^1X","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;"]]],["^1X","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^64","^67","^5Z"]]],["^1X","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","^6A"]]],["^1X","taoensso/timbre.cljs"],["daf6b8826cb16aed7fb3e0dd7a5c5266d2a53854","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^1;","^1?","^R","~$taoensso.timbre.appenders.core"]]],["^1X","goog/json/json.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]],["^1X","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^8A"]]],["^1X","goog/net/xmlhttpfactory.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^75"]]],["^1X","goog/net/xmlhttp.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<","^67","~$goog.net.WrapperXmlHttpFactory","^76"]]],["^1X","goog/net/xhrlike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5S",["^ ","^5T",null,"^5U",["^[",[]],"^5V",["^1<"]]]]],"~:clj-info",["^ ","jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/dispatch.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer.clj",1620986529000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/reader.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1620986767000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1626384491000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/channels.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1626384491000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/utils.clj",1620986529000,"jar:file:/Users/lcerveau/.m2/repository/com/taoensso/sente/1.16.0/sente-1.16.0.jar!/taoensso/sente.cljc",1626384492000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/concurrent.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/ioc_macros.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1626384491000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/cljs/tools/reader/reader_types.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1626384491000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/macros.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/protocols.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm/utils.clj",1620986528000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/edn.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/impl/ioc_macros.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1626384491000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1626384491000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/mutex.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596475466000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/timers.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1626384491000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/ast.clj",1620986529000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.analyzer.jvm/1.1.0/tools.analyzer.jvm-1.1.0.jar!/clojure/tools/analyzer/jvm.clj",1620986528000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar!/clojure/tools/analyzer/env.clj",1620986529000,"jar:file:/Users/lcerveau/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1626384491000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/buffers.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/com/taoensso/sente/1.16.0/sente-1.16.0.jar!/taoensso/sente/interfaces.cljc",1626384492000,"jar:file:/Users/lcerveau/.m2/repository/com/taoensso/encore/3.1.0/encore-3.1.0.jar!/taoensso/encore.cljc",1626384491000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/exec/threadpool.clj",1620986527000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1620991109000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","^8","taoensso/sente.cljc","^9",1,"^:",5,"^;",1,"^<",19],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"~:shadow/protocol-prefixes",["^[",["taoensso$sente$IChSocket$"]],"^J",["^ ","^K","^L","^M","^N","^O","^P","^Q","^R","^S","^P","^T","^R","^U","^R","^V","^N","^W","^N","^X","^N","^Y","^N"],"^Z",["^[",[]],"^10",["^ "],"^11","^L","^14",null,"^15",["^ ","^16","^N","^17","^18","^19","^1:","^1;","^1;","^1<","^1<","^18","^18","^1:","^1:","^1=","^R","^N","^N","^1>","^1?","^1?","^1?","^R","^R"],"^1@",["^[",["^1A","^1B"]],"~:shadow/js-access-global",["^[",["require","Error"]],"^1C",["^ ","^1D","^1:","^1E","^1:","^1F","^1:","^1G","^1:","^1H","^R","^1I","^R","^1J","^R","^1K","^R"],"~:defs",["^ ","~$chsk-state->closed",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",923,"^:",11,"^;",923,"^<",29,"~:private",true,"~:arglists",["^1O",["~$quote",["^1O",[["~$state","~$reason"]]]]]],"^:7",true,"^11","^2B","^8","taoensso/sente.cljc","^<",29,"~:method-params",["^1O",[["^::","^:;"]]],"~:protocol-impl",null,"~:arglists-meta",["^1O",[null,null]],"^:",4,"~:variadic?",false,"^9",923,"~:ret-tag",["^[",[null,"~$clj","~$any"]],"^;",923,"~:max-fixed-arity",2,"~:fn-var",true,"^:8",["^1O",["^:9",["^1O",[["^::","^:;"]]]]]],"~$assert-send-args",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",885,"^:",11,"^;",885,"^<",27,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["~$x","~$?timeout-ms","~$?cb"]]]]]],"^:7",true,"^11","^44","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["~$x","^:F","^:G"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",885,"^:@","~$clj-nil","^;",885,"^:C",3,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["~$x","^:F","^:G"]]]]]],"~$map->ChAjaxSocket",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"~:internal-ctor",true,"~:factory","~:map","^9",1307,"^;",1307,"^:8",["^1O",["^:9",["^1O",[["~$G__97443"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"^11","^2D","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^:M"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:J",true,"^:?",false,"^:K","^:L","^9",1307,"^:@","^3E","^;",1307,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^:M"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"~$sente-version",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",113,"^:",6,"^;",113,"^<",19],"^11","^2G","^8","taoensso/sente.cljc","^<",19,"^:",1,"^9",113,"^;",113,"~:tag","~$cljs.core/IVector","^7","Useful for identifying client/server mismatch"],"~$->EdnPacker",["^ ","^:6",null,"^5",["^ ","~:protocols",["^[",["~$taoensso.sente.interfaces/IPacker"]],"^8","taoensso/sente.cljc","^<",19,"^:",10,"^:K","~:positional","^9",240,"^;",240,"^:8",["^1O",["^:9",["^1O",[[]]]]],"~:skip-protocol-flag",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"^:R",["^[",["^:S"]],"^11","^2?","^8","taoensso/sente.cljc","^<",19,"^:<",["^1O",[[]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^:K","^:T","^9",240,"^:@","^4O","^;",240,"^:C",0,"^:D",true,"^:8",["^1O",["^:9",["^1O",[[]]]]],"^:U",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"~$as-event",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",149,"^:",7,"^;",149,"^<",15,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"^11","^2@","^8","taoensso/sente.cljc","^<",15,"^:<",["^1O",[["~$x"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",149,"^:@",["^[",[null,"^:P"]],"^;",149,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"~$server-event-msg?",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",166,"^:",7,"^;",166,"^<",24,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"^11","^2J","^8","taoensso/sente.cljc","^<",24,"^:<",["^1O",[["~$x"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",166,"^:@","~$boolean","^;",166,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"~$send-buffered-server-evs>ws-clients!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",790,"^:",8,"^;",790,"^<",44,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["~$conns_","~$uid","~$buffered-evs-pstr","~$upd-conn!"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"^:7",true,"^11","^38","^8","taoensso/sente.cljc","^<",44,"^:<",["^1O",[["^:Z","^:[","^;0","^;1"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",790,"^:@","^:H","^;",790,"^:C",4,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^:Z","^:[","^;0","^;1"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"~$pack",["^ ","^:6",null,"^5",["^ ","^:7",true,"^8","taoensso/sente.cljc","^<",12,"~:top-fn",["^ ","^:?",false,"~:fixed-arity",3,"^:C",3,"^:<",[["~$packer","^:A"],["^;5","^:A","~$?cb-uuid"]],"^:8",["^1O",[["^;5","^:A"],["^;5","^:A","^;6"]]],"^:>",["^1O",[null,null]]],"^:",8,"^9",224,"^;",224,"^:8",["^1O",["^:9",["^1O",[["^;5","^:A"],["^;5","^:A","^;6"]]]]],"^7","clj->prefixed-pstr"],"^:7",true,"^11","^2A","^8","taoensso/sente.cljc","^<",12,"^;3",["^ ","^:?",false,"^;4",3,"^:C",3,"^:<",[["^;5","^:A"],["^;5","^:A","^;6"]],"^:8",["^1O",[["^;5","^:A"],["^;5","^:A","^;6"]]],"^:>",["^1O",[null,null]]],"^:<",[["^;5","^:A"],["^;5","^:A","^;6"]],"^:=",null,"^;4",3,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"~:methods",[["^ ","^;4",2,"^:?",false,"^:O","~$string"],["^ ","^;4",3,"^:?",false,"^:O","^;8"]],"^9",224,"^;",224,"^:C",3,"^:D",true,"^:8",["^1O",[["^;5","^:A"],["^;5","^:A","^;6"]]],"^7","clj->prefixed-pstr"],"~$chsk-send!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",871,"^:",10,"^;",871,"^<",20,"^:8",["^1O",["^:9",["^1O",[["~$chsk","~$ev"],["^;:","^;;","^:F","^:G"],["^;:","^;;","~$opts"]]]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success.","^;3",["^ ","^:?",false,"^;4",4,"^:C",4,"^:<",[["^;:","^;;"],["^;:","^;;","^:F","^:G"],["^;:","^;;","^;<"]],"^:8",["^1O",[["^;:","^;;"],["^;:","^;;","^:F","^:G"],["^;:","^;;","^;<"]]],"^:>",["^1O",[null,null,null]]]],"^11","^3;","^8","taoensso/sente.cljc","^<",20,"^;3",["^ ","^:?",false,"^;4",4,"^:C",4,"^:<",[["^;:","^;;"],["^;:","^;;","^:F","^:G"],["^;:","^;;","^;<"]],"^:8",["^1O",[["^;:","^;;"],["^;:","^;;","^:F","^:G"],["^;:","^;;","^;<"]]],"^:>",["^1O",[null,null,null]]],"^:<",[["^;:","^;;"],["^;:","^;;","^:F","^:G"],["^;:","^;;","^;<"]],"^:=",null,"^;4",4,"^:>",["^1O",[null,null,null]],"^:",4,"^:?",false,"^;7",[["^ ","^;4",2,"^:?",false,"^:O","^:B"],["^ ","^;4",4,"^:?",false,"^:O","^:B"],["^ ","^;4",3,"^:?",false,"^:O","^:B"]],"^9",871,"^;",871,"^:C",4,"^:D",true,"^:8",["^1O",[["^;:","^;;"],["^;:","^;;","^:F","^:G"],["^;:","^;;","^;<"]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success."],"~$validate-event",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",127,"^:",7,"^;",127,"^<",21,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"^11","^3@","^8","taoensso/sente.cljc","^<",21,"^:<",["^1O",[["~$x"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",127,"^:@",["^[",["~$cljs.core/IMap","^:H"]],"^;",127,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"~$event?",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",148,"^:",7,"^;",148,"^<",13,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"^11","^34","^8","taoensso/sente.cljc","^<",13,"^:<",["^1O",[["~$x"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",148,"^:@","^:X","^;",148,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"~$event-msg?",["^ ","^11","^56","^8","taoensso/sente.cljc","^9",1776,"^:",1,"^;",1776,"^<",16,"^5",["^ ","^8","taoensso/sente.cljc","^9",1776,"^:",6,"^;",1776,"^<",16]],"~$make-channel-socket!",["^ ","^11","^2T","^8","taoensso/sente.cljc","^9",1778,"^:",1,"^;",1778,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1778,"^:",6,"^;",1778,"^<",26],"^7","Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details."],"~$create-websocket!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1074,"^:",8,"^;",1074,"^<",25,"^:7",true,"^:8",["^1O",["^:9",["^1O",[[["^ ","^1Q","^;<","~:keys",["~$onerror-fn","~$onmessage-fn","~$onclose-fn","~$uri-str","~$headers"]]]]]]]],"^:7",true,"^11","^35","^8","taoensso/sente.cljc","^<",25,"^:<",["^1O",[["~$p__97231"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",1074,"^:@",["^[",["~$WebSocket","^:H"]],"^;",1074,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[[["^ ","^1Q","^;<","^;C",["^;D","^;E","^;F","^;G","^;H"]]]]]]]],"~$make-channel-socket-server!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",297,"^:",7,"^;",297,"^<",34,"^:8",["^1O",["^:9",["^1O",[["~$web-server-ch-adapter","~$&",[["^ ","^;C",["~$recv-buf-or-n","~$ws-kalive-ms","~$lp-timeout-ms","~$send-buf-ms-ajax","~$send-buf-ms-ws","~$user-id-fn","~$bad-csrf-fn","~$bad-origin-fn","~$csrf-token-fn","~$handshake-data-fn","^;5","~$allowed-origins","~$authorized?-fn","~$unauthorized-fn"],"~:or",["^ ","^;N",["^1O",["~$enc/ms","~:secs",25]],"^;Q",30,"^;W","~:all","^;O",["^1O",["^;[","^<0",20]],"^;U",["^1O",["~$fn",["~$ring-req"],["^1O",["~$or",["^1O",["~:anti-forgery-token","^<3"]],["^1O",["~$get-in","^<3",["~:session","~:csrf-token"]]],["^1O",["^<6","^<3",["^<7","~:ring.middleware.anti-forgery/anti-forgery-token"]]],["^1O",["^<6","^<3",["^<7","__anti-forgery-token"]]]]]]],"^;5","~:edn","^;Y",["^1O",["^<2",["~$_ring-req"],["^ ","~:status",401,"~:body","Unauthorized request"]]],"^;P",100,"^;T",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Unauthorized origin"]]],"^;V",["^1O",["^<2",["^<3"],null]],"^;R",["^1O",["^<2",["^<3"],["^1O",["^<6","^<3",["^<7","~:uid"]]]]],"^;M",["^1O",["~$async/sliding-buffer",1000]],"^;S",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Bad CSRF token"]]]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn                     ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n\n    :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n    :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Security options:\n\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n\n    :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n                       ; must return truthy, otherwise connection requests will be\n                       ; rejected with (unauthorized-fn <ring-req>) response.\n                       ;\n                       ; May check Authroization HTTP header, etc.\n\n  Other common options:\n\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).","^;3",["^ ","^:?",true,"^;4",1,"^:C",1,"^:<",[["^1O",["^;L",[["^ ","^;C",["^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;T","^;U","^;V","^;5","^;W","^;X","^;Y"],"^;Z",["^ ","^;N",["^1O",["^;[","^<0",25]],"^;Q",30,"^;W","^<1","^;O",["^1O",["^;[","^<0",20]],"^;U",["^1O",["^<2",["^<3"],["^1O",["^<4",["^1O",["^<5","^<3"]],["^1O",["^<6","^<3",["^<7","^<8"]]],["^1O",["^<6","^<3",["^<7","^<9"]]],["^1O",["^<6","^<3",["^<7","__anti-forgery-token"]]]]]]],"^;5","^<:","^;Y",["^1O",["^<2",["^<;"],["^ ","^<<",401,"^<=","Unauthorized request"]]],"^;P",100,"^;T",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Unauthorized origin"]]],"^;V",["^1O",["^<2",["^<3"],null]],"^;R",["^1O",["^<2",["^<3"],["^1O",["^<6","^<3",["^<7","^<>"]]]]],"^;M",["^1O",["^<?",1000]],"^;S",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Bad CSRF token"]]]]]]]]],"^:8",["^1O",[["^;L","~$&",[["^ ","^;C",["^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;T","^;U","^;V","^;5","^;W","^;X","^;Y"],"^;Z",["^ ","^;N",["^1O",["^;[","^<0",25]],"^;Q",30,"^;W","^<1","^;O",["^1O",["^;[","^<0",20]],"^;U",["^1O",["^<2",["^<3"],["^1O",["^<4",["^1O",["^<5","^<3"]],["^1O",["^<6","^<3",["^<7","^<8"]]],["^1O",["^<6","^<3",["^<7","^<9"]]],["^1O",["^<6","^<3",["^<7","__anti-forgery-token"]]]]]]],"^;5","^<:","^;Y",["^1O",["^<2",["^<;"],["^ ","^<<",401,"^<=","Unauthorized request"]]],"^;P",100,"^;T",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Unauthorized origin"]]],"^;V",["^1O",["^<2",["^<3"],null]],"^;R",["^1O",["^<2",["^<3"],["^1O",["^<6","^<3",["^<7","^<>"]]]]],"^;M",["^1O",["^<?",1000]],"^;S",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Bad CSRF token"]]]]]]]]],"^:>",["^1O",[null]]]],"^11","^3J","^8","taoensso/sente.cljc","^<",34,"^;3",["^ ","^:?",true,"^;4",1,"^:C",1,"^:<",[["^1O",["^;L",[["^ ","^;C",["^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;T","^;U","^;V","^;5","^;W","^;X","^;Y"],"^;Z",["^ ","^;N",["^1O",["^;[","^<0",25]],"^;Q",30,"^;W","^<1","^;O",["^1O",["^;[","^<0",20]],"^;U",["^1O",["^<2",["^<3"],["^1O",["^<4",["^1O",["^<5","^<3"]],["^1O",["^<6","^<3",["^<7","^<8"]]],["^1O",["^<6","^<3",["^<7","^<9"]]],["^1O",["^<6","^<3",["^<7","__anti-forgery-token"]]]]]]],"^;5","^<:","^;Y",["^1O",["^<2",["^<;"],["^ ","^<<",401,"^<=","Unauthorized request"]]],"^;P",100,"^;T",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Unauthorized origin"]]],"^;V",["^1O",["^<2",["^<3"],null]],"^;R",["^1O",["^<2",["^<3"],["^1O",["^<6","^<3",["^<7","^<>"]]]]],"^;M",["^1O",["^<?",1000]],"^;S",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Bad CSRF token"]]]]]]]]],"^:8",["^1O",[["^;L","~$&",[["^ ","^;C",["^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;T","^;U","^;V","^;5","^;W","^;X","^;Y"],"^;Z",["^ ","^;N",["^1O",["^;[","^<0",25]],"^;Q",30,"^;W","^<1","^;O",["^1O",["^;[","^<0",20]],"^;U",["^1O",["^<2",["^<3"],["^1O",["^<4",["^1O",["^<5","^<3"]],["^1O",["^<6","^<3",["^<7","^<8"]]],["^1O",["^<6","^<3",["^<7","^<9"]]],["^1O",["^<6","^<3",["^<7","__anti-forgery-token"]]]]]]],"^;5","^<:","^;Y",["^1O",["^<2",["^<;"],["^ ","^<<",401,"^<=","Unauthorized request"]]],"^;P",100,"^;T",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Unauthorized origin"]]],"^;V",["^1O",["^<2",["^<3"],null]],"^;R",["^1O",["^<2",["^<3"],["^1O",["^<6","^<3",["^<7","^<>"]]]]],"^;M",["^1O",["^<?",1000]],"^;S",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Bad CSRF token"]]]]]]]]],"^:>",["^1O",[null]]],"^:<",[["^1O",["^;L",[["^ ","^;C",["^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;T","^;U","^;V","^;5","^;W","^;X","^;Y"],"^;Z",["^ ","^;N",["^1O",["^;[","^<0",25]],"^;Q",30,"^;W","^<1","^;O",["^1O",["^;[","^<0",20]],"^;U",["^1O",["^<2",["^<3"],["^1O",["^<4",["^1O",["^<5","^<3"]],["^1O",["^<6","^<3",["^<7","^<8"]]],["^1O",["^<6","^<3",["^<7","^<9"]]],["^1O",["^<6","^<3",["^<7","__anti-forgery-token"]]]]]]],"^;5","^<:","^;Y",["^1O",["^<2",["^<;"],["^ ","^<<",401,"^<=","Unauthorized request"]]],"^;P",100,"^;T",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Unauthorized origin"]]],"^;V",["^1O",["^<2",["^<3"],null]],"^;R",["^1O",["^<2",["^<3"],["^1O",["^<6","^<3",["^<7","^<>"]]]]],"^;M",["^1O",["^<?",1000]],"^;S",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Bad CSRF token"]]]]]]]]],"^:=",null,"^;4",1,"^:>",["^1O",[null]],"^:",1,"^:?",true,"^;7",[["^ ","^;4",1,"^:?",true,"^:O","^;>"]],"^9",297,"^:@","^:B","^;",297,"^:C",1,"^:D",true,"^:8",["^1O",[["^;L","~$&",[["^ ","^;C",["^;M","^;N","^;O","^;P","^;Q","^;R","^;S","^;T","^;U","^;V","^;5","^;W","^;X","^;Y"],"^;Z",["^ ","^;N",["^1O",["^;[","^<0",25]],"^;Q",30,"^;W","^<1","^;O",["^1O",["^;[","^<0",20]],"^;U",["^1O",["^<2",["^<3"],["^1O",["^<4",["^1O",["^<5","^<3"]],["^1O",["^<6","^<3",["^<7","^<8"]]],["^1O",["^<6","^<3",["^<7","^<9"]]],["^1O",["^<6","^<3",["^<7","__anti-forgery-token"]]]]]]],"^;5","^<:","^;Y",["^1O",["^<2",["^<;"],["^ ","^<<",401,"^<=","Unauthorized request"]]],"^;P",100,"^;T",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Unauthorized origin"]]],"^;V",["^1O",["^<2",["^<3"],null]],"^;R",["^1O",["^<2",["^<3"],["^1O",["^<6","^<3",["^<7","^<>"]]]]],"^;M",["^1O",["^<?",1000]],"^;S",["^1O",["^<2",["^<;"],["^ ","^<<",403,"^<=","Bad CSRF token"]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn                     ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req])  for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req])  for Ring GET + chsk URL.\n\n    :connected-uids ;             Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n    :send-buffers   ; Implementation detail, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Security options:\n\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ; CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n\n    :authorized?-fn    ; ?(fn [ring-req]) -> When non-nil, (authorized?-fn <ring-req>)\n                       ; must return truthy, otherwise connection requests will be\n                       ; rejected with (unauthorized-fn <ring-req>) response.\n                       ;\n                       ; May check Authroization HTTP header, etc.\n\n  Other common options:\n\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows)."],"~$node-target?",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",116,"^:",25,"^;",116,"^<",37,"^:7",true],"^:7",true,"^11","^2P","^8","taoensso/sente.cljc","^<",37,"^:",10,"^9",116,"^;",116,"^:O","^:X"],"~$ajax-lite",["^ ","^11","^2R","^8","taoensso/sente.cljc","^9",857,"^:",10,"^;",857,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",857,"^:",15,"^;",857,"^<",24],"^7","Alias of `taoensso.encore/ajax-lite`"],"~$get-chsk-url",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1545,"^:",11,"^;",1545,"^<",23,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["~$protocol","~$host","~$path","~$type"]]]]]],"^:7",true,"^11","^2:","^8","taoensso/sente.cljc","^<",23,"^:<",["^1O",[["^<C","^<D","^<E","^<F"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",1545,"^:@","^;8","^;",1545,"^:C",4,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^<C","^<D","^<E","^<F"]]]]]],"~$-chsk-send!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",863,"^:",7,"^;",863,"^<",18,"~:protocol","^5E","^7",null,"^:8",["^1O",["^:9",["^1O",[["^;:","^;;","^;<"]]]]]],"^<H","^5E","^11","^28","^8","taoensso/sente.cljc","^<",18,"^:<",["^1O",[["^;:","^;;","^;<"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",859,"^:@","^:B","^;",863,"^:C",3,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;:","^;;","^;<"]]]]],"^7",null],"~$-chsk-reconnect!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",862,"^:",7,"^;",862,"^<",23,"^<H","^5E","^7",null,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]]],"^<H","^5E","^11","^3D","^8","taoensso/sente.cljc","^<",23,"^:<",["^1O",[["^;:"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",859,"^:@","^:B","^;",862,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]],"^7",null],"~$receive-handshake!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",967,"^:",11,"^;",967,"^<",29,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["~$chsk-type","^;:","^:A"]]]]]],"^:7",true,"^11","^2E","^8","taoensso/sente.cljc","^<",29,"^:<",["^1O",[["^<K","^;:","^:A"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",967,"^:@","^32","^;",967,"^:C",3,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^<K","^;:","^:A"]]]]]],"~$start-client-chsk-router!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1760,"^:",7,"^;",1760,"^<",32,"^:8",["^1O",["^:9",["^1O",[["~$ch-recv","~$event-msg-handler","~$&",[["^ ","^1Q","^;<","^;C",["~$trace-evs?","~$error-handler"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.","^;3",["^ ","^:?",true,"^;4",2,"^:C",2,"^:<",[["^1O",["^<M","^<N",[["^ ","^1Q","^;<","^;C",["^<O","^<P"]]]]]],"^:8",["^1O",[["^<M","^<N","~$&",[["^ ","^1Q","^;<","^;C",["^<O","^<P"]]]]]],"^:>",["^1O",[null]]]],"^11","^5>","^8","taoensso/sente.cljc","^<",32,"^;3",["^ ","^:?",true,"^;4",2,"^:C",2,"^:<",[["^1O",["^<M","^<N",[["^ ","^1Q","^;<","^;C",["^<O","^<P"]]]]]],"^:8",["^1O",[["^<M","^<N","~$&",[["^ ","^1Q","^;<","^;C",["^<O","^<P"]]]]]],"^:>",["^1O",[null]]],"^:<",[["^1O",["^<M","^<N",[["^ ","^1Q","^;<","^;C",["^<O","^<P"]]]]]],"^:=",null,"^;4",2,"^:>",["^1O",[null]],"^:",1,"^:?",true,"^;7",[["^ ","^;4",2,"^:?",true,"^:O","~$function"]],"^9",1760,"^:@","^:B","^;",1760,"^:C",2,"^:D",true,"^:8",["^1O",[["^<M","^<N","~$&",[["^ ","^1Q","^;<","^;C",["^<O","^<P"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate."],"~$chsk-destroy!",["^ ","^11","^2K","^8","taoensso/sente.cljc","^9",869,"^:",6,"^;",869,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",869,"^:",11,"^;",869,"^<",24],"^7","Deprecated"],"~$->ChAjaxSocket",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^:J",true,"^:K","^:T","^9",1307,"^;",1307,"^:8",["^1O",["^:9",["^1O",[["~$client-id","~$chs","~$params","^;5","~$url","~$state_","~$instance-handle_","~$ever-opened?_","~$backoff-ms-fn","~$ajax-opts","~$curr-xhr_"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"^11","^53","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^<T","^<U","^<V","^;5","^<W","^<X","^<Y","^<Z","^<[","^=0","^=1"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:J",true,"^:?",false,"^:K","^:T","^9",1307,"^:@","^3E","^;",1307,"^:C",11,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^<T","^<U","^<V","^;5","^<W","^<X","^<Y","^<Z","^<[","^=0","^=1"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"~$send-buffered-server-evs>ajax-clients!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",799,"^:",8,"^;",799,"^<",46,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^:Z","^:[","^;0"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"^:7",true,"^11","^4W","^8","taoensso/sente.cljc","^<",46,"^:<",["^1O",[["^:Z","^:[","^;0"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",799,"^:@",["^[",["^:B","^:H"]],"^;",799,"^:C",3,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^:Z","^:[","^;0"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"~$default-client-side-ajax-timeout-ms",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1300,"^:",16,"^;",1300,"^<",51,"^:7",true],"^:7",true,"^11","^4X","^8","taoensso/sente.cljc","^<",51,"^:",1,"^9",1300,"^;",1300,"^:O","^:B","^7","We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms."],"~$ChAjaxSocket",["^ ","~:num-fields",11,"^:R",["^[",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^5E","^;>","~$cljs.core/ILookup"]],"^11","^3E","^8","taoensso/sente.cljc","^<",27,"~:type",true,"^:",15,"^:J",true,"^9",1307,"~:record",true,"^;",1307,"^:O","^<Q","^:U",["^[",["^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@","^=A","^=B","^;>","^=C"]]],"~$set-logging-level!",["^ ","^11","^4Y","^8","taoensso/sente.cljc","^9",1811,"^:",3,"^;",1811,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1811,"^:",8,"^;",1811,"^<",26],"^7","DEPRECATED. Please use `timbre/set-level!` instead"],"~$->ChAutoSocket",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^:J",true,"^:K","^:T","^9",1479,"^;",1479,"^:8",["^1O",["^:9",["^1O",[["~$ws-chsk-opts","~$ajax-chsk-opts","^<X","~$impl_"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"^11","^4Q","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^=H","^=I","^<X","^=J"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:J",true,"^:?",false,"^:K","^:T","^9",1479,"^:@","^4P","^;",1479,"^:C",4,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^=H","^=I","^<X","^=J"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"~$create-js-client-websocket!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1058,"^:",11,"^;",1058,"^<",38,"^:7",true,"^:8",["^1O",["^:9",["^1O",[[["^ ","^1Q","^;<","^;C",["^;D","^;E","^;F","^;G","^;H"]]]]]]]],"^:7",true,"^11","^42","^8","taoensso/sente.cljc","^<",38,"^:<",["^1O",[["~$p__97226"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",1058,"^:@",["^[",["^;J","^:H"]],"^;",1058,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[[["^ ","^1Q","^;<","^;C",["^;D","^;E","^;F","^;G","^;H"]]]]]]]],"~$-chsk-disconnect!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",861,"^:",7,"^;",861,"^<",24,"^<H","^5E","^7",null,"^:8",["^1O",["^:9",["^1O",[["^;:","^:;"]]]]]],"^<H","^5E","^11","^33","^8","taoensso/sente.cljc","^<",24,"^:<",["^1O",[["^;:","^:;"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",859,"^:@","^:B","^;",861,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;:","^:;"]]]]],"^7",null],"~$start-chsk-router!",["^ ","^11","^3Z","^8","taoensso/sente.cljc","^9",1785,"^:",1,"^;",1785,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",1785,"^:",6,"^;",1785,"^<",24],"^7","Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details."],"~$put-server-event-msg>ch-recv!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",185,"^:",8,"^;",185,"^<",37,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^<M",["^ ","^1Q","~$ev-msg","^;C",["~$event","~$?reply-fn"]]]]]]],"^7","All server `event-msg`s go through this"],"^:7",true,"^11","^3I","^8","taoensso/sente.cljc","^<",37,"^:<",["^1O",[["^<M","~$p__96163"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",185,"^:@",["^[",["^:X","^:B","^:H"]],"^;",185,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^<M",["^ ","^1Q","^=P","^;C",["^=Q","^=R"]]]]]]],"^7","All server `event-msg`s go through this"],"~$coerce-packer",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",247,"^:",8,"^;",247,"^<",21,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"^:7",true,"^11","^49","^8","taoensso/sente.cljc","^<",21,"^:<",["^1O",[["~$x"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",247,"^:@",["^[",[null,"^:B","^4O","^:H"]],"^;",247,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"~$-chsk-connect!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",860,"^:",7,"^;",860,"^<",21,"^<H","^5E","^7",null,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]]],"^<H","^5E","^11","^3F","^8","taoensso/sente.cljc","^<",21,"^:<",["^1O",[["^;:"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",859,"^:@","^:B","^;",860,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]],"^7",null],"~$default-edn-packer",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",245,"^:",16,"^;",245,"^<",34,"^:7",true],"^:7",true,"^11","^3[","^8","taoensso/sente.cljc","^<",34,"^:",1,"^9",245,"^;",245,"^:O","^4O"],"~$new-ChAjaxSocket",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1469,"^:",11,"^;",1469,"^<",27,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^;<","~$csrf-token"]]]]]],"^:7",true,"^11","^4H","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^;<","^=X"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",1469,"^:@","^3E","^;",1469,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;<","^=X"]]]]]],"~$receive-buffered-evs!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",954,"^:",11,"^;",954,"^<",32,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^<U","^:A"]]]]]],"^:7",true,"^11","^4@","^8","taoensso/sente.cljc","^<",32,"^:<",["^1O",[["^<U","^:A"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",954,"^:@","^:H","^;",954,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^<U","^:A"]]]]]],"~$chsk-connect!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",865,"^:",12,"^;",865,"^<",25,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]]],"^11","^3N","^8","taoensso/sente.cljc","^<",25,"^:<",["^1O",[["^;:"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",6,"^:?",false,"^9",865,"^:@","^:B","^;",865,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]]],"~$-start-chsk-router!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1704,"^:",8,"^;",1704,"^<",27,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["~$server?","^<M","^<N","^;<"]]]]]],"^:7",true,"^11","^4F","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^>0","^<M","^<N","^;<"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",1704,"^:@","^<Q","^;",1704,"^:C",4,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^>0","^<M","^<N","^;<"]]]]]],"~$EdnPacker",["^ ","^=5",0,"^:R",["^[",["^:S"]],"^11","^4O","^8","taoensso/sente.cljc","^<",19,"^=D",true,"^:",10,"^9",240,"^=E",false,"^;",240,"^:O","^<Q","^:U",null],"~$ChAutoSocket",["^ ","^=5",4,"^:R",["^[",["^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@","^=A","^=B","^5E","^;>","^=C"]],"^11","^4P","^8","taoensso/sente.cljc","^<",27,"^=D",true,"^:",15,"^:J",true,"^9",1479,"^=E",true,"^;",1479,"^:O","^<Q","^:U",["^[",["^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@","^=A","^=B","^;>","^=C"]]],"~$cb-error?",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",198,"^:",16,"^;",198,"^<",25,"^:8",["^1O",["^:9",["^1O",[["~$cb-reply-clj"]]]]]],"^11","^4K","^8","taoensso/sente.cljc","^<",25,"^:<",["^1O",[["^>4"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",10,"^:?",false,"^9",198,"^:@","^:B","^;",198,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^>4"]]]]]],"~$unpack",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",206,"^:",8,"^;",206,"^<",14,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^;5","~$prefixed-pstr"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"^:7",true,"^11","^4A","^8","taoensso/sente.cljc","^<",14,"^:<",["^1O",[["^;5","^>6"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",206,"^:@","^:P","^;",206,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;5","^>6"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"~$chsk-disconnect!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",866,"^:",12,"^;",866,"^<",28,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]]],"^11","^5G","^8","taoensso/sente.cljc","^<",28,"^:<",["^1O",[["^;:"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",6,"^:?",false,"^9",866,"^:@","^:B","^;",866,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]]],"~$default-chsk-url-fn",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1815,"^:",11,"^;",1815,"^<",30],"^11","^4J","^8","taoensso/sente.cljc","^<",30,"^:<",["^1O",[["^<E","~$p__97618","~$websocket?"]]],"^:=",null,"^:>",["^1O",[]],"^:",6,"^:?",false,"^9",1815,"^:@","^;8","^;",1815,"^:C",3,"^:D",true,"^:8",null,"^7","DEPRECATED"],"~$start-chsk-router-loop!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1804,"^:",12,"^;",1804,"^<",35,"^:8",["^1O",["^:9",["^1O",[["~$event-handler","^<M"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"^11","^4L","^8","taoensso/sente.cljc","^<",35,"^:<",["^1O",[["^><","^<M"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",6,"^:?",false,"^9",1804,"^:@","^<Q","^;",1804,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^><","^<M"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"~$chsk-send->closed!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",880,"^:",11,"^;",880,"^<",29,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["~$?cb-fn"]]]]]],"^:7",true,"^11","^4N","^8","taoensso/sente.cljc","^<",29,"^:<",["^1O",[["^>>"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",880,"^:@","^:X","^;",880,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^>>"]]]]]],"~$new-ChAutoSocket",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1538,"^:",11,"^;",1538,"^<",27,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^;<","^=X"]]]]]],"^:7",true,"^11","^5@","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^;<","^=X"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",1538,"^:@","^4P","^;",1538,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;<","^=X"]]]]]],"~$bad-origin?",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",274,"^:",8,"^;",274,"^<",19,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^;W",["^ ","^1Q","^<3","^;C",["^;H"]]]]]]]],"^:7",true,"^11","^4<","^8","taoensso/sente.cljc","^<",19,"^:<",["^1O",[["^;W","~$p__96188"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",274,"^:@","^:X","^;",274,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;W",["^ ","^1Q","^<3","^;C",["^;H"]]]]]]]],"~$swap-chsk-state!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",898,"^:",11,"^;",898,"^<",27,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^;:","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"^:7",true,"^11","^52","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^;:","~$f"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",898,"^:@",["^[",["^:P","^:H"]],"^;",898,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;:","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"~$handshake?",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",963,"^:",11,"^;",963,"^<",21,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"^:7",true,"^11","^4>","^8","taoensso/sente.cljc","^<",21,"^:<",["^1O",[["~$x"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",963,"^:@","^:X","^;",963,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"~$ajax-call",["^ ","^11","^45","^8","taoensso/sente.cljc","^9",1813,"^:",12,"^;",1813,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1813,"^:",17,"^;",1813,"^<",26],"^7","DEPRECATED: Please use `ajax-lite` instead"],"~$new-ChWebSocket",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1288,"^:",8,"^;",1288,"^<",23,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^;<","^=X"]]]]]],"^:7",true,"^11","^59","^8","taoensso/sente.cljc","^<",23,"^:<",["^1O",[["^;<","^=X"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",1288,"^:@","^36","^;",1288,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;<","^=X"]]]]]],"~$ChWebSocket",["^ ","^=5",15,"^:R",["^[",["^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@","^=A","^=B","^5E","^;>","^=C"]],"^11","^36","^8","taoensso/sente.cljc","^<",23,"^=D",true,"^:",12,"^:J",true,"^9",1078,"^=E",true,"^;",1078,"^:O","^<Q","^:U",["^[",["^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@","^=A","^=B","^;>","^=C"]]],"~$pull-unused-cb-fn!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",893,"^:",11,"^;",893,"^<",29,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["~$cbs-waiting_","^;6"]]]]]],"^:7",true,"^11","^3G","^8","taoensso/sente.cljc","^<",29,"^:<",["^1O",[["^>H","^;6"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",893,"^:@",["^[",["^:B","^:H"]],"^;",893,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^>H","^;6"]]]]]],"~$assert-event",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",141,"^:",7,"^;",141,"^<",19,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"^11","^3K","^8","taoensso/sente.cljc","^<",19,"^:<",["^1O",[["~$x"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",141,"^:@","^:H","^;",141,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"~$chsk-reconnect!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",867,"^:",12,"^;",867,"^<",27,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"^11","^5;","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^;:"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",6,"^:?",false,"^9",867,"^:@","^:B","^;",867,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^;:"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"~$make-channel-socket-client!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1553,"^:",10,"^;",1553,"^<",37,"^:8",["^1O",["^:9",["^1O",[["^<E","~$?csrf-token","~$&",[["^ ","^;C",["^<F","^<C","^<D","~$port","^<V","^;H","^;M","^;5","^;N","^<T","^=0","~$wrap-recv-evs?","^<["],"^1Q","^;<","^;Z",["^ ","^<F","~:auto","^;M",["^1O",["^<?",2048]],"^;5","^<:","^<T",["^1O",["^<4",["^1O",["~:client-uuid","^;<"]],["^1O",["~$enc/uuid-str"]]]],"^>N",true,"^<[","~$enc/exp-backoff","^;N",["^1O",["^;[","^<0",20]]]],"~$_deprecated-more-opts"]]]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :headers        ; Map of additional headers to include in the initiating request\n                       ; (currently only for Java clients).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.","^;3",["^ ","^:?",true,"^;4",2,"^:C",2,"^:<",[["^1O",["^<E","^>L",[["^ ","^;C",["^<F","^<C","^<D","^>M","^<V","^;H","^;M","^;5","^;N","^<T","^=0","^>N","^<["],"^1Q","^;<","^;Z",["^ ","^<F","^>O","^;M",["^1O",["^<?",2048]],"^;5","^<:","^<T",["^1O",["^<4",["^1O",["^>P","^;<"]],["^1O",["^>Q"]]]],"^>N",true,"^<[","^>R","^;N",["^1O",["^;[","^<0",20]]]],"^>S"]]]],"^:8",["^1O",[["^<E","^>L","~$&",[["^ ","^;C",["^<F","^<C","^<D","^>M","^<V","^;H","^;M","^;5","^;N","^<T","^=0","^>N","^<["],"^1Q","^;<","^;Z",["^ ","^<F","^>O","^;M",["^1O",["^<?",2048]],"^;5","^<:","^<T",["^1O",["^<4",["^1O",["^>P","^;<"]],["^1O",["^>Q"]]]],"^>N",true,"^<[","^>R","^;N",["^1O",["^;[","^<0",20]]]],"^>S"]]]],"^:>",["^1O",[null]]]],"^11","^5A","^8","taoensso/sente.cljc","^<",37,"^;3",["^ ","^:?",true,"^;4",2,"^:C",2,"^:<",[["^1O",["^<E","^>L",[["^ ","^;C",["^<F","^<C","^<D","^>M","^<V","^;H","^;M","^;5","^;N","^<T","^=0","^>N","^<["],"^1Q","^;<","^;Z",["^ ","^<F","^>O","^;M",["^1O",["^<?",2048]],"^;5","^<:","^<T",["^1O",["^<4",["^1O",["^>P","^;<"]],["^1O",["^>Q"]]]],"^>N",true,"^<[","^>R","^;N",["^1O",["^;[","^<0",20]]]],"^>S"]]]],"^:8",["^1O",[["^<E","^>L","~$&",[["^ ","^;C",["^<F","^<C","^<D","^>M","^<V","^;H","^;M","^;5","^;N","^<T","^=0","^>N","^<["],"^1Q","^;<","^;Z",["^ ","^<F","^>O","^;M",["^1O",["^<?",2048]],"^;5","^<:","^<T",["^1O",["^<4",["^1O",["^>P","^;<"]],["^1O",["^>Q"]]]],"^>N",true,"^<[","^>R","^;N",["^1O",["^;[","^<0",20]]]],"^>S"]]]],"^:>",["^1O",[null]]],"^:<",[["^1O",["^<E","^>L",[["^ ","^;C",["^<F","^<C","^<D","^>M","^<V","^;H","^;M","^;5","^;N","^<T","^=0","^>N","^<["],"^1Q","^;<","^;Z",["^ ","^<F","^>O","^;M",["^1O",["^<?",2048]],"^;5","^<:","^<T",["^1O",["^<4",["^1O",["^>P","^;<"]],["^1O",["^>Q"]]]],"^>N",true,"^<[","^>R","^;N",["^1O",["^;[","^<0",20]]]],"^>S"]]]],"^:=",null,"^;4",2,"^:>",["^1O",[null]],"^:",4,"^:?",true,"^;7",[["^ ","^;4",2,"^:?",true,"^:O",["^[",["^;>","^:H"]]]],"^9",1553,"^:@","^:B","^;",1553,"^:C",2,"^:D",true,"^:8",["^1O",[["^<E","^>L","~$&",[["^ ","^;C",["^<F","^<C","^<D","^>M","^<V","^;H","^;M","^;5","^;N","^<T","^=0","^>N","^<["],"^1Q","^;<","^;Z",["^ ","^<F","^>O","^;M",["^1O",["^<?",2048]],"^;5","^<:","^<T",["^1O",["^<4",["^1O",["^>P","^;<"]],["^1O",["^>Q"]]]],"^>N",true,"^<[","^>R","^;N",["^1O",["^;[","^<0",20]]]],"^>S"]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :headers        ; Map of additional headers to include in the initiating request\n                       ; (currently only for Java clients).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms."],"~$cb-chan-as-fn",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",937,"^:",11,"^;",937,"^<",24,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^:G","^;;"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"^:7",true,"^11","^5N","^8","taoensso/sente.cljc","^<",24,"^:<",["^1O",[["^:G","^;;"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:?",false,"^9",937,"^:@",["^[",[null,"^<Q"]],"^;",937,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^:G","^;;"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"~$map->ChAutoSocket",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^:J",true,"^:K","^:L","^9",1479,"^;",1479,"^:8",["^1O",["^:9",["^1O",[["~$G__97516"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"^11","^5C","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^>V"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",4,"^:J",true,"^:?",false,"^:K","^:L","^9",1479,"^:@","^4P","^;",1479,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^>V"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"~$IChSocket",["^ ","^5",["^ ","~:protocol-symbol",true,"^8","taoensso/sente.cljc","^<",26,"^:",17,"^9",859,"~:protocol-info",["^ ","^;7",["^ ","^=U",[["^;:"]],"^=M",[["^;:","^:;"]],"^<I",[["^;:"]],"^<G",[["^;:","^;;","^;<"]]]],"^;",859,"~:sigs",["^ ","~:-chsk-connect!",["^ ","^11","^=U","^:8",["^1O",[["^;:"]]],"^7",null],"~:-chsk-disconnect!",["^ ","^11","^=M","^:8",["^1O",[["^;:","^:;"]]],"^7",null],"~:-chsk-reconnect!",["^ ","^11","^<I","^:8",["^1O",[["^;:"]]],"^7",null],"~:-chsk-send!",["^ ","^11","^<G","^:8",["^1O",[["^;:","^;;","^;<"]]],"^7",null]],"~:jsdoc",["^1O",["@interface"]]],"^>X",true,"^11","^5E","^8","taoensso/sente.cljc","^<",26,"^:",4,"^9",859,"^>Y",["^ ","^;7",["^ ","^=U",[["^;:"]],"^=M",[["^;:","^:;"]],"^<I",[["^;:"]],"^<G",[["^;:","^;;","^;<"]]]],"~:info",null,"^;",859,"^:O","^:B","^>Z",["^ ","^>[",["^ ","^11","^=U","^:8",["^1O",[["^;:"]]],"^7",null],"^?0",["^ ","^11","^=M","^:8",["^1O",[["^;:","^:;"]]],"^7",null],"^?1",["^ ","^11","^<I","^:8",["^1O",[["^;:"]]],"^7",null],"^?2",["^ ","^11","^<G","^:8",["^1O",[["^;:","^;;","^;<"]]],"^7",null]],"~:impls",["^[",["^36","^3E","^4P"]],"^?3",["^1O",["@interface"]]],"~$debug-mode?_",["^ ","^11","^5D","^8","taoensso/sente.cljc","^9",119,"^:",1,"^;",119,"^<",22,"^5",["^ ","^8","taoensso/sente.cljc","^9",119,"^:",10,"^;",119,"^<",22],"^:O","~$cljs.core/Atom"],"~$cb-success?",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",199,"^:",16,"^;",199,"^<",27,"^:8",["^1O",["^:9",["^1O",[["^>4"]]]]]],"^11","^5I","^8","taoensso/sente.cljc","^<",27,"^:<",["^1O",[["^>4"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",10,"^:?",false,"^9",199,"^:@","^:X","^;",199,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^>4"]]]]]],"~$->ChWebSocket",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",23,"^:",12,"^:J",true,"^:K","^:T","^9",1078,"^;",1078,"^:8",["^1O",["^:9",["^1O",[["^<T","^<U","^<V","^;H","^;5","^<W","^;N","^<X","^<Y","~$retry-count_","^<Z","^<[","^>H","~$socket_","~$udt-last-comms_"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"^11","^5J","^8","taoensso/sente.cljc","^<",23,"^:<",["^1O",[["^<T","^<U","^<V","^;H","^;5","^<W","^;N","^<X","^<Y","^?:","^<Z","^<[","^>H","^?;","^?<"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:J",true,"^:?",false,"^:K","^:T","^9",1078,"^:@","^36","^;",1078,"^:C",15,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^<T","^<U","^<V","^;H","^;5","^<W","^;N","^<X","^<Y","^?:","^<Z","^<[","^>H","^?;","^?<"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"~$expected",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",126,"^:",8,"^;",126,"^<",16,"^:7",true,"^:8",["^1O",["^:9",["^1O",[["^?=","~$x"]]]]]],"^:7",true,"^11","^4;","^8","taoensso/sente.cljc","^<",16,"^:<",["^1O",[["^?=","~$x"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",126,"^:@","^;>","^;",126,"^:C",2,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^?=","~$x"]]]]]],"~$?node-npm-websocket_",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1002,"^:",19,"^;",1002,"^<",39,"^:7",true],"^:7",true,"^11","^5O","^8","taoensso/sente.cljc","^<",39,"^:",4,"^9",1002,"^;",1002,"^:O","^3<","^7","nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm"],"~$start-server-chsk-router!",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1743,"^:",7,"^;",1743,"^<",32,"^:8",["^1O",["^:9",["^1O",[["^<M","^<N","~$&",[["^ ","^1Q","^;<","^;C",["^<O","^<P","~$simple-auto-threading?"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).","^;3",["^ ","^:?",true,"^;4",2,"^:C",2,"^:<",[["^1O",["^<M","^<N",[["^ ","^1Q","^;<","^;C",["^<O","^<P","^?@"]]]]]],"^:8",["^1O",[["^<M","^<N","~$&",[["^ ","^1Q","^;<","^;C",["^<O","^<P","^?@"]]]]]],"^:>",["^1O",[null]]]],"^11","^4?","^8","taoensso/sente.cljc","^<",32,"^;3",["^ ","^:?",true,"^;4",2,"^:C",2,"^:<",[["^1O",["^<M","^<N",[["^ ","^1Q","^;<","^;C",["^<O","^<P","^?@"]]]]]],"^:8",["^1O",[["^<M","^<N","~$&",[["^ ","^1Q","^;<","^;C",["^<O","^<P","^?@"]]]]]],"^:>",["^1O",[null]]],"^:<",[["^1O",["^<M","^<N",[["^ ","^1Q","^;<","^;C",["^<O","^<P","^?@"]]]]]],"^:=",null,"^;4",2,"^:>",["^1O",[null]],"^:",1,"^:?",true,"^;7",[["^ ","^;4",2,"^:?",true,"^:O","^<Q"]],"^9",1743,"^:@","^:B","^;",1743,"^:C",2,"^:D",true,"^:8",["^1O",[["^<M","^<N","~$&",[["^ ","^1Q","^;<","^;C",["^<O","^<P","^?@"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default)."],"~$client-event-msg?",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",155,"^:",7,"^;",155,"^<",24,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"^11","^5=","^8","taoensso/sente.cljc","^<",24,"^:<",["^1O",[["~$x"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:?",false,"^9",155,"^:@","^:X","^;",155,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["~$x"]]]]]],"~$map->ChWebSocket",["^ ","^:6",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",23,"^:",12,"^:J",true,"^:K","^:L","^9",1078,"^;",1078,"^:8",["^1O",["^:9",["^1O",[["~$G__97243"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"^11","^5H","^8","taoensso/sente.cljc","^<",23,"^:<",["^1O",[["^?C"]]],"^:=",null,"^:>",["^1O",[null,null]],"^:",1,"^:J",true,"^:?",false,"^:K","^:L","^9",1078,"^:@","^36","^;",1078,"^:C",1,"^:D",true,"^:8",["^1O",["^:9",["^1O",[["^?C"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"~$next-idx!",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",267,"^:",16,"^;",267,"^<",25,"^:7",true],"^:7",true,"^11","^4E","^8","taoensso/sente.cljc","^<",25,"^:",1,"^9",267,"^;",267,"^:O","^:B"]],"^1B",["^ ","^P","^P","^16","^N","^19","^1:","^1;","^1;","^1:","^1:","^L","^L","^1=","^R","^N","^N","^1L","^P","^R","^R","^1M","^L"],"~:cljs.analyzer/constants",["^ ","^1@",["^[",["~:curr-xhr_","~:chsk/closed","~:?reply-fn","~:ws-kalive-ms","~:ajax-post-fn","~:ever-opened?_","~:requested-disconnect","~:on-msg","~:flush?","~:cb","~:errors","~:send-buf-ms-ws","~:first-open?","~:taoensso.sente/nil-uid","~:default-client-side-ajax-timeout-ms","~:given","^=0","^>H","~:ws","~:impl_","~:get","~:lp-timeout-ms","~:websocket","~:chsk/recv","~:allowed-origins","~:uri-str","^>P","~:handshake","~:ch-recv","~:client-id","~:ev","^<X","~:X-CSRF-Token","^=I","~:csrf-token-fn","~:?content","~:noop","~:else","~:on-close","~:sente/all-users-without-uid","^<H","~:wrong-id-type","~:newly-connected","~:connected-uids","^;N","^=1","~:method","~:simple-auto-threading?","~:pathname","~:ws-chsk-opts","^<Z","^<>","~:trace-evs?","~:packer","~:chs","~:warn","~:server","~:chsk/ws-ping","~:trace","~:udt-last-comms_","~:value","~:last-ws-error","~:chsk/uidport-open","~:?sch","~:swap/dissoc","^=J","^<T","^<0","~:unauthorized-fn","~:handshake?","~:params","~:udt-next-reconnect","~:chsk/close","~:recur","^=D","~:chsk/state","~:unnamespaced-id","~:onmessage-fn","~:debug","~:debug/timeout","~:state","~:hostname","~:ajax","~:send-buf-ms-ajax","~:retry-count_","~:chsk/bad-event","~:port","~:vector","^<1","^=H","~:udt","^;5","^<U","~:chsk/bad-package","~:no-op","~:ajax-get-or-ws-handshake-fn","~:bad-origin-fn","~:headers","~:internal","^?<","~:error-handler","~:downgrading-ws-to-ajax","~:handshake-data","~:chsk/auto-ajax-downgrade","~:chsk/error","~:handshake-data-fn","~:reason","~:host","^<V","~:event","~:authorized?-fn","~:backoff-ms-fn","~:wrong-type","~:user-id-fn","~:recv-buf-or-n","~:keyword","^<<","~:socket_","^?:","~:ever-opened?","~:ppstr","~:id","~:open?","~:send-buffers","~:expected","^<:","~:chsk/uidport-close","~:chsk-url-fn","~:url","~:code","^;H","~:lp-timeout","~:ring-req","~:chsk/timeout","~:http","~:handled","~:onclose-fn","~:wrap-recv-evs?","~:?data","~:post","~:instance-handle_","~:chsk","^<8","~:f","~:bad-csrf-fn","~:error","~:unexpected","~:onerror-fn","~:send-fn","~:wrong-length","^<5","~:on-error","~:timeout","~:resp-type","^<[","~:last-close","~:requested-reconnect","~:ajax-opts","~:cbs-waiting_","~:actual","^<=","~:init?","^?;","^<9","~:last-ws-close","^>O","~:on-open","^<W","~:timeout-ms","~:chsk/handshake","^<Y","~:apparent-success","~:?error","~:newly-disconnected","~:state_","~:ajax-cb","~:any","~:chsk/dummy-cb-200","~:<server","^<7","~:ajax-chsk-opts","~:text","~:clean?","~:namespaced-keyword"]],"~:order",["^AT","^BE","^=D","^@L","^AJ","^A7","^B=","^@:","^@=","^AM","^@X","^BV","^?U","^?P","^A5","^@3","^A0","^AG","^AQ","^B4","^B<","^?H","^@4","^@?","^<>","^AS","^AZ","^@G","~:f~:ns-specs",["^ "],"~:ns-spec-vars",["^[",[]],"~:compiler-options",["^5R",[["^BZ","~:static-fns"],true,["^BZ","~:shadow-tweaks"],null,["^BZ","~:source-map-inline"],null,["^BZ","~:elide-asserts"],false,["^BZ","~:optimize-constants"],null,["^BZ","^1["],null,["^BZ","~:external-config"],null,["^BZ","~:tooling-config"],null,["^BZ","~:emit-constants"],null,["^BZ","~:load-tests"],null,["^BZ","~:form-size-threshold"],null,["^BZ","~:data-readers"],null,["^BZ","~:infer-externs"],"^>O",["^BZ","^21"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^BZ","~:fn-invoke-direct"],null,["^BZ","~:source-map"],"/dev/null"]]]