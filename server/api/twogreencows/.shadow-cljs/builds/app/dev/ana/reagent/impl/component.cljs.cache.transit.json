["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.component');\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\nreagent.impl.component.extract_props = (function reagent$impl$component$extract_props(v){\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nif(cljs.core.map_QMARK_(p)){\nreturn p;\n} else {\nreturn null;\n}\n});\nreagent.impl.component.extract_children = (function reagent$impl$component$extract_children(v){\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nvar first_child = (((((p == null)) || (cljs.core.map_QMARK_(p))))?(2):(1));\nif((cljs.core.count(v) > first_child)){\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_child);\n} else {\nreturn null;\n}\n});\nreagent.impl.component.props_argv = (function reagent$impl$component$props_argv(c,p){\nvar temp__5755__auto__ = p.argv;\nif((temp__5755__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c.constructor,reagent.impl.util.shallow_obj_to_map(p)], null);\n} else {\nvar a = temp__5755__auto__;\nreturn a;\n}\n});\nreagent.impl.component.get_argv = (function reagent$impl$component$get_argv(c){\nreturn reagent.impl.component.props_argv(c,c.props);\n});\nreagent.impl.component.get_props = (function reagent$impl$component$get_props(c){\nvar p = c.props;\nvar temp__5755__auto__ = p.argv;\nif((temp__5755__auto__ == null)){\nreturn reagent.impl.util.shallow_obj_to_map(p);\n} else {\nvar v = temp__5755__auto__;\nreturn reagent.impl.component.extract_props(v);\n}\n});\nreagent.impl.component.get_children = (function reagent$impl$component$get_children(c){\nvar p = c.props;\nvar temp__5755__auto__ = p.argv;\nif((temp__5755__auto__ == null)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,module$node_modules$react$index.Children.toArray(p.children));\n} else {\nvar v = temp__5755__auto__;\nreturn reagent.impl.component.extract_children(v);\n}\n});\nreagent.impl.component.reagent_class_QMARK_ = (function reagent$impl$component$reagent_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) && ((!(((function (){var G__82246 = c;\nvar G__82246__$1 = (((G__82246 == null))?null:G__82246.prototype);\nif((G__82246__$1 == null)){\nreturn null;\n} else {\nreturn G__82246__$1.reagentRender;\n}\n})() == null)))));\n});\nreagent.impl.component.react_class_QMARK_ = (function reagent$impl$component$react_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) && ((!(((function (){var G__82248 = c;\nvar G__82248__$1 = (((G__82248 == null))?null:G__82248.prototype);\nif((G__82248__$1 == null)){\nreturn null;\n} else {\nreturn G__82248__$1.render;\n}\n})() == null)))));\n});\nreagent.impl.component.reagent_component_QMARK_ = (function reagent$impl$component$reagent_component_QMARK_(c){\nreturn (!((c.reagentRender == null)));\n});\nreagent.impl.component.state_atom = (function reagent$impl$component$state_atom(this$){\nvar sa = this$.cljsState;\nif((!((sa == null)))){\nreturn sa;\n} else {\nreturn (this$.cljsState = reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1(null));\n}\n});\n/**\n * Calls the render function of the component `c`.  If result `res` evaluates to a:\n *   1) Vector (form-1 component) - Treats the vector as hiccup and returns\n *      a react element with a render function based on that hiccup\n *   2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n *      and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n *   3) Anything else - Returns the result of evaluating `c`\n */\nreagent.impl.component.wrap_render = (function reagent$impl$component$wrap_render(c,compiler){\nwhile(true){\nvar f = c.reagentRender;\nvar _ = ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')))})());\nvar res = ((c.cljsLegacyRender === true)?f.call(c,c):(function (){var v = reagent.impl.component.get_argv(c);\nvar n = cljs.core.count(v);\nvar G__82250 = n;\nswitch (G__82250) {\ncase (1):\nreturn f.call(c);\n\nbreak;\ncase (2):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)));\n\nbreak;\ncase (3):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)));\n\nbreak;\ncase (4):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)));\n\nbreak;\ncase (5):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(4)));\n\nbreak;\ndefault:\nreturn f.apply(c,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(v).slice((1)));\n\n}\n})());\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 = ((reagent.impl.component.reagent_class_QMARK_(res))?((function (c,compiler,f,_,res){\nreturn (function() { \nvar G__82357__delegate = function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__82357 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__82358__i = 0, G__82358__a = new Array(arguments.length -  0);\nwhile (G__82358__i < G__82358__a.length) {G__82358__a[G__82358__i] = arguments[G__82358__i + 0]; ++G__82358__i;}\n  args = new cljs.core.IndexedSeq(G__82358__a,0,null);\n} \nreturn G__82357__delegate.call(this,args);};\nG__82357.cljs$lang$maxFixedArity = 0;\nG__82357.cljs$lang$applyTo = (function (arglist__82359){\nvar args = cljs.core.seq(arglist__82359);\nreturn G__82357__delegate(args);\n});\nG__82357.cljs$core$IFn$_invoke$arity$variadic = G__82357__delegate;\nreturn G__82357;\n})()\n;})(c,compiler,f,_,res))\n:res);\n(c.reagentRender = f__$1);\n\nvar G__82360 = c;\nvar G__82361 = compiler;\nc = G__82360;\ncompiler = G__82361;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.component_name = (function reagent$impl$component$component_name(c){\nvar or__4160__auto__ = (function (){var G__82255 = c;\nvar G__82255__$1 = (((G__82255 == null))?null:G__82255.constructor);\nif((G__82255__$1 == null)){\nreturn null;\n} else {\nreturn G__82255__$1.displayName;\n}\n})();\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar G__82256 = c;\nvar G__82256__$1 = (((G__82256 == null))?null:G__82256.constructor);\nif((G__82256__$1 == null)){\nreturn null;\n} else {\nreturn G__82256__$1.name;\n}\n}\n});\nreagent.impl.component.comp_name = (function reagent$impl$component$comp_name(){\nvar c = reagent.impl.component._STAR_current_component_STAR_;\nvar n = reagent.impl.component.component_name(c);\nif((!(cljs.core.empty_QMARK_(n)))){\nreturn [\" (in \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\")\"].join('');\n} else {\nreturn \"\";\n}\n\n});\nreagent.impl.component.do_render = (function reagent$impl$component$do_render(c,compiler){\nvar _STAR_current_component_STAR__orig_val__82257 = reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__82258 = c;\n(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__temp_val__82258);\n\ntry{var ok = [false];\ntry{var res = reagent.impl.component.wrap_render(c,compiler);\n(ok[(0)] = true);\n\nreturn res;\n}finally {if(cljs.core.truth_((ok[(0)]))){\n} else {\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).error([\"Error rendering component\",reagent.impl.component.comp_name()].join(''));\n} else {\n}\n}\n}\n}finally {(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__orig_val__82257);\n}});\nreagent.impl.component.rat_opts = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370),true], null);\nreagent.impl.component.custom_wrapper = (function reagent$impl$component$custom_wrapper(key,f){\nvar G__82259 = key;\nvar G__82259__$1 = (((G__82259 instanceof cljs.core.Keyword))?G__82259.fqn:null);\nswitch (G__82259__$1) {\ncase \"getDefaultProps\":\nthrow (new Error(\"getDefaultProps not supported\"));\n\nbreak;\ncase \"getDerivedStateFromProps\":\nreturn (function reagent$impl$component$custom_wrapper_$_getDerivedStateFromProps(props,state){\nreturn f.call(null,(function (){var temp__5755__auto__ = props.argv;\nif((temp__5755__auto__ == null)){\nreturn props;\n} else {\nvar a = temp__5755__auto__;\nreturn reagent.impl.component.extract_props(a);\n}\n})(),state);\n});\n\nbreak;\ncase \"getInitialState\":\nreturn (function reagent$impl$component$custom_wrapper_$_getInitialState(c){\nreturn cljs.core.reset_BANG_(reagent.impl.component.state_atom(c),f.call(c,c));\n});\n\nbreak;\ncase \"getSnapshotBeforeUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_getSnapshotBeforeUpdate(oldprops,oldstate){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate);\n});\n\nbreak;\ncase \"componentWillReceiveProps\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \"UNSAFE_componentWillReceiveProps\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \"shouldComponentUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_shouldComponentUpdate(nextprops,nextstate){\nvar or__4160__auto__ = reagent.impl.util._STAR_always_update_STAR_;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar c = this;\nvar old_argv = c.props.argv;\nvar new_argv = nextprops.argv;\nvar noargv = (((old_argv == null)) || ((new_argv == null)));\nif((f == null)){\nvar or__4160__auto____$1 = noargv;\nif(or__4160__auto____$1){\nreturn or__4160__auto____$1;\n} else {\ntry{return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e82267){var e = e82267;\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"Exception thrown while comparing argv's in shouldComponentUpdate: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(''));\n} else {\n}\n\nreturn false;\n}}\n} else {\nif(noargv){\nreturn f.call(c,c,reagent.impl.component.get_argv(c),reagent.impl.component.props_argv(c,nextprops));\n} else {\nreturn f.call(c,c,old_argv,new_argv);\n\n}\n}\n}\n});\n\nbreak;\ncase \"componentWillUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \"UNSAFE_componentWillUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \"componentDidUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidUpdate(oldprops,oldstate,snapshot){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate,snapshot);\n});\n\nbreak;\ncase \"componentWillMount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c = this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \"UNSAFE_componentWillMount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c = this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \"componentDidMount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidMount(){\nvar c = this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \"componentWillUnmount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUnmount(){\nvar c = this;\nvar G__82274_82365 = goog.object.get(c,\"cljsRatom\");\nif((G__82274_82365 == null)){\n} else {\nreagent.ratom.dispose_BANG_(G__82274_82365);\n}\n\nreagent.impl.batching.mark_rendered(c);\n\nif((f == null)){\nreturn null;\n} else {\nreturn f.call(c,c);\n}\n});\n\nbreak;\ncase \"componentDidCatch\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidCatch(error,info){\nvar c = this;\nreturn f.call(c,c,error,info);\n});\n\nbreak;\ndefault:\nreturn null;\n\n}\n});\nreagent.impl.component.get_wrapper = (function reagent$impl$component$get_wrapper(key,f){\nvar wrap = reagent.impl.component.custom_wrapper(key,f);\nif(cljs.core.truth_((function (){var and__4149__auto__ = wrap;\nif(cljs.core.truth_(and__4149__auto__)){\nreturn f;\n} else {\nreturn and__4149__auto__;\n}\n})())){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')));\n}\n} else {\n}\n\nvar or__4160__auto__ = wrap;\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn f;\n}\n});\nreagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"shouldComponentUpdate\",\"shouldComponentUpdate\",1795750960),null,new cljs.core.Keyword(null,\"componentWillUnmount\",\"componentWillUnmount\",1573788814),null], null);\nreagent.impl.component.dash_to_method_name = reagent.impl.util.memoize_1(reagent.impl.util.dash_to_method_name);\nreagent.impl.component.camelify_map_keys = (function reagent$impl$component$camelify_map_keys(fun_map){\nreturn cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(reagent.impl.component.dash_to_method_name(k)),v);\n}),cljs.core.PersistentArrayMap.EMPTY,fun_map);\n});\nreagent.impl.component.add_obligatory = (function reagent$impl$component$add_obligatory(fun_map){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([reagent.impl.component.obligatory,fun_map], 0));\n});\nreagent.impl.component.wrap_funs = (function reagent$impl$component$wrap_funs(fmap,compiler){\nvar renders_82366 = cljs.core.select_keys(fmap,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383)], null));\nvar render_fun_82367 = cljs.core.first(cljs.core.vals(renders_82366));\nif(cljs.core.not(new cljs.core.Keyword(null,\"componentFunction\",\"componentFunction\",825866104).cljs$core$IFn$_invoke$arity$1(fmap))){\n} else {\nthrow (new Error([\"Assert failed: \",\":component-function is no longer supported, use :reagent-render instead.\",\"\\n\",\"(not (:componentFunction fmap))\"].join('')));\n}\n\nif((cljs.core.count(renders_82366) > (0))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Missing reagent-render\",\"\\n\",\"(pos? (count renders))\"].join('')));\n}\n\nif(((1) === cljs.core.count(renders_82366))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Too many render functions supplied\",\"\\n\",\"(== 1 (count renders))\"].join('')));\n}\n\nif(cljs.core.ifn_QMARK_(render_fun_82367)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([render_fun_82367], 0))].join(''),\"\\n\",\"(clojure.core/ifn? render-fun)\"].join('')));\n}\n\n\nvar render_fun = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(fmap);\n}\n})();\nvar legacy_render = (new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(fmap) == null);\nvar name = (function (){var or__4160__auto__ = new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar or__4160__auto____$1 = reagent.impl.util.fun_name(render_fun);\nif(cljs.core.truth_(or__4160__auto____$1)){\nreturn or__4160__auto____$1;\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"reagent\"));\n}\n}\n})();\nvar fmap__$1 = cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,reagent.impl.component.get_wrapper(k,v));\n}),cljs.core.PersistentArrayMap.EMPTY,fmap);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(fmap__$1,new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601),name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613),legacy_render,new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383),render_fun,new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),(function reagent$impl$component$wrap_funs_$_render(){\nvar c = this;\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.do_render(c,compiler);\n} else {\nvar rat = goog.object.get(c,\"cljsRatom\");\nreagent.impl.batching.mark_rendered(c);\n\nif((rat == null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.do_render(c,compiler);\n}),c,\"cljsRatom\",reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n})], 0));\n});\nreagent.impl.component.map_to_js = (function reagent$impl$component$map_to_js(m){\nreturn cljs.core.reduce_kv((function (o,k,v){\nvar G__82282 = o;\ngoog.object.set(G__82282,cljs.core.name(k),v);\n\nreturn G__82282;\n}),({}),m);\n});\nreagent.impl.component.cljsify = (function reagent$impl$component$cljsify(body,compiler){\nreturn reagent.impl.component.wrap_funs(reagent.impl.component.add_obligatory(reagent.impl.component.camelify_map_keys(body)),compiler);\n});\nreagent.impl.component.built_in_static_method_names = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"childContextTypes\",\"childContextTypes\",578717991),new cljs.core.Keyword(null,\"contextTypes\",\"contextTypes\",-2023853910),new cljs.core.Keyword(null,\"contextType\",\"contextType\",1033066077),new cljs.core.Keyword(null,\"getDerivedStateFromProps\",\"getDerivedStateFromProps\",-991834739),new cljs.core.Keyword(null,\"getDerivedStateFromError\",\"getDerivedStateFromError\",166658477)], null);\n/**\n * Creates JS class based on provided Clojure map.\n * \n *   Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n *   and can be provided in snake-case or camelCase.\n *   Constructor function is defined using key `:getInitialState`.\n * \n *   React built-in static methods or properties are automatically defined as statics.\n */\nreagent.impl.component.create_class = (function reagent$impl$component$create_class(body,compiler){\nif(cljs.core.map_QMARK_(body)){\n} else {\nthrow (new Error(\"Assert failed: (map? body)\"));\n}\n\nvar body__$1 = reagent.impl.component.cljsify(body,compiler);\nvar methods$ = reagent.impl.component.map_to_js(cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc,body__$1,new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601),new cljs.core.Keyword(null,\"getInitialState\",\"getInitialState\",1541760916),new cljs.core.Keyword(null,\"constructor\",\"constructor\",-1953928811),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383),reagent.impl.component.built_in_static_method_names], 0)));\nvar static_methods = reagent.impl.component.map_to_js(cljs.core.select_keys(body__$1,reagent.impl.component.built_in_static_method_names));\nvar display_name = new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar get_initial_state = new cljs.core.Keyword(null,\"getInitialState\",\"getInitialState\",1541760916).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar construct = new cljs.core.Keyword(null,\"constructor\",\"constructor\",-1953928811).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar cmp = (function (props,context,updater){\nvar this$ = this;\nmodule$node_modules$react$index.Component.call(this$,props,context,updater);\n\nif(cljs.core.truth_(construct)){\n(construct.cljs$core$IFn$_invoke$arity$2 ? construct.cljs$core$IFn$_invoke$arity$2(this$,props) : construct.call(null,this$,props));\n} else {\n}\n\nif(cljs.core.truth_(get_initial_state)){\n(this$.state = (get_initial_state.cljs$core$IFn$_invoke$arity$1 ? get_initial_state.cljs$core$IFn$_invoke$arity$1(this$) : get_initial_state.call(null,this$)));\n} else {\n}\n\n(this$.cljsMountOrder = reagent.impl.batching.next_mount_count());\n\nreturn this$;\n});\ngoog.object.extend(cmp.prototype,module$node_modules$react$index.Component.prototype,methods$);\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.render = new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.reagentRender = new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.cljsLegacyRender = new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\ngoog.object.extend(cmp,module$node_modules$react$index.Component,static_methods);\n\nif(cljs.core.truth_(display_name)){\n(cmp.displayName = display_name);\n\n(cmp.cljs$lang$ctorStr = display_name);\n\n(cmp.cljs$lang$ctorPrWriter = (function (this$,writer,opt){\nreturn cljs.core._write(writer,display_name);\n}));\n} else {\n}\n\n(cmp.cljs$lang$type = true);\n\n(cmp.prototype.constructor = cmp);\n\nreturn cmp;\n});\nreagent.impl.component.cached_react_class = (function reagent$impl$component$cached_react_class(compiler,c){\nreturn goog.object.get(c,reagent.impl.protocols.get_id(compiler));\n});\nreagent.impl.component.cache_react_class = (function reagent$impl$component$cache_react_class(compiler,c,constructor$){\ngoog.object.set(c,reagent.impl.protocols.get_id(compiler),constructor$);\n\nreturn constructor$;\n});\nreagent.impl.component.fn_to_class = (function reagent$impl$component$fn_to_class(compiler,f){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')));\n}\n\nif((!((!(((reagent.impl.component.react_class_QMARK_(f)) && ((!(reagent.impl.component.reagent_class_QMARK_(f)))))))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"Using native React classes directly in Hiccup forms \",\"is not supported. Use create-element or \",\"adapt-react-class instead: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4160__auto__ = reagent.impl.util.fun_name(f);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nreturn f;\n}\n})()),reagent.impl.component.comp_name()].join(''));\n} else {\n}\n} else {\n}\n\nif(reagent.impl.component.reagent_class_QMARK_(f)){\nreturn reagent.impl.component.cache_react_class(compiler,f,f);\n} else {\nvar spec = cljs.core.meta(f);\nvar withrender = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(spec,new cljs.core.Keyword(null,\"reagent-render\",\"reagent-render\",-985383853),f);\nvar res = reagent.impl.component.create_class(withrender,compiler);\nreturn reagent.impl.component.cache_react_class(compiler,f,res);\n}\n});\nreagent.impl.component.as_class = (function reagent$impl$component$as_class(tag,compiler){\nvar temp__5755__auto__ = reagent.impl.component.cached_react_class(compiler,tag);\nif((temp__5755__auto__ == null)){\nreturn reagent.impl.component.fn_to_class(compiler,tag);\n} else {\nvar cached_class = temp__5755__auto__;\nreturn cached_class;\n}\n});\nreagent.impl.component.reactify_component = (function reagent$impl$component$reactify_component(comp,compiler){\nif(reagent.impl.component.react_class_QMARK_(comp)){\nreturn comp;\n} else {\nreturn reagent.impl.component.as_class(comp,compiler);\n}\n});\nreagent.impl.component.functional_wrap_render = (function reagent$impl$component$functional_wrap_render(compiler,c){\nwhile(true){\nvar f = c.reagentRender;\nvar _ = ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')))})());\nvar argv = c.argv;\nvar res = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,argv);\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 = ((reagent.impl.component.reagent_class_QMARK_(res))?((function (compiler,c,f,_,argv,res){\nreturn (function() { \nvar G__82377__delegate = function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__82377 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__82378__i = 0, G__82378__a = new Array(arguments.length -  0);\nwhile (G__82378__i < G__82378__a.length) {G__82378__a[G__82378__i] = arguments[G__82378__i + 0]; ++G__82378__i;}\n  args = new cljs.core.IndexedSeq(G__82378__a,0,null);\n} \nreturn G__82377__delegate.call(this,args);};\nG__82377.cljs$lang$maxFixedArity = 0;\nG__82377.cljs$lang$applyTo = (function (arglist__82379){\nvar args = cljs.core.seq(arglist__82379);\nreturn G__82377__delegate(args);\n});\nG__82377.cljs$core$IFn$_invoke$arity$variadic = G__82377__delegate;\nreturn G__82377;\n})()\n;})(compiler,c,f,_,argv,res))\n:res);\n(c.reagentRender = f__$1);\n\nvar G__82380 = compiler;\nvar G__82381 = c;\ncompiler = G__82380;\nc = G__82381;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.functional_do_render = (function reagent$impl$component$functional_do_render(compiler,c){\nvar _STAR_current_component_STAR__orig_val__82334 = reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__82335 = c;\n(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__temp_val__82335);\n\ntry{var ok = [false];\ntry{var res = reagent.impl.component.functional_wrap_render(compiler,c);\n(ok[(0)] = true);\n\nreturn res;\n}finally {if(cljs.core.truth_((ok[(0)]))){\n} else {\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).error([\"Error rendering component\",reagent.impl.component.comp_name()].join(''));\n} else {\n}\n}\n}\n}finally {(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__orig_val__82334);\n}});\nreagent.impl.component.functional_render = (function reagent$impl$component$functional_render(compiler,jsprops){\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.functional_do_render(compiler,jsprops);\n} else {\nvar argv = jsprops.argv;\nvar tag = jsprops.reagentRender;\nvar vec__82337 = module$node_modules$react$index.useState((0));\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82337,(0),null);\nvar update_count = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__82337,(1),null);\nvar state_ref = module$node_modules$react$index.useRef();\nvar ___$1 = (cljs.core.truth_(state_ref.current)?null:(function (){var obj = ({});\n(obj.forceUpdate = (function (){\nreturn (update_count.cljs$core$IFn$_invoke$arity$1 ? update_count.cljs$core$IFn$_invoke$arity$1(cljs.core.inc) : update_count.call(null,cljs.core.inc));\n}));\n\n(obj.cljsMountOrder = reagent.impl.batching.next_mount_count());\n\n(obj.constructor = tag);\n\n(obj.reagentRender = tag);\n\nreturn (state_ref.current = obj);\n})());\nvar reagent_state = state_ref.current;\nvar rat = goog.object.get(reagent_state,\"cljsRatom\");\nmodule$node_modules$react$index.useEffect((function reagent$impl$component$functional_render_$_mount(){\nreturn (function reagent$impl$component$functional_render_$_mount_$_unmount(){\nvar G__82343 = goog.object.get(reagent_state,\"cljsRatom\");\nif((G__82343 == null)){\nreturn null;\n} else {\nreturn reagent.ratom.dispose_BANG_(G__82343);\n}\n});\n}),[]);\n\n(reagent_state.argv = argv);\n\nreagent.impl.batching.mark_rendered(reagent_state);\n\nif((rat == null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.functional_do_render(compiler,reagent_state);\n}),reagent_state,\"cljsRatom\",reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n});\nreagent.impl.component.functional_render_memo_fn = (function reagent$impl$component$functional_render_memo_fn(prev_props,next_props){\nvar old_argv = prev_props.argv;\nvar new_argv = next_props.argv;\nif(reagent.impl.util._STAR_always_update_STAR_ === false){\ntry{return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e82350){var e = e82350;\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"Exception thrown while comparing argv's in shouldComponentUpdate: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(''));\n} else {\n}\n\nreturn false;\n}} else {\nreturn false;\n}\n});\n/**\n * Create copy of functional-render with displayName set to name of the\n *   original Reagent component.\n */\nreagent.impl.component.functional_render_fn = (function reagent$impl$component$functional_render_fn(compiler,tag){\nvar or__4160__auto__ = reagent.impl.component.cached_react_class(compiler,tag);\nif(cljs.core.truth_(or__4160__auto__)){\nreturn or__4160__auto__;\n} else {\nvar f = (function (jsprops){\nreturn reagent.impl.component.functional_render(compiler,jsprops);\n});\nvar _ = (f.displayName = reagent.impl.util.fun_name(tag));\nvar f__$1 = module$node_modules$react$index.memo(f,reagent.impl.component.functional_render_memo_fn);\nreagent.impl.component.cache_react_class(compiler,tag,f__$1);\n\nreturn f__$1;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/component.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",27],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$dev?","~$reagent.debug","~$warn","^J","~$error","^J","~$warn-unless","^J","~$assert-callable","^J"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.component","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^W","~$reagent.impl.protocols","^X","~$p","^X","~$reagent.ratom","^Y","^>","^?","~$cljs.core","^Z","^?","^?","~$gobj","~$goog.object","~$goog","^11","^10","^10","~$reagent.impl.batching","^12","~$util","^W","~$ratom","^Y","~$batch","^12","^J","^J"],"~:seen",["^P",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^J","^J","^Z","^Z","^Y","^Y","^14","^Y"],"~:form",["~#list",["~$ns","^R",["^1;",["^17",["^10","~:as","^["],["^>","^1=","^>"],["^W","^1=","^13"],["^12","^1=","^15"],["^X","^1=","~$p"],["^Y","^1=","^14"],["^J","~:refer-macros",["^I","^K","^L","^M","^N"]]]]]],"~:flags",["^ ","^17",["^P",[]]],"~:js-deps",["^ "],"~:deps",["^11","^Z","^10","^?","^W","^12","^X","^Y","^J"]],"^T","^R","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/component.cljs"],"~:compiled-at",1626505519092,"~:resource-name","reagent/impl/component.cljs","~:warnings",[],"~:source","(ns reagent.impl.component\n  (:require [goog.object :as gobj]\n            [react :as react]\n            [reagent.impl.util :as util]\n            [reagent.impl.batching :as batch]\n            [reagent.impl.protocols :as p]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dev? warn error warn-unless assert-callable]]))\n\n(declare ^:dynamic *current-component*)\n\n\n;;; Argv access\n\n(defn extract-props [v]\n  (let [p (nth v 1 nil)]\n    (if (map? p) p)))\n\n(defn extract-children [v]\n  (let [p (nth v 1 nil)\n        first-child (if (or (nil? p) (map? p)) 2 1)]\n    (if (> (count v) first-child)\n      (subvec v first-child))))\n\n(defn props-argv [^js/React.Component c p]\n  (if-some [a (.-argv p)]\n    a\n    [(.-constructor c) (util/shallow-obj-to-map p)]))\n\n(defn get-argv [^js/React.Component c]\n  (props-argv c (.-props c)))\n\n(defn get-props [^js/React.Component c]\n  (let [p (.-props c)]\n    (if-some [v (.-argv p)]\n      (extract-props v)\n      (util/shallow-obj-to-map p))))\n\n(defn get-children [^js/React.Component c]\n  (let [p (.-props c)]\n    (if-some [v (.-argv p)]\n      (extract-children v)\n      (->> (.-children p)\n           (react/Children.toArray)\n           (into [])))))\n\n(defn ^boolean reagent-class? [c]\n  (and (fn? c)\n       (some? (some-> c (.-prototype) (.-reagentRender)))))\n\n(defn ^boolean react-class? [c]\n  (and (fn? c)\n       (some? (some-> c (.-prototype) (.-render)))))\n\n(defn ^boolean reagent-component? [^clj c]\n  (some? (.-reagentRender c)))\n\n;;; State\n\n(defn state-atom [^clj this]\n  (let [sa (.-cljsState this)]\n    (if-not (nil? sa)\n      sa\n      (set! (.-cljsState this) (ratom/atom nil)))))\n\n;;; Rendering\n\n(defn wrap-render\n  \"Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`\"\n  [^clj c compiler]\n  (let [f (.-reagentRender c)\n        _ (assert-callable f)\n        ;; cljsLegacyRender tells if this calls was defined\n        ;; using :render instead of :reagent-render\n        ;; in that case, the :render fn is called with just `this` as argument.\n        res (if (true? (.-cljsLegacyRender c))\n              (.call f c c)\n              (let [v (get-argv c)\n                    n (count v)]\n                (case n\n                  1 (.call f c)\n                  2 (.call f c (nth v 1))\n                  3 (.call f c (nth v 1) (nth v 2))\n                  4 (.call f c (nth v 1) (nth v 2) (nth v 3))\n                  5 (.call f c (nth v 1) (nth v 2) (nth v 3) (nth v 4))\n                  (.apply f c (.slice (into-array v) 1)))))]\n    (cond\n      (vector? res) (p/as-element compiler res)\n      (ifn? res) (let [f (if (reagent-class? res)\n                           (fn [& args]\n                             (p/as-element compiler (apply vector res args)))\n                           res)]\n                   (set! (.-reagentRender c) f)\n                   (recur c compiler))\n      :else res)))\n\n(defn component-name [c]\n  (or (some-> c .-constructor .-displayName)\n      (some-> c .-constructor .-name)))\n\n(defn comp-name []\n  (if (dev?)\n    (let [c *current-component*\n          n (component-name c)]\n      (if-not (empty? n)\n        (str \" (in \" n \")\")\n        \"\"))\n    \"\"))\n\n(defn do-render [c compiler]\n  (binding [*current-component* c]\n    (if (dev?)\n      ;; Log errors, without using try/catch (and mess up call stack)\n      (let [ok (array false)]\n        (try\n          (let [res (wrap-render c compiler)]\n            (aset ok 0 true)\n            res)\n          (finally\n            (when-not (aget ok 0)\n              (error (str \"Error rendering component\"\n                          (comp-name)))))))\n      (wrap-render c compiler))))\n\n\n;;; Method wrapping\n\n(def rat-opts {:no-cache true})\n\n(defn custom-wrapper [key f]\n  (case key\n    :getDefaultProps\n    (throw (js/Error. \"getDefaultProps not supported\"))\n\n    :getDerivedStateFromProps\n    (fn getDerivedStateFromProps [props state]\n      ;; Read props from Reagent argv\n      (.call f nil (if-some [a (.-argv props)] (extract-props a) props) state))\n\n    ;; In ES6 React, this is now part of the constructor\n    :getInitialState\n    (fn getInitialState [c]\n      (reset! (state-atom c) (.call f c c)))\n\n    :getSnapshotBeforeUpdate\n    (fn getSnapshotBeforeUpdate [oldprops oldstate]\n      (this-as c (.call f c c (props-argv c oldprops) oldstate)))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillReceiveProps\n    (fn componentWillReceiveProps [nextprops]\n      (this-as c (.call f c c (props-argv c nextprops))))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillReceiveProps\n    (fn componentWillReceiveProps [nextprops]\n      (this-as c (.call f c c (props-argv c nextprops))))\n\n    :shouldComponentUpdate\n    (fn shouldComponentUpdate [nextprops nextstate]\n      (or util/*always-update*\n          (this-as c\n                   ;; Don't care about nextstate here, we use forceUpdate\n                   ;; when only when state has changed anyway.\n                   (let [old-argv (.. c -props -argv)\n                         new-argv (.-argv nextprops)\n                         noargv (or (nil? old-argv) (nil? new-argv))]\n                     (cond\n                       (nil? f) (or noargv (try (not= old-argv new-argv)\n                                                (catch :default e\n                                                  (warn \"Exception thrown while comparing argv's in shouldComponentUpdate: \" old-argv \" \" new-argv \" \" e)\n                                                  false)))\n                       noargv (.call f c c (get-argv c) (props-argv c nextprops))\n                       :else  (.call f c c old-argv new-argv))))))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillUpdate\n    (fn componentWillUpdate [nextprops nextstate]\n      (this-as c (.call f c c (props-argv c nextprops) nextstate)))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillUpdate\n    (fn componentWillUpdate [nextprops nextstate]\n      (this-as c (.call f c c (props-argv c nextprops) nextstate)))\n\n    :componentDidUpdate\n    (fn componentDidUpdate [oldprops oldstate snapshot]\n      (this-as c (.call f c c (props-argv c oldprops) oldstate snapshot)))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillMount\n    (fn componentWillMount []\n      (this-as c (.call f c c)))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillMount\n    (fn componentWillMount []\n      (this-as c (.call f c c)))\n\n    :componentDidMount\n    (fn componentDidMount []\n      (this-as c (.call f c c)))\n\n    :componentWillUnmount\n    (fn componentWillUnmount []\n      (this-as c\n               (some-> (gobj/get c \"cljsRatom\") ratom/dispose!)\n               (batch/mark-rendered c)\n               (when-not (nil? f)\n                 (.call f c c))))\n\n    :componentDidCatch\n    (fn componentDidCatch [error info]\n      (this-as c (.call f c c error info)))\n\n    nil))\n\n(defn get-wrapper [key f]\n  (let [wrap (custom-wrapper key f)]\n    (when (and wrap f)\n      (assert-callable f))\n    (or wrap f)))\n\n;; Though the value is nil here, the wrapper function will be\n;; added to class to manage Reagent ratom lifecycle.\n(def obligatory {:shouldComponentUpdate nil\n                 :componentWillUnmount nil})\n\n(def dash-to-method-name (util/memoize-1 util/dash-to-method-name))\n\n(defn camelify-map-keys [fun-map]\n  (reduce-kv (fn [m k v]\n               (assoc m (-> k dash-to-method-name keyword) v))\n             {} fun-map))\n\n(defn add-obligatory [fun-map]\n  (merge obligatory fun-map))\n\n(defn wrap-funs [fmap compiler]\n  (when (dev?)\n    (let [renders (select-keys fmap [:render :reagentRender])\n          render-fun (-> renders vals first)]\n      (assert (not (:componentFunction fmap)) \":component-function is no longer supported, use :reagent-render instead.\")\n      (assert (pos? (count renders)) \"Missing reagent-render\")\n      (assert (== 1 (count renders)) \"Too many render functions supplied\")\n      (assert-callable render-fun)))\n  (let [render-fun (or (:reagentRender fmap)\n                       (:render fmap))\n        legacy-render (nil? (:reagentRender fmap))\n        name (or (:displayName fmap)\n                 (util/fun-name render-fun)\n                 (str (gensym \"reagent\")))\n        fmap (reduce-kv (fn [m k v]\n                          (assoc m k (get-wrapper k v)))\n                        {} fmap)]\n    (assoc fmap\n           :displayName name\n           :cljsLegacyRender legacy-render\n           :reagentRender render-fun\n           :render (fn render []\n                     (this-as c (if util/*non-reactive*\n                                  (do-render c compiler)\n                                  (let [^clj rat (gobj/get c \"cljsRatom\")]\n                                    (batch/mark-rendered c)\n                                    (if (nil? rat)\n                                      (ratom/run-in-reaction #(do-render c compiler) c \"cljsRatom\"\n                                                             batch/queue-render rat-opts)\n                                      (._run rat false)))))))))\n\n(defn map-to-js [m]\n  (reduce-kv (fn [o k v]\n               (doto o\n                 (gobj/set (name k) v)))\n             #js{} m))\n\n(defn cljsify [body compiler]\n  (-> body\n      camelify-map-keys\n      add-obligatory\n      (wrap-funs compiler)))\n\n;; Idea from:\n;; https://gist.github.com/pesterhazy/2a25c82db0519a28e415b40481f84554\n;; https://gist.github.com/thheller/7f530b34de1c44589f4e0671e1ef7533#file-es6-class-cljs-L18\n\n(def built-in-static-method-names\n  [:childContextTypes :contextTypes :contextType\n   :getDerivedStateFromProps :getDerivedStateFromError])\n\n(defn create-class\n  \"Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics.\"\n  [body compiler]\n  {:pre [(map? body)]}\n  (let [body (cljsify body compiler)\n        methods (map-to-js (apply dissoc body :displayName :getInitialState :constructor\n                                  :render :reagentRender\n                                  built-in-static-method-names))\n        static-methods (map-to-js (select-keys body built-in-static-method-names))\n        display-name (:displayName body)\n        get-initial-state (:getInitialState body)\n        construct (:constructor body)\n        cmp (fn [props context updater]\n              (this-as ^clj this\n                (.call react/Component this props context updater)\n                (when construct\n                  (construct this props))\n                (when get-initial-state\n                  (set! (.-state this) (get-initial-state this)))\n                (set! (.-cljsMountOrder this) (batch/next-mount-count))\n                this))]\n\n    (gobj/extend (.-prototype cmp) (.-prototype react/Component) methods)\n\n    ;; These names SHOULD be mangled by Closure so we can't use goog/extend\n\n    (when (:render body)\n      (set! (.-render ^js (.-prototype cmp)) (:render body)))\n\n    (when (:reagentRender body)\n      (set! (.-reagentRender ^clj (.-prototype cmp)) (:reagentRender body)))\n\n    (when (:cljsLegacyRender body)\n      (set! (.-cljsLegacyRender ^clj (.-prototype cmp)) (:cljsLegacyRender body)))\n\n    (gobj/extend cmp react/Component static-methods)\n\n    (when display-name\n      (set! (.-displayName cmp) display-name)\n      (set! (.-cljs$lang$ctorStr cmp) display-name)\n      (set! (.-cljs$lang$ctorPrWriter cmp)\n            (fn [this writer opt]\n              (cljs.core/-write writer display-name))))\n\n    (set! (.-cljs$lang$type cmp) true)\n    (set! (.. cmp -prototype -constructor) cmp)\n\n    cmp))\n\n;; Cache result to the tag but per compiler ID\n;; TODO: Generate cache & get methods to the Object using macro,\n;; can generate code calling interop forms.\n(defn cached-react-class [compiler ^clj c]\n  (gobj/get c (p/get-id compiler)))\n\n(defn cache-react-class [compiler ^clj c constructor]\n  (gobj/set c (p/get-id compiler) constructor)\n  constructor)\n\n(defn fn-to-class [compiler f]\n  (assert-callable f)\n  (warn-unless (not (and (react-class? f)\n                         (not (reagent-class? f))))\n               \"Using native React classes directly in Hiccup forms \"\n               \"is not supported. Use create-element or \"\n               \"adapt-react-class instead: \" (or (util/fun-name f)\n                                                 f)\n               (comp-name))\n  (if (reagent-class? f)\n    (cache-react-class compiler f f)\n    (let [spec (meta f)\n          withrender (assoc spec :reagent-render f)\n          res (create-class withrender compiler)]\n      (cache-react-class compiler f res))))\n\n(defn as-class [tag compiler]\n  (if-some [cached-class (cached-react-class compiler tag)]\n    cached-class\n    (fn-to-class compiler tag)))\n\n(defn reactify-component [comp compiler]\n  (if (react-class? comp)\n    comp\n    (as-class comp compiler)))\n\n(defn functional-wrap-render\n  [compiler ^clj c]\n  (let [f (.-reagentRender c)\n        _ (assert-callable f)\n        argv (.-argv c)\n        res (apply f argv)]\n    (cond\n      (vector? res) (p/as-element compiler res)\n      (ifn? res) (let [f (if (reagent-class? res)\n                           (fn [& args]\n                             (p/as-element compiler (apply vector res args)))\n                           res)]\n                   (set! (.-reagentRender c) f)\n                   (recur compiler c))\n      :else res)))\n\n(defn functional-do-render [compiler c]\n  (binding [*current-component* c]\n    (if (dev?)\n      ;; Log errors, without using try/catch (and mess up call stack)\n      (let [ok (array false)]\n        (try\n          (let [res (functional-wrap-render compiler c)]\n            (aset ok 0 true)\n            res)\n          (finally\n            (when-not (aget ok 0)\n              (error (str \"Error rendering component\" (comp-name)))))))\n      (functional-wrap-render compiler c))))\n\n(defn functional-render [compiler ^clj jsprops]\n  (if util/*non-reactive*\n    ;; Non-reactive component needs just the render fn and argv\n    (functional-do-render compiler jsprops)\n    (let [argv (.-argv jsprops)\n          tag (.-reagentRender jsprops)\n\n          ;; Use counter to trigger render manually.\n          [_ update-count] (react/useState 0)\n\n          ;; This object mimics React Class attributes and methods.\n          ;; To support form-2 components, even the render fn needs to\n          ;; be stored as it is created during the first render,\n          ;; and subsequent renders need to retrieve the created fn.\n          state-ref (react/useRef)\n\n          _ (when-not (.-current state-ref)\n              (let [obj #js {}]\n                (set! (.-forceUpdate obj) (fn [] (update-count inc)))\n                (set! (.-cljsMountOrder obj) (batch/next-mount-count))\n                ;; Use reagentRender name, as that is also used\n                ;; by class components, and some checks.\n                ;; reagentRender is replaced with form-2 inner fn,\n                ;; constructor refers to the original fn.\n                (set! (.-constructor obj) tag)\n                (set! (.-reagentRender obj) tag)\n\n                (set! (.-current state-ref) obj)))\n\n          reagent-state (.-current state-ref)\n\n          ;; FIXME: Access cljsRatom using interop forms\n          rat ^ratom/Reaction (gobj/get reagent-state \"cljsRatom\")]\n\n      (react/useEffect\n        (fn mount []\n          (fn unmount []\n            (some-> (gobj/get reagent-state \"cljsRatom\") ratom/dispose!)))\n        ;; Ignore props - only run effect once on mount and unmount\n        #js [])\n\n      ;; Argv is also stored in the state,\n      ;; so reaction fn will always see the latest value.\n      (set! (.-argv reagent-state) argv)\n\n      (batch/mark-rendered reagent-state)\n\n      ;; static-fns :render\n      (if (nil? rat)\n        (ratom/run-in-reaction\n          ;; Mock Class component API\n          #(functional-do-render compiler reagent-state)\n          reagent-state\n          \"cljsRatom\"\n          batch/queue-render\n          rat-opts)\n        ;; TODO: Consider passing props here, instead of keeping them in state?\n        (._run rat false)))))\n\n(defn functional-render-memo-fn\n  [prev-props next-props]\n  (let [old-argv (.-argv prev-props)\n        new-argv (.-argv next-props)]\n    (and (false? util/*always-update*)\n         (try\n           (= old-argv new-argv)\n           (catch :default e\n             (warn \"Exception thrown while comparing argv's in shouldComponentUpdate: \" old-argv \" \" new-argv \" \" e)\n             false)))))\n\n(defn functional-render-fn\n  \"Create copy of functional-render with displayName set to name of the\n  original Reagent component.\"\n  [compiler tag]\n  ;; TODO: Could be disabled for optimized builds?\n  ;; Or not currently - the memo wrap is required.\n  (or (cached-react-class compiler tag)\n      (let [f (fn [jsprops] (functional-render compiler jsprops))\n            _ (set! (.-displayName f) (util/fun-name tag))\n            f (react/memo f functional-render-memo-fn)]\n        (cache-react-class compiler tag f)\n        f)))\n","~:reader-features",["^P",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.component/extract-props","v","p","cljs.core.nth","cljs.core/map?","reagent.impl.component/extract-children","first-child","cljs.core/count","cljs.core.subvec","reagent.impl.component/props-argv","c","temp__5755__auto__","a","reagent.impl.util/shallow-obj-to-map","reagent.impl.component/get-argv","reagent.impl.component/get-props","reagent.impl.component/get-children","js/module$node_modules$react$index.Children.toArray","cljs.core.into","reagent.impl.component/reagent-class?","cljs.core/fn?","G__82246","reagent.impl.component/react-class?","G__82248","reagent.impl.component/reagent-component?","reagent.impl.component/state-atom","this","sa","reagent.ratom.atom","reagent.impl.component/wrap-render","compiler","f","_","cljs.core/ifn?","js/Error","cljs.core.pr_str","res","n","G__82250","cljs.core.into_array","cljs.core/vector?","reagent.impl.protocols/as-element","args","cljs.core.apply","cljs.core/vector","reagent.impl.component/component-name","or__4160__auto__","G__82255","G__82256","reagent.impl.component/comp-name","reagent.impl.component/*current-component*","cljs.core/empty?","reagent.impl.component/do-render","*current-component*-orig-val__82257","*current-component*-temp-val__82258","ok","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","reagent.impl.component/rat-opts","reagent.impl.component/custom-wrapper","key","G__82259","cljs.core/Keyword","props","state","cljs.core/reset!","oldprops","oldstate","nextprops","nextstate","reagent.impl.util/*always-update*","old-argv","new-argv","noargv","e82267","cljs.core.not_EQ_","e","snapshot","G__82274","goog.object/get","reagent.ratom/dispose!","reagent.impl.batching/mark-rendered","error","info","reagent.impl.component/get-wrapper","wrap","and__4149__auto__","reagent.impl.component/obligatory","reagent.impl.component/dash-to-method-name","reagent.impl.util/memoize-1","reagent.impl.util/dash-to-method-name","reagent.impl.component/camelify-map-keys","fun-map","cljs.core/reduce-kv","m","k","cljs.core.assoc","cljs.core.keyword","reagent.impl.component/add-obligatory","cljs.core.merge","reagent.impl.component/wrap-funs","fmap","renders","cljs.core/select-keys","render-fun","cljs.core/vals","cljs.core/first","cljs.core/not","legacy-render","name","reagent.impl.util/fun-name","cljs.core.gensym","reagent.impl.util/*non-reactive*","rat","reagent.ratom/run-in-reaction","reagent.impl.batching/queue-render","reagent.impl.component/map-to-js","o","G__82282","goog.object/set","cljs.core/name","reagent.impl.component/cljsify","body","reagent.impl.component/built-in-static-method-names","reagent.impl.component/create-class","methods","cljs.core/dissoc","static-methods","display-name","get-initial-state","construct","cmp","context","updater","js/module$node_modules$react$index.Component","reagent.impl.batching/next-mount-count","goog.object/extend","writer","opt","cljs.core/-write","reagent.impl.component/cached-react-class","reagent.impl.protocols/get-id","reagent.impl.component/cache-react-class","constructor","reagent.impl.component/fn-to-class","spec","cljs.core/meta","withrender","reagent.impl.component/as-class","tag","cached-class","reagent.impl.component/reactify-component","comp","reagent.impl.component/functional-wrap-render","argv","reagent.impl.component/functional-do-render","*current-component*-orig-val__82334","*current-component*-temp-val__82335","reagent.impl.component/functional-render","jsprops","vec__82337","update-count","js/module$node_modules$react$index.useState","state-ref","js/module$node_modules$react$index.useRef","obj","cljs.core/inc","reagent-state","js/module$node_modules$react$index.useEffect","G__82343","reagent.impl.component/functional-render-memo-fn","prev-props","next-props","e82350","cljs.core._EQ_","reagent.impl.component/functional-render-fn","js/module$node_modules$react$index.memo"]],"~:used-vars",["^P",["~$reagent.impl.component/as-class","~$reagent.impl.component/get-children","~$cljs.core/keyword","~$reagent.impl.component/extract-props","~$reagent.impl.component/camelify-map-keys","~$reagent.impl.component/custom-wrapper","~$cljs.core/vector?","~$cljs.core/=","~$reagent.impl.component/map-to-js","~$cljs.core/ifn?","~$reagent.impl.batching/queue-render","~$cljs.core/-write","~$reagent.impl.component/cached-react-class","~$reagent.impl.component/reagent-component?","~$cljs.core/count","~$reagent.impl.component/dash-to-method-name","~$reagent.impl.component/functional-render-fn","~$reagent.impl.util/*non-reactive*","~$reagent.impl.protocols/get-id","~$cljs.core/not=","~$reagent.impl.component/functional-render","~$reagent.debug/has-console","~$cljs.core/pr-str","~$reagent.impl.component/comp-name","~$js/console","~$reagent.impl.component/wrap-funs","~$reagent.impl.component/extract-children","~$reagent.impl.util/shallow-obj-to-map","~$cljs.core/empty?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$reagent.ratom/dispose!","~$reagent.impl.component/functional-do-render","~$reagent.impl.batching/mark-rendered","~$cljs.core/fn?","~$reagent.impl.component/rat-opts","~$reagent.impl.component/component-name","~$reagent.impl.component/cache-react-class","~$reagent.impl.component/do-render","~$goog.object/set","~$reagent.debug/tracking","~$reagent.impl.component/functional-render-memo-fn","~$reagent.impl.util/*always-update*","~$reagent.impl.component/cljsify","~$js/module$node_modules$react$index.Children.toArray","~$reagent.debug/track-console","~$cljs.core/subvec","~$reagent.impl.component/create-class","~$reagent.impl.component/functional-wrap-render","~$reagent.impl.component/get-argv","~$reagent.ratom/run-in-reaction","~$reagent.impl.component/react-class?","~$reagent.impl.util/memoize-1","~$reagent.impl.util/dash-to-method-name","~$reagent.impl.component/built-in-static-method-names","~$reagent.impl.component/fn-to-class","~$reagent.impl.component/reactify-component","~$cljs.core/not","~$reagent.impl.component/reagent-class?","~$reagent.impl.component/props-argv","~$cljs.core/assoc","~$reagent.impl.component/obligatory","~$goog.object/extend","~$reagent.impl.component/*current-component*","~$js/module$node_modules$react$index.useEffect","~$reagent.impl.component/get-props","~$cljs.core/reduce-kv","~$reagent.impl.protocols/as-element","~$reagent.impl.component/get-wrapper","~$reagent.impl.component/add-obligatory","~$reagent.impl.component/wrap-render","~$js/module$node_modules$react$index.Component","~$reagent.ratom/atom","~$cljs.core/name","~$cljs.core/merge","~$js/Error","~$reagent.impl.component/state-atom","~$goog.object/get"]]],"~:cache-keys",["~#cmap",[["^1C","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^P",[]],"~:deps-syms",["^11","^Z","^J","^W"]]],["^1C","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","~$goog.dom.HtmlElement"]]],["^1C","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","~$goog.array","~$goog.asserts"]]],["^1C","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3M","~$goog.labs.userAgent.util","^10","~$goog.string.internal"]]],["^1C","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3N","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3P"]]],["^1C","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3N"]]],["^1C","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^Z","~$clojure.string","~$clojure.walk","^10","^J"]]],["^1C","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^Z","^W","^J","^12","~$clojure.set","^10"]]],["^1C","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","42b9e7b7183490d3c1def6c7e906fed1824435eb","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1C","shadow/js.js"],["cf0f0b0b78819e6f54388955752d9242b3eae701","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3N"]]],"~:SHADOW-TIMESTAMP",[1621409642000,1621409642000,1620991109000],["^3Z","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","42b9e7b7183490d3c1def6c7e906fed1824435eb","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^3[","~$module$node_modules$object_assign$index"]]],["^1C","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3N","~$goog.reflect"]]],["^1C","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3N","~$goog.html.trustedtypes","^3S","^3T","^3U","^3V"]]],["^1C","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3M","^3N","~$goog.html.SafeUrl","^3U","^3V","^3P"]]],["^1C","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3N","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^46","^3R","~$goog.html.uncheckedconversions","^3U","^3P"]]],["^1C","reagent/impl/component.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^Z","^10","^?","^W","^12","^X","^Y","^J"]]],["^1C","clojure/walk.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^Z"]]],["^1C","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1C","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3M","^3N","~$goog.dom.TagName","~$goog.dom.tags","^4:","^4;","~$goog.html.SafeStyleSheet","^46","^3R","^45","^3S","^3T","~$goog.labs.userAgent.browser","^10","^3U","^3V","^3P"]]],["^1C","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^10"]]],["^1C","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1C","reagent/impl/protocols.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^Z"]]],["^1C","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3M","^3N","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1C","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^3Z","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","42b9e7b7183490d3c1def6c7e906fed1824435eb","519ffd5a4c91b67302cc9947b794966d629860cd","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^3["]]],["^1C","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",[]]],["^1C","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3M","^10"]]],["^1C","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^Z","^4E","~$goog.string.StringBuffer"]]],["^3Z","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","42b9e7b7183490d3c1def6c7e906fed1824435eb","6093d43b27c84de58b9ce55e3a930469339c9e54","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^3[","^43"]]],["^1C","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","~$goog.dom.safe","^4<","^3U","^3P"]]],["^1C","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3P"]]],["^1C","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3M","^3N","^48","~$goog.math"]]],["^1C","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3N","^49","^4:","^4;","^4A","^46","^3R","^3U","^3P"]]],["^1C","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11"]]],["^1C","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","~$goog.math.Long","~$goog.math.Integer","^4E","^10","^3M","~$goog.Uri","^4K"]]],["^1C","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3N","^45","^3U","^3V"]]],["^1C","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^Z"]]],["^1C","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3M","^3N","^4;","^10","^3U","^3V","^3P"]]],["^1C","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^44"]]],["^1C","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^Z"]]],["^1C","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3M","^3N","^4E"]]],["^1C","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3H",["^ ","^3I",null,"^3J",["^P",[]],"^3K",["^11","^3N","^3V"]]]]],"~:clj-info",["^ ","jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1620986767000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1620893898000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596475466000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1620893898000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1620893898000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1620991109000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/component.cljs","^7",1,"^8",5,"^9",1,"^:",27],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J","^K","^J","^L","^J","^M","^J","^N","^J"],"^O",["^P",[]],"~:shadow/js-access-properties",["^P",["useRef","Children.toArray","Component","useEffect","useState","memo"]],"^Q","^R","^U",null,"^V",["^ ","^W","^W","^X","^X","~$p","^X","^Y","^Y","^>","^?","^Z","^Z","^?","^?","^[","^10","^11","^11","^10","^10","^12","^12","^13","^W","^14","^Y","^15","^12","^J","^J"],"^16",["^P",["^17"]],"~:shadow/js-access-global",["^P",["Error"]],"^18",null,"~:defs",["^ ","~$get-props",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",33,"^8",7,"^9",33,"^:",16,"~:arglists",["^1;",["~$quote",["^1;",[["~$c"]]]]]],"^Q","^39","^6","reagent/impl/component.cljs","^:",16,"~:method-params",["^1;",[["~$c"]]],"~:protocol-impl",null,"~:arglists-meta",["^1;",[null,null]],"^8",1,"~:variadic?",false,"^7",33,"~:ret-tag",["^P",[null,"~$any","~$clj-nil"]],"^9",33,"~:max-fixed-arity",1,"~:fn-var",true,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"~$get-wrapper",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",223,"^8",7,"^9",223,"^:",18,"^5J",["^1;",["^5K",["^1;",[["~$key","~$f"]]]]]],"^Q","^3<","^6","reagent/impl/component.cljs","^:",18,"^5L",["^1;",[["^5V","~$f"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",223,"^5P",["^P",[null,"^5Q"]],"^9",223,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^5V","~$f"]]]]]],"~$get-argv",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",30,"^8",7,"^9",30,"^:",15,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"^Q","^2U","^6","reagent/impl/component.cljs","^:",15,"^5L",["^1;",[["~$c"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",30,"^5P",["^P",["~$cljs.core/IVector","^5Q"]],"^9",30,"^5S",1,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"~$wrap-render",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",68,"^8",7,"^9",68,"^:",18,"^5J",["^1;",["^5K",["^1;",[["~$c","~$compiler"]]]]],"~:doc","Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`"],"^Q","^3>","^6","reagent/impl/component.cljs","^:",18,"^5L",["^1;",[["~$c","^5Z"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",68,"^5P",["^P",[null,"^5Q"]],"^9",68,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$c","^5Z"]]]]],"^5[","Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`"],"~$rat-opts",["^ ","^Q","^2G","^6","reagent/impl/component.cljs","^7",133,"^8",1,"^9",133,"^:",14,"^5",["^ ","^6","reagent/impl/component.cljs","^7",133,"^8",6,"^9",133,"^:",14],"~:tag","~$cljs.core/IMap"],"~$obligatory",["^ ","^Q","^35","^6","reagent/impl/component.cljs","^7",231,"^8",1,"^9",231,"^:",16,"^5",["^ ","^6","reagent/impl/component.cljs","^7",231,"^8",6,"^9",231,"^:",16],"^61","^62"],"~$props-argv",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",25,"^8",7,"^9",25,"^:",17,"^5J",["^1;",["^5K",["^1;",[["~$c","~$p"]]]]]],"^Q","^33","^6","reagent/impl/component.cljs","^:",17,"^5L",["^1;",[["~$c","~$p"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",25,"^5P",["^P",["^5X","^5Q"]],"^9",25,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$c","~$p"]]]]]],"~$built-in-static-method-names",["^ ","^Q","^2Z","^6","reagent/impl/component.cljs","^7",291,"^8",1,"^9",291,"^:",34,"^5",["^ ","^6","reagent/impl/component.cljs","^7",291,"^8",6,"^9",291,"^:",34],"^61","^5X"],"~$do-render",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",115,"^8",7,"^9",115,"^:",16,"^5J",["^1;",["^5K",["^1;",[["~$c","^5Z"]]]]]],"^Q","^2J","^6","reagent/impl/component.cljs","^:",16,"^5L",["^1;",[["~$c","^5Z"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",115,"^9",115,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$c","^5Z"]]]]]],"~$comp-name",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",106,"^8",7,"^9",106,"^:",16,"^5J",["^1;",["^5K",["^1;",[[]]]]]],"^Q","^2:","^6","reagent/impl/component.cljs","^:",16,"^5L",["^1;",[[]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",106,"^5P","~$string","^9",106,"^5S",0,"^5T",true,"^5J",["^1;",["^5K",["^1;",[[]]]]]],"~$add-obligatory",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",241,"^8",7,"^9",241,"^:",21,"^5J",["^1;",["^5K",["^1;",[["~$fun-map"]]]]]],"^Q","^3=","^6","reagent/impl/component.cljs","^:",21,"^5L",["^1;",[["^6:"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",241,"^5P",["^P",["^5Q","^5R"]],"^9",241,"^5S",1,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^6:"]]]]]],"~$cached-react-class",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",353,"^8",7,"^9",353,"^:",25,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$c"]]]]]],"^Q","^1[","^6","reagent/impl/component.cljs","^:",25,"^5L",["^1;",[["^5Z","~$c"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",353,"^5P","^5Q","^9",353,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$c"]]]]]],"~$state-atom",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",60,"^8",7,"^9",60,"^:",17,"^5J",["^1;",["^5K",["^1;",[["~$this"]]]]]],"^Q","^3D","^6","reagent/impl/component.cljs","^:",17,"^5L",["^1;",[["^6="]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",60,"^5P",["^P",[null,"^5Q"]],"^9",60,"^5S",1,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^6="]]]]]],"~$functional-wrap-render",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",386,"^8",7,"^9",386,"^:",29,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$c"]]]]]],"^Q","^2T","^6","reagent/impl/component.cljs","^:",29,"^5L",["^1;",[["^5Z","~$c"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",386,"^5P","^5Q","^9",386,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$c"]]]]]],"~$reagent-component?",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",55,"^8",16,"^9",55,"^:",34,"^61","~$boolean","^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"^Q","^20","^6","reagent/impl/component.cljs","^:",34,"^5L",["^1;",[["~$c"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",55,"^5P","^6@","^9",55,"^5S",1,"^61","^6@","^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"~$as-class",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",376,"^8",7,"^9",376,"^:",15,"^5J",["^1;",["^5K",["^1;",[["~$tag","^5Z"]]]]]],"^Q","^1O","^6","reagent/impl/component.cljs","^:",15,"^5L",["^1;",[["^6B","^5Z"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",376,"^5P","^5Q","^9",376,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^6B","^5Z"]]]]]],"~$dash-to-method-name",["^ ","^Q","^22","^6","reagent/impl/component.cljs","^7",234,"^8",1,"^9",234,"^:",25,"^5",["^ ","^6","reagent/impl/component.cljs","^7",234,"^8",6,"^9",234,"^:",25],"^61","~$function"],"~$reagent-class?",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",47,"^8",16,"^9",47,"^:",30,"^61","^6@","^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"^Q","^32","^6","reagent/impl/component.cljs","^:",30,"^5L",["^1;",[["~$c"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",47,"^5P","^6@","^9",47,"^5S",1,"^61","^6@","^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"~$functional-render-memo-fn",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",475,"^8",7,"^9",475,"^:",32,"^5J",["^1;",["^5K",["^1;",[["~$prev-props","~$next-props"]]]]]],"^Q","^2M","^6","reagent/impl/component.cljs","^:",32,"^5L",["^1;",[["^6G","^6H"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",475,"^5P",["^P",[null,"^6@"]],"^9",475,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^6G","^6H"]]]]]],"~$fn-to-class",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",360,"^8",7,"^9",360,"^:",18,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$f"]]]]]],"^Q","^2[","^6","reagent/impl/component.cljs","^:",18,"^5L",["^1;",[["^5Z","~$f"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",360,"^5P","^5Q","^9",360,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$f"]]]]]],"~$reactify-component",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",381,"^8",7,"^9",381,"^:",25,"^5J",["^1;",["^5K",["^1;",[["~$comp","^5Z"]]]]]],"^Q","^30","^6","reagent/impl/component.cljs","^:",25,"^5L",["^1;",[["^6K","^5Z"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",381,"^5P",["^P",[null,"^5Q"]],"^9",381,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^6K","^5Z"]]]]]],"~$map-to-js",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",275,"^8",7,"^9",275,"^:",16,"^5J",["^1;",["^5K",["^1;",[["~$m"]]]]]],"^Q","^1W","^6","reagent/impl/component.cljs","^:",16,"^5L",["^1;",[["~$m"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",275,"^5P",["^P",[null,"^5Q"]],"^9",275,"^5S",1,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$m"]]]]]],"~$component-name",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",102,"^8",7,"^9",102,"^:",21,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"^Q","^2H","^6","reagent/impl/component.cljs","^:",21,"^5L",["^1;",[["~$c"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",102,"^5P",["^P",["^5Q","^5R"]],"^9",102,"^5S",1,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"~$extract-children",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",19,"^8",7,"^9",19,"^:",23,"^5J",["^1;",["^5K",["^1;",[["~$v"]]]]]],"^Q","^2=","^6","reagent/impl/component.cljs","^:",23,"^5L",["^1;",[["~$v"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",19,"^5P",["^P",["^5Q","^5R"]],"^9",19,"^5S",1,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$v"]]]]]],"~$functional-render",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",416,"^8",7,"^9",416,"^:",24,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$jsprops"]]]]]],"^Q","^27","^6","reagent/impl/component.cljs","^:",24,"^5L",["^1;",[["^5Z","^6P"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",416,"^5P","^5Q","^9",416,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^5Z","^6P"]]]]]],"~$functional-do-render",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",402,"^8",7,"^9",402,"^:",27,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$c"]]]]]],"^Q","^2D","^6","reagent/impl/component.cljs","^:",27,"^5L",["^1;",[["^5Z","~$c"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",402,"^9",402,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$c"]]]]]],"~$extract-props",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",15,"^8",7,"^9",15,"^:",20,"^5J",["^1;",["^5K",["^1;",[["~$v"]]]]]],"^Q","^1R","^6","reagent/impl/component.cljs","^:",20,"^5L",["^1;",[["~$v"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",15,"^5P",["^P",[null,"^5Q","^5R"]],"^9",15,"^5S",1,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$v"]]]]]],"~$*current-component*",["^ ","^5",["^ ","^6","reagent/impl/component.cljs","^7",10,"^8",20,"^9",10,"^:",39,"~:dynamic",true,"~:declared",true],"^Q","^37","^6","reagent/impl/component.cljs","^:",39,"^8",1,"^6T",true,"^7",10,"^6U",true,"^9",10,"^61","^5Q"],"~$get-children",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",39,"^8",7,"^9",39,"^:",19,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"^Q","^1P","^6","reagent/impl/component.cljs","^:",19,"^5L",["^1;",[["~$c"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",39,"^5P",["^P",[null,"~$clj","^5Q","^5R"]],"^9",39,"^5S",1,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"~$camelify-map-keys",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",236,"^8",7,"^9",236,"^:",24,"^5J",["^1;",["^5K",["^1;",[["^6:"]]]]]],"^Q","^1S","^6","reagent/impl/component.cljs","^:",24,"^5L",["^1;",[["^6:"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",236,"^5P",["^P",[null,"^5Q"]],"^9",236,"^5S",1,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^6:"]]]]]],"~$cljsify",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",281,"^8",7,"^9",281,"^:",14,"^5J",["^1;",["^5K",["^1;",[["~$body","^5Z"]]]]]],"^Q","^2O","^6","reagent/impl/component.cljs","^:",14,"^5L",["^1;",[["^6Z","^5Z"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",281,"^5P",["^P",["^6W","^5Q"]],"^9",281,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^6Z","^5Z"]]]]]],"~$functional-render-fn",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",486,"^8",7,"^9",486,"^:",27,"^5J",["^1;",["^5K",["^1;",[["^5Z","^6B"]]]]],"^5[","Create copy of functional-render with displayName set to name of the\n  original Reagent component."],"^Q","^23","^6","reagent/impl/component.cljs","^:",27,"^5L",["^1;",[["^5Z","^6B"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",486,"^5P",["^P",["^5Q","~$js"]],"^9",486,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^5Z","^6B"]]]]],"^5[","Create copy of functional-render with displayName set to name of the\n  original Reagent component."],"~$react-class?",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",51,"^8",16,"^9",51,"^:",28,"^61","^6@","^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"^Q","^2W","^6","reagent/impl/component.cljs","^:",28,"^5L",["^1;",[["~$c"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",51,"^5P","^6@","^9",51,"^5S",1,"^61","^6@","^5T",true,"^5J",["^1;",["^5K",["^1;",[["~$c"]]]]]],"~$cache-react-class",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",356,"^8",7,"^9",356,"^:",24,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$c","~$constructor"]]]]]],"^Q","^2I","^6","reagent/impl/component.cljs","^:",24,"^5L",["^1;",[["^5Z","~$c","^73"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",356,"^9",356,"^5S",3,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^5Z","~$c","^73"]]]]]],"~$custom-wrapper",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",135,"^8",7,"^9",135,"^:",21,"^5J",["^1;",["^5K",["^1;",[["^5V","~$f"]]]]]],"^Q","^1T","^6","reagent/impl/component.cljs","^:",21,"^5L",["^1;",[["^5V","~$f"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",135,"^9",135,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^5V","~$f"]]]]]],"~$create-class",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",295,"^8",7,"^9",295,"^:",19,"^5J",["^1;",["^5K",["^1;",[["^6Z","^5Z"]]]]],"^5[","Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics."],"^Q","^2S","^6","reagent/impl/component.cljs","^:",19,"^5L",["^1;",[["^6Z","^5Z"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",295,"^5P","^6D","^9",295,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^6Z","^5Z"]]]]],"^5[","Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics."],"~$wrap-funs",["^ ","^5I",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",244,"^8",7,"^9",244,"^:",16,"^5J",["^1;",["^5K",["^1;",[["~$fmap","^5Z"]]]]]],"^Q","^2<","^6","reagent/impl/component.cljs","^:",16,"^5L",["^1;",[["^77","^5Z"]]],"^5M",null,"^5N",["^1;",[null,null]],"^8",1,"^5O",false,"^7",244,"^5P",["^P",["^6W","^5Q"]],"^9",244,"^5S",2,"^5T",true,"^5J",["^1;",["^5K",["^1;",[["^77","^5Z"]]]]]]],"^19",["^ ","^J","^J","^Z","^Z","^Y","^Y","^14","^Y"],"~:cljs.analyzer/constants",["^ ","^16",["^P",["~:cljsLegacyRender","~:else","~:childContextTypes","~:displayName","~:contextTypes","~:getDerivedStateFromProps","~:getDerivedStateFromError","~:componentWillUnmount","~:shouldComponentUpdate","~:reagentRender","~:no-cache","~:render","~:reagent-render","~:getInitialState","~:constructor","~:componentFunction","~:contextType"]],"~:order",["^7:","^7C","^7A","^7@","^7D","^7B","^7H","^7<","^79","^7;","^7=","^7I","^7>","^7?","^7F","^7G","^7E"]],"^1?",["^ ","^17",["^P",[]]],"^1@",["^ "],"^1A",["^11","^Z","^10","^?","^W","^12","^X","^Y","^J"]],"^T","^R","~:ns-specs",["^ "],"~:ns-spec-vars",["^P",[]],"~:compiler-options",["^3G",[["^7M","~:static-fns"],true,["^7M","~:shadow-tweaks"],null,["^7M","~:source-map-inline"],null,["^7M","~:elide-asserts"],false,["^7M","~:optimize-constants"],null,["^7M","^1F"],null,["^7M","~:external-config"],null,["^7M","~:tooling-config"],null,["^7M","~:emit-constants"],null,["^7M","~:load-tests"],null,["^7M","~:form-size-threshold"],null,["^7M","~:data-readers"],null,["^7M","~:infer-externs"],"~:auto",["^7M","^1H"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7M","~:fn-invoke-direct"],null,["^7M","~:source-map"],"/dev/null"]]]