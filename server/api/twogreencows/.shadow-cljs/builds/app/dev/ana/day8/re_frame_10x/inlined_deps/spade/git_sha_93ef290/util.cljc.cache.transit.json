["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.inlined_deps.spade.git_sha_93ef290.util');\n/**\n * Given a style factory function, return an appropriate name for its\n * style. This function assumes it will be called *once* for any given\n * factory; subsequent calls for the same factory *may not* return the\n * same value (especially under :simple optimizations).\n */\nday8.re_frame_10x.inlined_deps.spade.git_sha_93ef290.util.factory__GT_name = (function day8$re_frame_10x$inlined_deps$spade$git_sha_93ef290$util$factory__GT_name(factory){\nvar given_name = factory.name;\nif(cljs.core.empty_QMARK_(given_name)){\nreturn cljs.core.name(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"SPD\"));\n} else {\nreturn clojure.string.replace(clojure.string.replace(clojure.string.replace(given_name,/[_-]factory\\$/,\"\"),/[_$]/,\"-\"),/^-/,\"_\");\n}\n});\nday8.re_frame_10x.inlined_deps.spade.git_sha_93ef290.util.sanitize = (function day8$re_frame_10x$inlined_deps$spade$git_sha_93ef290$util$sanitize(s){\nreturn clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),/[^A-Za-z0-9-_]/,\"-\");\n});\nday8.re_frame_10x.inlined_deps.spade.git_sha_93ef290.util.params__GT_key = (function day8$re_frame_10x$inlined_deps$spade$git_sha_93ef290$util$params__GT_key(p){\ntry{return cljs.core.hash(p);\n}catch (e83503){var _ = e83503;\nreturn null;\n}});\nday8.re_frame_10x.inlined_deps.spade.git_sha_93ef290.util.build_style_name = (function day8$re_frame_10x$inlined_deps$spade$git_sha_93ef290$util$build_style_name(base,style_key,params){\nif(cljs.core.truth_(style_key)){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(base),\"_\",day8.re_frame_10x.inlined_deps.spade.git_sha_93ef290.util.sanitize(style_key)].join('');\n} else {\nif(cljs.core.seq(params)){\nvar temp__5751__auto__ = day8.re_frame_10x.inlined_deps.spade.git_sha_93ef290.util.params__GT_key(params);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar pkey = temp__5751__auto__;\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(base),\"_\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(pkey)].join('');\n} else {\nvar msg = [\"WARNING: no key provided for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(base)].join('');\nconsole.warn(msg);\n\nreturn base;\n}\n} else {\nreturn base;\n\n}\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",71,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^R","~$str","^R","~$cljs.core","^T","~$goog","^U"],"~:seen",["^K",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^T","^T"],"~:form",["~#list",["~$ns","^M",["^[",["^W",["^R","~:as","^S"]]]]],"~:flags",["^ ","^W",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^R"]],"^O","^M","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc"],"~:compiled-at",1626505521439,"~:resource-name","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","~:warnings",[],"~:source","(ns ^:no-doc day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util\n  (:require [clojure.string :as str]))\n\n(defn factory->name\n  \"Given a style factory function, return an appropriate name for its\n   style. This function assumes it will be called *once* for any given\n   factory; subsequent calls for the same factory *may not* return the\n   same value (especially under :simple optimizations).\"\n  [factory]\n  (let [given-name #?(:cljs (.-name factory)\n                      :clj (-> factory meta :name str))]\n    (if (empty? given-name)\n      ; under :simple optimizations, the way the function is declared does\n      ; not leave any value for its name. so... generate one!\n      (name (gensym \"SPD\"))\n\n      ; normal case: base the style name on the factory function's name.\n      ; this lets us have descriptive names in dev, and concise names in\n      ; prod, without having to embed anything extra in the file\n      (-> given-name\n          (str/replace #\"[_-]factory\\$\" \"\")\n          (str/replace #\"[_$]\" \"-\")\n          (str/replace #\"^-\" \"_\")))))\n\n(defn sanitize [s]\n  (-> s\n      str\n      (str/replace #\"[^A-Za-z0-9-_]\" \"-\")))\n\n(defn params->key [p]\n  (try\n    (hash p)\n    (catch #?(:cljs :default\n              :clj Throwable) _\n      nil)))\n\n(defn build-style-name [base style-key params]\n  (cond\n    ; easy case: a key was provided\n    style-key (str base \"_\" (sanitize style-key))\n\n    (seq params) (if-let [pkey (params->key params)]\n                   (str base \"_\" pkey)\n\n                   (let [msg (str \"WARNING: no key provided for \" base)]\n                     #?(:cljs (js/console.warn msg)\n                        :clj (throw (Exception. msg)))\n                     base))\n\n    ; easiest case: no key is necessary\n    :else base))\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAGA;;;;;;6EAAA,7EAAMA,kKAKHC;AALH,AAME,IAAMC,aAAoB,AAAQD;AAAlC,AAEE,GAAI,AAACE,uBAAOD;AAGV,OAACE,eAAK,+CAAA,/CAACC;;4EAKHH,vBACA,kCAAA,gBAAA,lDAACI,vBACD,6EAAA,OAAA,pFAACA,9BACD,uHAAA,KAAA,rHAACA;;;AAEX,qEAAA,rEAAMC,kJAAUC;AAAhB,0EACMA,1EAEA,8BAAA,+CAAA,iBAAA,vFAACF;;AAEP,2EAAA,3EAAMG,8JAAaC;AAAnB,AACE,IAAA,AACE,OAACE,eAAKF;gBADR,QAAAC,JAG4BE;AAH5B,AAAA;;AAMF,6EAAA,7EAAMC,kKAAkBC,KAAKC,UAAUC;AAAvC,AACE,oBAEED;AAAU,0DAAA,NAAKD,UAAS,AAACR,mEAASS;;AAFpC,GAIE,AAACE,cAAID;AAAQ,IAAAE,qBAAc,AAACV,yEAAYQ;AAA3B,AAAA,oBAAAE;AAAA,WAAAA,PAASC;AAAT,AACE,0DAAA,NAAKL,sDAASK;;AAEd,IAAMC,MAAI,CAAA,4EAAqCN;AAA/C,AACW,AAACO,aAAgBD;;AAE1BN;;;AAVnB,AAaQA","names",["day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/factory->name","factory","given-name","cljs.core/empty?","cljs.core/name","cljs.core.gensym","clojure.string/replace","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/sanitize","s","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/params->key","p","e83503","cljs.core/hash","_","day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/build-style-name","base","style-key","params","cljs.core/seq","temp__5751__auto__","pkey","msg","js/console.warn"]],"~:used-vars",["^K",["~$cljs.core/hash","~$cljs.core/seq","~$js/console.warn","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/sanitize","~$cljs.core/empty?","~$clojure.string/replace","~$cljs.core/gensym","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/factory->name","~$cljs.core/name","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/params->key","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.util/build-style-name"]]],"~:cache-keys",["~#cmap",[["^16","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc"],["734eb465a07e581dba8038166630349310483f51","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^U","^T","^R"]]],["^16","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","~$goog.dom.HtmlElement"]]],["^16","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","~$goog.array","~$goog.asserts"]]],["^16","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1T","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^16","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1U","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1X"]]],["^16","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1U"]]],["^16","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1U"]]],"~:SHADOW-TIMESTAMP",[1621409642000,1621409642000,1620991109000],["^16","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1U","~$goog.reflect"]]],["^16","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1U","~$goog.html.trustedtypes","^1[","^20","^21","^22"]]],["^16","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1T","^1U","~$goog.html.SafeUrl","^21","^22","^1X"]]],["^16","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1U","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^26","^1Z","~$goog.html.uncheckedconversions","^21","^1X"]]],["^16","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^16","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1T","^1U","~$goog.dom.TagName","~$goog.dom.tags","^2:","^2;","~$goog.html.SafeStyleSheet","^26","^1Z","^25","^1[","^20","~$goog.labs.userAgent.browser","^1W","^21","^22","^1X"]]],["^16","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1W"]]],["^16","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^16","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1T","^1U","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^16","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",[]]],["^16","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1T","^1W"]]],["^16","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^T","^2E","~$goog.string.StringBuffer"]]],["^16","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","~$goog.dom.safe","^2<","^21","^1X"]]],["^16","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1X"]]],["^16","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1T","^1U","^28","~$goog.math"]]],["^16","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1U","^29","^2:","^2;","^2A","^26","^1Z","^21","^1X"]]],["^16","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U"]]],["^16","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","~$goog.math.Long","~$goog.math.Integer","^2E","^1W","^1T","~$goog.Uri","^2K"]]],["^16","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1U","^25","^21","^22"]]],["^16","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1T","^1U","^2;","^1W","^21","^22","^1X"]]],["^16","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^24"]]],["^16","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1T","^1U","^2E"]]],["^16","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1O",["^ ","^1P",null,"^1Q",["^K",[]],"^1R",["^U","^1U","^22"]]]]],"~:clj-info",["^ ","jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1620986767000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596475466000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1620991109000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","^7",1,"^8",14,"^9",1,"^:",71,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",[]],"^L","^M","^P",null,"^Q",["^ ","^R","^R","^S","^R","^T","^T","^U","^U"],"^V",["^K",["^W"]],"^X",null,"~:defs",["^ ","~$factory->name",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","^7",4,"^8",7,"^9",4,"^:",20,"~:arglists",["^[",["~$quote",["^[",[["~$factory"]]]]],"~:doc","Given a style factory function, return an appropriate name for its\n   style. This function assumes it will be called *once* for any given\n   factory; subsequent calls for the same factory *may not* return the\n   same value (especially under :simple optimizations)."],"^L","^1I","^6","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","^:",20,"~:method-params",["^[",[["^3G"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^8",1,"~:variadic?",false,"^7",4,"~:ret-tag","~$string","^9",4,"~:max-fixed-arity",1,"~:fn-var",true,"^3E",["^[",["^3F",["^[",[["^3G"]]]]],"^3H","Given a style factory function, return an appropriate name for its\n   style. This function assumes it will be called *once* for any given\n   factory; subsequent calls for the same factory *may not* return the\n   same value (especially under :simple optimizations)."],"~$sanitize",["^ ","^3D",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","^7",25,"^8",7,"^9",25,"^:",15,"^3E",["^[",["^3F",["^[",[["~$s"]]]]]],"^L","^1E","^6","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","^:",15,"^3I",["^[",[["~$s"]]],"^3J",null,"^3K",["^[",[null,null]],"^8",1,"^3L",false,"^7",25,"^3M","^3N","^9",25,"^3O",1,"^3P",true,"^3E",["^[",["^3F",["^[",[["~$s"]]]]]],"~$params->key",["^ ","^3D",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","^7",30,"^8",7,"^9",30,"^:",18,"^3E",["^[",["^3F",["^[",[["~$p"]]]]]],"^L","^1K","^6","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","^:",18,"^3I",["^[",[["~$p"]]],"^3J",null,"^3K",["^[",[null,null]],"^8",1,"^3L",false,"^7",30,"^9",30,"^3O",1,"^3P",true,"^3E",["^[",["^3F",["^[",[["~$p"]]]]]],"~$build-style-name",["^ ","^3D",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","^7",37,"^8",7,"^9",37,"^:",23,"^3E",["^[",["^3F",["^[",[["~$base","~$style-key","~$params"]]]]]],"^L","^1L","^6","day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/util.cljc","^:",23,"^3I",["^[",[["^3T","^3U","^3V"]]],"^3J",null,"^3K",["^[",[null,null]],"^8",1,"^3L",false,"^7",37,"^3M",["^K",[null,"^3N"]],"^9",37,"^3O",3,"^3P",true,"^3E",["^[",["^3F",["^[",[["^3T","^3U","^3V"]]]]]]],"^Y",["^ ","^T","^T"],"~:cljs.analyzer/constants",["^ ","^V",["^K",["~:else"]],"~:order",["^3X"]],"^12",["^ ","^W",["^K",[]]],"^13",["^ "],"^14",["^U","^T","^R"]],"^O","^M","~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^1N",[["^40","~:static-fns"],true,["^40","~:shadow-tweaks"],null,["^40","~:source-map-inline"],null,["^40","~:elide-asserts"],false,["^40","~:optimize-constants"],null,["^40","^19"],null,["^40","~:external-config"],null,["^40","~:tooling-config"],null,["^40","~:emit-constants"],null,["^40","~:load-tests"],null,["^40","~:form-size-threshold"],null,["^40","~:data-readers"],null,["^40","~:infer-externs"],"~:auto",["^40","^1;"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^40","~:fn-invoke-direct"],null,["^40","~:source-map"],"/dev/null"]]]