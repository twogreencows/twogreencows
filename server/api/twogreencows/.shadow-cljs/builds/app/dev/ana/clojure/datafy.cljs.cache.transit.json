["^ ","~:output",["^ ","~:js","goog.provide('clojure.datafy');\n/**\n * Attempts to return x as data.\n *   datafy will return the value of clojure.protocols/datafy. If\n *   the value has been transformed and the result supports\n *   metadata, :clojure.datafy/obj will be set on the metadata to the\n *   original value of x.\n */\nclojure.datafy.datafy = (function clojure$datafy$datafy(x){\nvar v = clojure.core.protocols.datafy(x);\nif((v === x)){\nreturn v;\n} else {\nif((((!((v == null))))?(((((v.cljs$lang$protocol_mask$partition0$ & (262144))) || ((cljs.core.PROTOCOL_SENTINEL === v.cljs$core$IWithMeta$))))?true:false):false)){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(v,cljs.core.assoc,new cljs.core.Keyword(\"clojure.datafy\",\"obj\",\"clojure.datafy/obj\",-330079421),x);\n} else {\nreturn v;\n}\n}\n});\n/**\n * Returns (possibly transformed) v in the context of coll and k (a\n *   key/index or nil). Callers should attempt to provide the key/index\n *   context k for Indexed/Associative/ILookup colls if possible, but not\n *   to fabricate one e.g. for sequences (pass nil). nav will return the\n *   value of clojure.core.protocols/nav.\n */\nclojure.datafy.nav = (function clojure$datafy$nav(coll,k,v){\nreturn clojure.core.protocols.nav(coll,k,v);\n});\nclojure.datafy.datify_ref = (function clojure$datafy$datify_ref(r){\nreturn cljs.core.with_meta(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref(r)], null),cljs.core.meta(r));\n});\n(cljs.core.Var.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Var.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Reduced.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Reduced.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Atom.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Atom.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Volatile.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Volatile.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Delay.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Delay.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/datafy.cljs","~:line",11,"~:column",5,"~:end-line",11,"~:end-column",19,"~:doc","Functions to turn objects into data. Alpha, subject to change"],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$highlight.js","~$module$node_modules$highlight_DOT_js$lib$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$clojure.datafy","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.core.protocols","^R","~$p","^R","~$cljs.core","^S","~$goog","^T"],"~:seen",["^K",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^S","^S"],"~:form",["~#list",["~$ns","^M",["^Z",["^V",["^R","~:as","~$p"]]]]],"~:flags",["^ ","^V",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^R"]],"^O","^M","~:resource-id",["~:shadow.build.classpath/resource","clojure/datafy.cljs"],"~:compiled-at",1626505536021,"~:resource-name","clojure/datafy.cljs","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns\n  ^{:doc \"Functions to turn objects into data. Alpha, subject to change\"}\n    clojure.datafy\n  (:require [clojure.core.protocols :as p]))\n\n(defn datafy\n  \"Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x.\"\n  [x]\n  (let [v (p/datafy x)]\n    (if (identical? v x)\n      v\n      (if (implements? IWithMeta v)\n        (vary-meta v assoc ::obj x\n                   ;; Circling back to this at a later date per @dnolen\n                   ;; ::class (-> x .-constructor .-name symbol)\n                   )\n        v))))\n\n(defn nav\n  \"Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav.\"\n  [coll k v]\n  (p/nav coll k v))\n\n(defn- datify-ref [r]\n  (with-meta [(deref r)] (meta r)))\n\n(extend-protocol p/Datafiable\n  Var\n  (datafy [r] (datify-ref r))\n\n  Reduced\n  (datafy [r] (datify-ref r))\n\n  Atom\n  (datafy [r] (datify-ref r))\n\n  Volatile\n  (datafy [r] (datify-ref r))\n\n  Delay\n  (datafy [r] (datify-ref r)))\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAaA;;;;;;;wBAAA,xBAAMA,wDAMHC;AANH,AAOE,IAAMC,IAAE,AAACC,8BAASF;AAAlB,AACE,GAAI,CAAYC,MAAED;AAChBC;;AACA,GAAI,EAAA,GAAA,MAAA,SAAA,EAAA,EAAA,CAAA,wCAAA,eAAA,CAAAE,gCAAA,2BAAA,KAAA,OAAA,lJAAuBF,mBAAAA,wFAAAA;AACzB,2EAAA,pEAACG,kDAAUH,EAAEI,8FAAYL;;AAIzBC;;;;AAER;;;;;;;qBAAA,rBAAMK,kDAMHC,KAAKC,EAAEP;AANV,AAOE,OAACQ,2BAAMF,KAAKC,EAAEP;;AAEhB,4BAAA,5BAAOS,gEAAYC;AAAnB,AACE,2BAAA,pBAACC,uGAAW,AAACC,gBAAMF,WAAI,AAACG,eAAKH;;AAE/B,AAAA,AAAA,CAAA,AAAA,6DAAAR,7DACEY;;AADF,CAAA,AAAA,AACEA,2EACA,WAASJ;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC;;;AAF1B,AAAA,CAAA,AAAA,iEAAAR,jEAIEa;;AAJF,CAAA,AAAA,AAIEA,+EACA,WAASL;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC;;;AAL1B,AAAA,CAAA,AAAA,8DAAAR,9DAOEc;;AAPF,CAAA,AAAA,AAOEA,4EACA,WAASN;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC;;;AAR1B,AAAA,CAAA,AAAA,kEAAAR,lEAUEe;;AAVF,CAAA,AAAA,AAUEA,gFACA,WAASP;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC;;;AAX1B,AAAA,CAAA,AAAA,+DAAAR,/DAaEgB;;AAbF,CAAA,AAAA,AAaEA,6EACA,WAASR;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC","names",["clojure.datafy/datafy","x","v","clojure.core.protocols/datafy","cljs.core/PROTOCOL_SENTINEL","cljs.core.vary_meta","cljs.core/assoc","clojure.datafy/nav","coll","k","clojure.core.protocols/nav","clojure.datafy/datify-ref","r","cljs.core/with-meta","cljs.core/deref","cljs.core/meta","cljs.core/Var","cljs.core/Reduced","cljs.core/Atom","cljs.core/Volatile","cljs.core/Delay"]],"~:used-vars",["^K",["~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/Reduced","~$cljs.core/deref","~$cljs.core/Volatile","~$cljs.core/Delay","~$cljs.core/Var","~$clojure.datafy/nav","~$cljs.core/vary-meta","~$cljs.core/with-meta","~$clojure.datafy/datafy","~$cljs.core/meta","~$clojure.datafy/datify-ref","~$cljs.core/not","~$cljs.core/Atom","~$cljs.core/assoc","~$clojure.core.protocols/nav"]]],"~:cache-keys",["~#cmap",[["^15","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^T","~$goog.dom.HtmlElement"]]],["^15","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","~$goog.array","~$goog.asserts"]]],["^15","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1X","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^15","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1Y","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^20"]]],["^15","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1Y"]]],["^15","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1Y"]]],"~:SHADOW-TIMESTAMP",[1621409642000,1621409642000,1620991109000],["^15","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1Y","~$goog.reflect"]]],["^15","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1Y","~$goog.html.trustedtypes","^23","^24","^25","^26"]]],["^15","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1X","^1Y","~$goog.html.SafeUrl","^25","^26","^20"]]],["^15","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1Y","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2:","^22","~$goog.html.uncheckedconversions","^25","^20"]]],["^15","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^15","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1X","^1Y","~$goog.dom.TagName","~$goog.dom.tags","^2>","^2?","~$goog.html.SafeStyleSheet","^2:","^22","^29","^23","^24","~$goog.labs.userAgent.browser","^1[","^25","^26","^20"]]],["^15","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1["]]],["^15","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^15","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1X","^1Y","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^15","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","clojure/core/protocols.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^S"]]],["^15","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",[]]],["^15","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1X","^1["]]],["^15","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","~$goog.dom.safe","^2@","^25","^20"]]],["^15","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^20"]]],["^15","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1X","^1Y","^2<","~$goog.math"]]],["^15","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1Y","^2=","^2>","^2?","^2E","^2:","^22","^25","^20"]]],["^15","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T"]]],["^15","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","~$goog.math.Long","~$goog.math.Integer","^2I","^1[","^1X","~$goog.Uri","~$goog.string.StringBuffer"]]],["^15","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1Y","^29","^25","^26"]]],["^15","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1X","^1Y","^2?","^1[","^25","^26","^20"]]],["^15","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^28"]]],["^15","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1X","^1Y","^2I"]]],["^15","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^1Y","^26"]]],["^15","clojure/datafy.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^1S",["^ ","^1T",null,"^1U",["^K",[]],"^1V",["^T","^S","^R"]]]]],"~:clj-info",["^ ","jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1620986767000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1596475466000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1620986526000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1620991109000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1620800833000,"jar:file:/Users/lcerveau/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1620991109000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","clojure/datafy.cljs","^7",11,"^8",5,"^9",11,"^:",19,"^;","Functions to turn objects into data. Alpha, subject to change"],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",[]],"^L","^M","^P",null,"^Q",["^ ","^R","^R","~$p","^R","^S","^S","^T","^T"],"^U",["^K",["^V"]],"^W",null,"~:defs",["^ ","~$datafy",["^ ","~:protocol-inline",null,"^5",["^ ","^6","clojure/datafy.cljs","^7",14,"^8",7,"^9",14,"^:",13,"~:arglists",["^Z",["~$quote",["^Z",[["~$x"]]]]],"^;","Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x."],"^L","^1J","^6","clojure/datafy.cljs","^:",13,"~:method-params",["^Z",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^8",1,"~:variadic?",false,"^7",14,"~:ret-tag",["^K",["~$clj","~$any","~$cljs.core/MetaFn","~$clj-nil"]],"^9",14,"~:max-fixed-arity",1,"~:fn-var",true,"^3I",["^Z",["^3J",["^Z",[["~$x"]]]]],"^;","Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x."],"~$nav",["^ ","^3H",null,"^5",["^ ","^6","clojure/datafy.cljs","^7",31,"^8",7,"^9",31,"^:",10,"^3I",["^Z",["^3J",["^Z",[["~$coll","~$k","~$v"]]]]],"^;","Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav."],"^L","^1G","^6","clojure/datafy.cljs","^:",10,"^3K",["^Z",[["^3W","~$k","~$v"]]],"^3L",null,"^3M",["^Z",[null,null]],"^8",1,"^3N",false,"^7",31,"^3O","^3Q","^9",31,"^3T",3,"^3U",true,"^3I",["^Z",["^3J",["^Z",[["^3W","~$k","~$v"]]]]],"^;","Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav."],"~$datify-ref",["^ ","^3H",null,"^5",["^ ","^6","clojure/datafy.cljs","^7",40,"^8",8,"^9",40,"^:",18,"~:private",true,"^3I",["^Z",["^3J",["^Z",[["~$r"]]]]]],"^3Y",true,"^L","^1L","^6","clojure/datafy.cljs","^:",18,"^3K",["^Z",[["~$r"]]],"^3L",null,"^3M",["^Z",[null,null]],"^8",1,"^3N",false,"^7",40,"^3O",["^K",["^3P","^3R","^3S"]],"^9",40,"^3T",1,"^3U",true,"^3I",["^Z",["^3J",["^Z",[["~$r"]]]]]]],"^X",["^ ","^S","^S"],"~:cljs.analyzer/constants",["^ ","^U",["^K",["~:clojure.datafy/obj"]],"~:order",["^3["]],"^11",["^ ","^V",["^K",[]]],"^12",["^ "],"^13",["^T","^S","^R"]],"^O","^M","~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^1R",[["^43","~:static-fns"],true,["^43","~:shadow-tweaks"],null,["^43","~:source-map-inline"],null,["^43","~:elide-asserts"],false,["^43","~:optimize-constants"],null,["^43","^18"],null,["^43","~:external-config"],null,["^43","~:tooling-config"],null,["^43","~:emit-constants"],null,["^43","~:load-tests"],null,["^43","~:form-size-threshold"],null,["^43","~:data-readers"],null,["^43","~:infer-externs"],"~:auto",["^43","^1:"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^43","~:fn-invoke-direct"],null,["^43","~:source-map"],"/dev/null"]]]